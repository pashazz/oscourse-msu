!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon2
ALT	kern/console.c	223;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/date.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/memlayout.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sigcount.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sigfact.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sigpingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testsignal.asm	/^#define ASM 1$/;"	d
ASM	obj/user/vdate.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
Align	kern/alloc.h	/^typedef long Align; \/* for alignment to long boundary *\/$/;"	t
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +001[0-9a-z]{5} +eip +00100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCD2BIN	kern/kclock.h	59;"	d
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
C	kern/console.c	290;"	d	file:
CAPSLOCK	kern/console.c	225;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	19;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONFIG_KSPACE	conf/lab.mk	/^CONFIG_KSPACE=n$/;"	m
CONSBUFSIZE	kern/console.c	389;"	d	file:
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	222;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
DEFAULT_FREQ	kern/tsc.c	10;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/date.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/memlayout.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sigcount.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sigfact.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sigpingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testsignal.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/vdate.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab9	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	229;"	d	file:
ELF32_ST_BIND	inc/elf.h	67;"	d
ELF32_ST_INFO	inc/elf.h	69;"	d
ELF32_ST_TYPE	inc/elf.h	68;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	83;"	d
ELF_PROG_FLAG_READ	inc/elf.h	85;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	84;"	d
ELF_PROG_LOAD	inc/elf.h	80;"	d
ELF_SHN_UNDEF	inc/elf.h	94;"	d
ELF_SHT_NULL	inc/elf.h	88;"	d
ELF_SHT_PROGBITS	inc/elf.h	89;"	d
ELF_SHT_STRTAB	inc/elf.h	91;"	d
ELF_SHT_SYMTAB	inc/elf.h	90;"	d
ENVGENSHIFT	kern/env.c	29;"	d	file:
ENVRUN_RE	grade-lab3	/^ENVRUN_RE = r"^envrun (RUNNABLE|RUNNING):? (\\d)$"$/;"	v
ENVX	inc/env.h	31;"	d
ENV_CREATE	kern/env.h	49;"	d
ENV_CREATE_KERNEL_TYPE	kern/env.h	40;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon8
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon8
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon8
ENV_PASTE3	kern/env.h	38;"	d
ENV_RE	grade-lab3	/^ENV_RE = r"^\\[(?:\\d+)\\] (new|free) env (\\d+)$"$/;"	v
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon8
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon8
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_IDLE	inc/env.h	/^	ENV_TYPE_IDLE = 0,$/;"	e	enum:EnvType
ENV_TYPE_KERNEL	inc/env.h	/^	ENV_TYPE_KERNEL,$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER,$/;"	e	enum:EnvType
ENV_WAITING	inc/env.h	/^    ENV_WAITING,$/;"	e	enum:__anon8
ET_CORE	inc/elf.h	75;"	d
ET_DYN	inc/elf.h	74;"	d
ET_EXEC	inc/elf.h	73;"	d
ET_HIPROC	inc/elf.h	77;"	d
ET_LOPROC	inc/elf.h	76;"	d
ET_NONE	inc/elf.h	71;"	d
ET_REL	inc/elf.h	72;"	d
EXTPHYSMEM	inc/memlayout.h	97;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon6
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	= 12,	\/\/ Bad path$/;"	e	enum:__anon6
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon6
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon6
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	= 13,	\/\/ File already exists$/;"	e	enum:__anon6
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon6
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon6
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	= 10,	\/\/ Too many files are open$/;"	e	enum:__anon6
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	= 14,	\/\/ File not a valid executable$/;"	e	enum:__anon6
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	= 11, 	\/\/ File or block not found$/;"	e	enum:__anon6
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	= 15,	\/\/ Operation not supported$/;"	e	enum:__anon6
E_NO_DISK	inc/error.h	/^	E_NO_DISK	= 9,	\/\/ No free space left on disk$/;"	e	enum:__anon6
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon6
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon6
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon6
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf32_Sym	inc/elf.h	/^struct Elf32_Sym {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FDTABLE	lib/fd.c	8;"	d	file:
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon11
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon11
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon11
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon11
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon11
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon11
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon11
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon11
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
GRADE3_FUNC	prog/test2.c	/^void (* volatile GRADE3_FUNC) (unsigned);$/;"	v
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Header	kern/alloc.h	/^typedef union header Header;$/;"	t	typeref:union:header
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
IOPHYSMEM	inc/memlayout.h	96;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC1_CMND	kern/picirq.h	15;"	d
IO_PIC1_DATA	kern/picirq.h	16;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_PIC2_CMND	kern/picirq.h	18;"	d
IO_PIC2_DATA	kern/picirq.h	19;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC_CMND	kern/kclock.h	11;"	d
IO_RTC_DATA	kern/kclock.h	12;"	d
IRQ_CLOCK	inc/trap.h	39;"	d
IRQ_ERROR	inc/trap.h	41;"	d
IRQ_IDE	inc/trap.h	40;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	21;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ALLOC_H	kern/alloc.h	2;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_SIGNAL_H	inc/signal.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TIME_H	inc/time.h	5;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_VSYSCALL_H	inc/vsyscall.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_KERN_TSC_H	kern/tsc.h	4;"	d
JOS_KERN_VSYSCALL_H	kern/vsyscall.h	2;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	89;"	d
KERNBASE	inc/memlayout.h	90;"	d
KERNBASE	inc/memlayout.h	91;"	d
KERNTOP	inc/memlayout.h	88;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	100;"	d
KSTKGAP	inc/memlayout.h	102;"	d
KSTKSIZE	inc/memlayout.h	101;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=12$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	29;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	168;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon6
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXNAMELEN	inc/fs.h	17;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_IRQS	kern/picirq.h	9;"	d
MAX_QUICK_PIT_ITERATIONS	kern/tsc.c	85;"	d	file:
MAX_QUICK_PIT_MS	kern/tsc.c	84;"	d	file:
MC_NVRAM_SIZE	kern/kclock.h	37;"	d
MC_NVRAM_START	kern/kclock.h	36;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	106;"	d
MMIOLIM	inc/memlayout.h	105;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	40;"	d	file:
NCPU	kern/cpu.h	10;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	30;"	d
NHANDLERS	fs/serv.c	304;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NMI_LOCK	inc/x86.h	296;"	d
NO	kern/console.c	219;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSIGNALS	inc/signal.h	/^    NSIGNALS$/;"	e	enum:__anon5
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon10
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	226;"	d	file:
NVRAM_BASEHI	kern/kclock.h	41;"	d
NVRAM_BASELO	kern/kclock.h	40;"	d
NVRAM_CENTURY	kern/kclock.h	52;"	d
NVRAM_EXTHI	kern/kclock.h	45;"	d
NVRAM_EXTLO	kern/kclock.h	44;"	d
NVRAM_PEXTHI	kern/kclock.h	49;"	d
NVRAM_PEXTLO	kern/kclock.h	48;"	d
NVSYSCALLS	inc/vsyscall.h	/^	NVSYSCALLS$/;"	e	enum:__anon4
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
O_ACCMODE	inc/lib.h	136;"	d
O_CREAT	inc/lib.h	138;"	d
O_EXCL	inc/lib.h	140;"	d
O_MKDIR	inc/lib.h	141;"	d
O_RDONLY	inc/lib.h	133;"	d
O_RDWR	inc/lib.h	135;"	d
O_TRUNC	inc/lib.h	139;"	d
O_WRONLY	inc/lib.h	134;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Thu Sep 6 11:08:36 EDT 2012$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	144;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIC_EOI	kern/picirq.h	23;"	d
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PIT_TICK_RATE	kern/tsc.c	9;"	d	file:
POST_CHECKOUT	GNUmakefile	/^define POST_CHECKOUT$/;"	m
PRE_COMMIT	GNUmakefile	/^define PRE_COMMIT$/;"	m
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_COW	user/memlayout.c	4;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	90;"	d
PTE_SHARE	obj/user/memlayout.asm	/^#define PTE_SHARE 0x400$/;"	d
PTE_SHARE	user/memlayout.c	7;"	d	file:
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive format=raw,index=0,media=disk,file=$(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RAND_MAX	inc/random.h	4;"	d
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNTOP)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
RTC_AIE	kern/kclock.h	30;"	d
RTC_AREG	kern/kclock.h	14;"	d
RTC_BREG	kern/kclock.h	15;"	d
RTC_CREG	kern/kclock.h	16;"	d
RTC_DAY	kern/kclock.h	23;"	d
RTC_DREG	kern/kclock.h	17;"	d
RTC_HOUR	kern/kclock.h	21;"	d
RTC_MIN	kern/kclock.h	20;"	d
RTC_MON	kern/kclock.h	24;"	d
RTC_PIE	kern/kclock.h	29;"	d
RTC_SEC	kern/kclock.h	19;"	d
RTC_UIE	kern/kclock.h	31;"	d
RTC_UPDATE_IN_PROGRESS	kern/kclock.h	27;"	d
RTC_YEAR	kern/kclock.h	25;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	227;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	221;"	d	file:
SIGABRT	inc/signal.h	/^    SIGABRT  = 6,$/;"	e	enum:__anon5
SIGALRM	inc/signal.h	/^    SIGALRM  = 14,$/;"	e	enum:__anon5
SIGCHLD	inc/signal.h	/^    SIGCHLD  = 17,$/;"	e	enum:__anon5
SIGCONT	inc/signal.h	/^    SIGCONT  = 18,$/;"	e	enum:__anon5
SIGFPE	inc/signal.h	/^    SIGFPE   = 8,$/;"	e	enum:__anon5
SIGHUP	inc/signal.h	/^    SIGHUP   = 1,$/;"	e	enum:__anon5
SIGILL	inc/signal.h	/^    SIGILL   = 4,$/;"	e	enum:__anon5
SIGINT	inc/signal.h	/^    SIGINT   = 2,$/;"	e	enum:__anon5
SIGKILL	inc/signal.h	/^    SIGKILL  = 9,$/;"	e	enum:__anon5
SIGPIPE	inc/signal.h	/^    SIGPIPE  = 13,$/;"	e	enum:__anon5
SIGQUIT	inc/signal.h	/^    SIGQUIT  = 3,$/;"	e	enum:__anon5
SIGSEGV	inc/signal.h	/^    SIGSEGV  = 11,$/;"	e	enum:__anon5
SIGSTOP	inc/signal.h	/^    SIGSTOP  = 19,$/;"	e	enum:__anon5
SIGTERM	inc/signal.h	/^    SIGTERM  = 15,$/;"	e	enum:__anon5
SIGTSTP	inc/signal.h	/^    SIGTSTP  = 20,$/;"	e	enum:__anon5
SIGTTIN	inc/signal.h	/^    SIGTTIN  = 21,$/;"	e	enum:__anon5
SIGTTOU	inc/signal.h	/^    SIGTTOU  = 22,$/;"	e	enum:__anon5
SIGUSR1	inc/signal.h	/^    SIGUSR1  = 10,$/;"	e	enum:__anon5
SIGUSR2	inc/signal.h	/^    SIGUSR2  = 12,$/;"	e	enum:__anon5
SIG_DFL	inc/signal.h	30;"	d
SIG_HANDLING	inc/env.h	/^    SIG_HANDLING = 1,$/;"	e	enum:SigFlags
SIG_IGN	inc/signal.h	31;"	d
SIG_STOPPED	inc/env.h	/^    SIG_STOPPED  = 2$/;"	e	enum:SigFlags
SIG_test	inc/signal.h	/^    SIG_test = 0,$/;"	e	enum:__anon5
SPACE_SIZE	kern/alloc.c	7;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
STT_COMMON	inc/elf.h	62;"	d
STT_FILE	inc/elf.h	61;"	d
STT_FUNC	inc/elf.h	59;"	d
STT_NOTYPE	inc/elf.h	57;"	d
STT_OBJECT	inc/elf.h	58;"	d
STT_SECTION	inc/elf.h	60;"	d
STT_TLS	inc/elf.h	63;"	d
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	196;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon10
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon10
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon10
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon10
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon10
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon10
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon10
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon10
SYS_gettime	inc/syscall.h	/^	SYS_gettime,$/;"	e	enum:__anon10
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon10
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon10
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon10
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon10
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon10
SYS_sigaction	inc/syscall.h	/^    SYS_sigaction,$/;"	e	enum:__anon10
SYS_sigqueue	inc/syscall.h	/^    SYS_sigqueue,$/;"	e	enum:__anon10
SYS_sigwait	inc/syscall.h	/^    SYS_sigwait,$/;"	e	enum:__anon10
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon10
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
SigFlags	inc/env.h	/^enum SigFlags$/;"	g
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TIMES	kern/tsc.c	11;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	120;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	108;"	d
UPAGES	inc/memlayout.h	118;"	d
USED	inc/lib.h	25;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS)$/;"	m
USTABDATA	inc/memlayout.h	146;"	d
USTACKTOP	inc/memlayout.h	135;"	d
UTEMP	inc/memlayout.h	141;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	138;"	d
UTOP	inc/memlayout.h	130;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	116;"	d
UVSYS	inc/memlayout.h	123;"	d
UXSTACKTOP	inc/memlayout.h	132;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VSYS_gettime	inc/vsyscall.h	/^	VSYS_gettime,$/;"	e	enum:__anon4
VSYS_sigreturn	inc/vsyscall.h	/^    VSYS_sigreturn,$/;"	e	enum:__anon4
WHITESPACE	kern/monitor.c	167;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	195;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_INC_RANDOM_H_	inc/random.h	2;"	d
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_dev_urandom	lib/random_data.c	/^unsigned char _dev_urandom[] = {$/;"	v
_dev_urandom_len	lib/random_data.c	/^unsigned int _dev_urandom_len = 100;$/;"	v
_generall_syscall	kern/entry.S	/^_generall_syscall:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/memlayout.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sigpingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/memlayout.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sigpingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/date.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/memlayout.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/sigcount.asm	/^_start:$/;"	l
_start	obj/user/sigfact.asm	/^_start:$/;"	l
_start	obj/user/sigpingpong.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/testsignal.asm	/^_start:$/;"	l
_start	obj/user/vdate.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
add_bp	gradelib.py	/^    def add_bp(runner):$/;"	f	function:add_breakpoint
add_breakpoint	gradelib.py	/^def add_breakpoint(addr):$/;"	f
add_callback	gradelib.py	/^    def add_callback(runner):$/;"	f	function:add_gdb_command
add_gdb_command	gradelib.py	/^def add_gdb_command(callback):$/;"	f
addr	obj/fs/fs.asm	/^    addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;                 \/\/ MONO_BASE has fixed address.$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/user/sh.asm	/^again:$/;"	l
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
allocated	obj/kern/kernel.asm	/^            allocated = tmp;$/;"	d
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/date.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/date.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/memlayout.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/memlayout.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sigcount.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sigcount.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sigfact.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sigfact.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sigpingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sigpingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testsignal.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testsignal.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/vdate.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/vdate.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/date.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/memlayout.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/sigcount.asm	/^args_exist:$/;"	l
args_exist	obj/user/sigfact.asm	/^args_exist:$/;"	l
args_exist	obj/user/sigpingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/testsignal.asm	/^args_exist:$/;"	l
args_exist	obj/user/vdate.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
bad	obj/kern/kernel.asm	/^bad:$/;"	l
base	kern/alloc.c	/^static Header base = { .s = { .next = (Header *) space, .prev = (Header *) space, .size = 0 } }; \/* empty list to get started *\/$/;"	v	file:
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/date.asm	/^			base = 10;$/;"	d
base	obj/user/date.asm	/^			base = 16;$/;"	d
base	obj/user/date.asm	/^			base = 8;$/;"	d
base	obj/user/date.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/memlayout.asm	/^			base = 10;$/;"	d
base	obj/user/memlayout.asm	/^			base = 16;$/;"	d
base	obj/user/memlayout.asm	/^			base = 8;$/;"	d
base	obj/user/memlayout.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/sigcount.asm	/^			base = 10;$/;"	d
base	obj/user/sigcount.asm	/^			base = 16;$/;"	d
base	obj/user/sigcount.asm	/^			base = 8;$/;"	d
base	obj/user/sigcount.asm	/^		base = 10;$/;"	d
base	obj/user/sigfact.asm	/^			base = 10;$/;"	d
base	obj/user/sigfact.asm	/^			base = 16;$/;"	d
base	obj/user/sigfact.asm	/^			base = 8;$/;"	d
base	obj/user/sigfact.asm	/^		base = 10;$/;"	d
base	obj/user/sigpingpong.asm	/^			base = 10;$/;"	d
base	obj/user/sigpingpong.asm	/^			base = 16;$/;"	d
base	obj/user/sigpingpong.asm	/^			base = 8;$/;"	d
base	obj/user/sigpingpong.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/testsignal.asm	/^			base = 10;$/;"	d
base	obj/user/testsignal.asm	/^			base = 16;$/;"	d
base	obj/user/testsignal.asm	/^			base = 8;$/;"	d
base	obj/user/testsignal.asm	/^		base = 10;$/;"	d
base	obj/user/vdate.asm	/^			base = 10;$/;"	d
base	obj/user/vdate.asm	/^			base = 16;$/;"	d
base	obj/user/vdate.asm	/^			base = 8;$/;"	d
base	obj/user/vdate.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/date.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/memlayout.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sigcount.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sigfact.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sigpingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testsignal.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/vdate.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bind_functions	kern/env.c	/^bind_functions(struct Env *e, struct Elf *elf)$/;"	f	file:
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
bool	obj/kern/kernel.asm	/^bool is_leap_year(int year)$/;"	l
bool	obj/user/date.asm	/^bool is_leap_year(int year)$/;"	l
bool	obj/user/vdate.asm	/^bool is_leap_year(int year)$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
bp	obj/kern/kernel.asm	/^	bp = (Header *) ap - 1; \/* point to block header *\/$/;"	d
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/date.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/memlayout.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sigcount.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sigfact.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sigpingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testsignal.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/vdate.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/date.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/memlayout.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/sigcount.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sigfact.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sigpingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testsignal.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/vdate.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	prog/test2.c	10;"	d	file:
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
ceid	obj/user/memlayout.asm	/^	ceid = fork();$/;"	d
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/date.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/memlayout.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sigcount.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sigfact.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sigpingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testsignal.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/vdate.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/date.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/memlayout.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/sigcount.asm	/^char *$/;"	l
char	obj/user/sigfact.asm	/^char *$/;"	l
char	obj/user/sigpingpong.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/testsignal.asm	/^char *$/;"	l
char	obj/user/vdate.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_list	kern/alloc.c	/^static void check_list(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
clock_idt_init	kern/trap.c	/^clock_idt_init(void)$/;"	f
clock_thdlr	kern/trapentry.S	/^clock_thdlr:$/;"	l
clock_thdlr	obj/kern/kernel.asm	/^clock_thdlr:$/;"	l
clock_thdlr_addr	grade-lab4	/^clock_thdlr_addr = 0$/;"	v
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	lib/fd.c	/^close(int fdnum)$/;"	f
close_all	lib/fd.c	/^close_all(void)$/;"	f
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/date.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/memlayout.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/sigcount.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sigfact.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sigpingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testsignal.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/vdate.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon1	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/kern/kernel.asm	/^    const struct Stab *stabs = __STAB_BEGIN__, *stab_end = __STAB_END__;$/;"	t
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
continue_after_csys_exit	grade-lab3	/^def continue_after_csys_exit(out):$/;"	f
continue_after_env_pop_tf	grade-lab3	/^def continue_after_env_pop_tf(out):$/;"	f
continue_after_i386_init	grade-lab4	/^def continue_after_i386_init(out):$/;"	f
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNTOP + MONO_BUF); \/\/ Addressing lower bytes higher KERTOP mapping.$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNTOP + CGA_BUF); \/\/ Addressing lower bytes througth higher KERNTOP mapping.$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	prog/test2.c	/^int (* volatile cprintf) (const char *fmt, ...);$/;"	v
cprintf	prog/test4.c	/^int (* volatile cprintf) (const char *fmt, ...);$/;"	v
cprintf	prog/test5.c	/^int (* volatile cprintf) (const char *fmt, ...);$/;"	v
cprintf	prog/test6.c	/^int (* volatile cprintf) (const char *fmt, ...);$/;"	v
cpu_freq	kern/tsc.c	/^unsigned long cpu_freq;$/;"	v
cpu_freq	obj/kern/kernel.asm	/^        cpu_freq = DEFAULT_FREQ;$/;"	d
cpu_ts	kern/sched.c	/^struct Taskstate cpu_ts;$/;"	v	typeref:struct:Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
csys_exit	kern/env.c	/^csys_exit(void)$/;"	f
csys_exit_esp	grade-lab3	/^csys_exit_esp = []$/;"	v
csys_yield	kern/env.c	/^csys_yield(struct Trapframe *tf)$/;"	f
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.c	/^struct Env *curenv = NULL;		\/\/ The current env$/;"	v	typeref:struct:Env
curenv	kern/env.c	/^struct Env *curenv = NULL;$/;"	v	typeref:struct:Env
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^    curenv = e;$/;"	d
curenv_getid	kern/env.h	/^curenv_getid(void)$/;"	f
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/date.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/memlayout.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/sigcount.asm	/^	d = dst;$/;"	d
d	obj/user/sigfact.asm	/^	d = dst;$/;"	d
d	obj/user/sigpingpong.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/testsignal.asm	/^	d = dst;$/;"	d
d	obj/user/vdate.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
d_to_s	inc/time.h	/^int d_to_s(int d)$/;"	f
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon12
day	obj/kern/kernel.asm	/^          day = mc146818_read(0x07);$/;"	d
day	obj/kern/kernel.asm	/^    day = (day & 0x0F) + ((day \/ 16) * 10);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
deep	prog/test5.c	/^unsigned int deep = 0;$/;"	v
deep	prog/test6.c	/^unsigned int deep = 0;$/;"	v
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/kern/kernel.asm	/^        default:$/;"	l
default	obj/kern/kernel.asm	/^    default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/date.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/memlayout.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/sigcount.asm	/^		default:$/;"	l
default	obj/user/sigfact.asm	/^		default:$/;"	l
default	obj/user/sigpingpong.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/testsignal.asm	/^		default:$/;"	l
default	obj/user/vdate.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/date.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/date.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/date.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/memlayout.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/memlayout.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/memlayout.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sigcount.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sigcount.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sigcount.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sigfact.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sigfact.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sigfact.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sigpingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sigpingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sigpingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testsignal.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testsignal.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testsignal.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/vdate.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/vdate.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/vdate.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
do_test	grade-lab10	/^    def do_test():$/;"	f	function:matchtest
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/date.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/memlayout.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sigcount.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sigfact.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sigpingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testsignal.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/vdate.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^        ebp = *(uint32_t *)ebp;$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	obj/kern/kernel.asm	/^        eip = *((uint32_t *)ebp + 1);$/;"	d
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable0	kern/entrypgdir.c	/^pte_t entry_pgtable0[NPTENTRIES] = {$/;"	v
entry_pgtable0	kern/entrypgdir.c	/^pte_t entry_pgtable0[NPTENTRIES];$/;"	v
entry_pgtable1	kern/entrypgdir.c	/^pte_t entry_pgtable1[NPTENTRIES] = {$/;"	v
entry_pgtable1	kern/entrypgdir.c	/^pte_t entry_pgtable1[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_array	kern/env.c	/^struct Env env_array[NENV];$/;"	v	typeref:struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_free_list	obj/kern/kernel.asm	/^    env_free_list = envs;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_sa	inc/env.h	/^    struct sigaction env_sa[NSIGNALS];$/;"	m	struct:Env	typeref:struct:Env::sigaction
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_sigev	inc/env.h	/^    struct sigevent env_sigev[64];$/;"	m	struct:Env	typeref:struct:Env::sigevent
env_sigev_cnt	inc/env.h	/^    int env_sigev_cnt;$/;"	m	struct:Env
env_sigflags	inc/env.h	/^    uint32_t env_sigflags;$/;"	m	struct:Env
env_signo	inc/env.h	/^    int *env_signo;$/;"	m	struct:Env
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/date.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/memlayout.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/sigcount.asm	/^envid_t$/;"	l
envid_t	obj/user/sigfact.asm	/^envid_t$/;"	l
envid_t	obj/user/sigpingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/testsignal.asm	/^envid_t$/;"	l
envid_t	obj/user/vdate.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envrun_running	grade-lab4	/^envrun_running = 0$/;"	v
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	kern/env.c	/^struct Env *envs = env_array;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^    envs = boot_alloc(NENV * sizeof(*envs));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/kern/kernel.asm	/^        err = page_insert(e->env_pgdir, pp, e->env_ipc_dstva, perm);$/;"	d
err	obj/kern/kernel.asm	/^    err = envid2env(dstenvid, &dst, 1);$/;"	d
err	obj/kern/kernel.asm	/^    err = page_insert(e->env_pgdir, pp, va, perm);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/date.asm	/^				err = -err;$/;"	d
err	obj/user/date.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/date.asm	/^    err:$/;"	l
err	obj/user/date.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/forktree.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/forktree.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/forktree.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/forktree.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/forktree.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/memlayout.asm	/^				err = -err;$/;"	d
err	obj/user/memlayout.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/memlayout.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/memlayout.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/memlayout.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/memlayout.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/memlayout.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/memlayout.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/memlayout.asm	/^    err:$/;"	l
err	obj/user/memlayout.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/pingpong.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/pingpong.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/pingpong.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/pingpong.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/pingpong.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/pingpongs.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/pingpongs.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/pingpongs.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/pingpongs.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/pingpongs.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/primes.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/primes.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/primes.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/primes.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/primes.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/primespipe.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/primespipe.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/primespipe.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/primespipe.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/primespipe.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/sh.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/sh.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/sh.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/sh.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/sh.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/sigcount.asm	/^				err = -err;$/;"	d
err	obj/user/sigcount.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sigcount.asm	/^    err:$/;"	l
err	obj/user/sigcount.asm	/^err:$/;"	l
err	obj/user/sigfact.asm	/^				err = -err;$/;"	d
err	obj/user/sigfact.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sigfact.asm	/^    err:$/;"	l
err	obj/user/sigfact.asm	/^err:$/;"	l
err	obj/user/sigpingpong.asm	/^				err = -err;$/;"	d
err	obj/user/sigpingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sigpingpong.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/sigpingpong.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/sigpingpong.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/sigpingpong.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/sigpingpong.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/sigpingpong.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/sigpingpong.asm	/^    err:$/;"	l
err	obj/user/sigpingpong.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/spin.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/spin.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/spin.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/spin.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/spin.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/stresssched.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/stresssched.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/stresssched.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/stresssched.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/stresssched.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/testfdsharing.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/testfdsharing.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/testfdsharing.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/testfdsharing.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/testfdsharing.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/testpipe.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/testpipe.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/testpipe.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/testpipe.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/testpipe.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/testpiperace.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/testpiperace.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/testpiperace.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/testpiperace.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/testpiperace.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/testpiperace2.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/testpiperace2.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/testpiperace2.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/testpiperace2.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/testpiperace2.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/testpteshare.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/testpteshare.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/testpteshare.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/testpteshare.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/testpteshare.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^        err = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
err	obj/user/testshell.asm	/^        err = sys_page_map(0, va, 0, va, perm);$/;"	d
err	obj/user/testshell.asm	/^        err = sys_page_map(0, va, envid, va, PGOFF(va) | PTE_SYSCALL);$/;"	d
err	obj/user/testshell.asm	/^        err = sys_page_map(0, va, envid, va, perm);$/;"	d
err	obj/user/testshell.asm	/^    err = sys_env_set_pgfault_upcall(envid, thisenv->env_pgfault_upcall);$/;"	d
err	obj/user/testshell.asm	/^    err = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/testsignal.asm	/^				err = -err;$/;"	d
err	obj/user/testsignal.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testsignal.asm	/^    err:$/;"	l
err	obj/user/testsignal.asm	/^err:$/;"	l
err	obj/user/vdate.asm	/^				err = -err;$/;"	d
err	obj/user/vdate.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/vdate.asm	/^    err:$/;"	l
err	obj/user/vdate.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/date.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/memlayout.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/sigcount.asm	/^    err1:$/;"	l
err1	obj/user/sigfact.asm	/^    err1:$/;"	l
err1	obj/user/sigpingpong.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/testsignal.asm	/^    err1:$/;"	l
err1	obj/user/vdate.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/date.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/memlayout.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/sigcount.asm	/^    err2:$/;"	l
err2	obj/user/sigfact.asm	/^    err2:$/;"	l
err2	obj/user/sigpingpong.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/testsignal.asm	/^    err2:$/;"	l
err2	obj/user/vdate.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/date.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/memlayout.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/sigcount.asm	/^    err3:$/;"	l
err3	obj/user/sigfact.asm	/^    err3:$/;"	l
err3	obj/user/sigpingpong.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/testsignal.asm	/^    err3:$/;"	l
err3	obj/user/vdate.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/forktree.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/forktree.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/memlayout.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/memlayout.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/pingpong.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/pingpong.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/pingpongs.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/pingpongs.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/primes.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/primes.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/primespipe.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/primespipe.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/sh.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/sh.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/sigpingpong.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/sigpingpong.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/spin.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/spin.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/stresssched.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/stresssched.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/testfdsharing.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/testfdsharing.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/testpipe.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/testpipe.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/testpiperace.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/testpiperace.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/testpiperace2.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/testpiperace2.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/testpteshare.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/testpteshare.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^    error = sys_page_map(0, (void *) PFTEMP, 0, dst, PTE_P | PTE_W | PTE_U);$/;"	d
error	obj/user/testshell.asm	/^    error = sys_page_unmap(0, (void *) PFTEMP);$/;"	d
error	obj/user/testshell.asm	/^error:$/;"	l
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exit	lib/exit.c	/^exit(void)$/;"	f
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	fa                   	cli    $/;"	l
f010000d	obj/kern/kernel.asm	/^f010000d:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100014	obj/kern/kernel.asm	/^f0100014:	34 12 $/;"	l
f0100016	obj/kern/kernel.asm	/^f0100016:	b8 00 f0 11 00       	mov    $0x11f000,%eax$/;"	l
f010001b	obj/kern/kernel.asm	/^f010001b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001e	obj/kern/kernel.asm	/^f010001e:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100021	obj/kern/kernel.asm	/^f0100021:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100026	obj/kern/kernel.asm	/^f0100026:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100029	obj/kern/kernel.asm	/^f0100029:	b8 30 00 10 f0       	mov    $0xf0100030,%eax$/;"	l
f010002e	obj/kern/kernel.asm	/^f010002e:	ff e0                	jmp    *%eax$/;"	l
f0100030	obj/kern/kernel.asm	/^f0100030 <relocated>:$/;"	l
f0100030	obj/kern/kernel.asm	/^f0100030:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100035	obj/kern/kernel.asm	/^f0100035:	bc 00 f0 11 f0       	mov    $0xf011f000,%esp$/;"	l
f010003a	obj/kern/kernel.asm	/^f010003a:	e8 02 00 00 00       	call   f0100041 <i386_init>$/;"	l
f010003f	obj/kern/kernel.asm	/^f010003f <spin>:$/;"	l
f010003f	obj/kern/kernel.asm	/^f010003f:	eb fe                	jmp    f010003f <spin>$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041 <i386_init>:$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	55                   	push   %ebp$/;"	l
f0100042	obj/kern/kernel.asm	/^f0100042:	89 e5                	mov    %esp,%ebp$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	b8 cc 80 41 f0       	mov    $0xf04180cc,%eax$/;"	l
f010004c	obj/kern/kernel.asm	/^f010004c:	2d e0 20 41 f0       	sub    $0xf04120e0,%eax$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	50                   	push   %eax$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	6a 00                	push   $0x0$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	68 e0 20 41 f0       	push   $0xf04120e0$/;"	l
f0100059	obj/kern/kernel.asm	/^f0100059:	e8 73 57 00 00       	call   f01057d1 <memset>$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	e8 ff 04 00 00       	call   f0100562 <cons_init>$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	e8 6b 59 00 00       	call   f01059d3 <tsc_calibrate>$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	83 c4 08             	add    $0x8,%esp$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	68 00 61 10 f0       	push   $0xf0106100$/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	e8 43 3a 00 00       	call   f0103abd <cprintf>$/;"	l
f010007a	obj/kern/kernel.asm	/^f010007a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	68 cc 80 41 f0       	push   $0xf04180cc$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	68 1b 61 10 f0       	push   $0xf010611b$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	e8 31 3a 00 00       	call   f0103abd <cprintf>$/;"	l
f010008c	obj/kern/kernel.asm	/^f010008c:	e8 0d 12 00 00       	call   f010129e <mem_init>$/;"	l
f0100091	obj/kern/kernel.asm	/^f0100091:	e8 e6 2b 00 00       	call   f0102c7c <env_init>$/;"	l
f0100096	obj/kern/kernel.asm	/^f0100096:	e8 93 3a 00 00       	call   f0103b2e <trap_init>$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	e8 1f 3e 00 00       	call   f0103ebf <clock_idt_init>$/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	e8 14 39 00 00       	call   f01039b9 <pic_init>$/;"	l
f01000a5	obj/kern/kernel.asm	/^f01000a5:	e8 de 37 00 00       	call   f0103888 <rtc_init>$/;"	l
f01000aa	obj/kern/kernel.asm	/^f01000aa:	0f b7 05 50 23 12 f0 	movzwl 0xf0122350,%eax$/;"	l
f01000b1	obj/kern/kernel.asm	/^f01000b1:	25 ff fe 00 00       	and    $0xfeff,%eax$/;"	l
f01000b6	obj/kern/kernel.asm	/^f01000b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	e8 83 38 00 00       	call   f0103941 <irq_setmask_8259A>$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01000c1	obj/kern/kernel.asm	/^f01000c1:	6a 03                	push   $0x3$/;"	l
f01000c3	obj/kern/kernel.asm	/^f01000c3:	68 7c 95 01 00       	push   $0x1957c$/;"	l
f01000c8	obj/kern/kernel.asm	/^f01000c8:	68 d0 24 31 f0       	push   $0xf03124d0$/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	e8 9b 2d 00 00       	call   f0102e6d <env_create>$/;"	l
f01000d2	obj/kern/kernel.asm	/^f01000d2:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01000d5	obj/kern/kernel.asm	/^f01000d5:	6a 02                	push   $0x2$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	68 08 00 01 00       	push   $0x10008$/;"	l
f01000dc	obj/kern/kernel.asm	/^f01000dc:	68 c8 24 30 f0       	push   $0xf03024c8$/;"	l
f01000e1	obj/kern/kernel.asm	/^f01000e1:	e8 87 2d 00 00       	call   f0102e6d <env_create>$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6:	e8 1b 04 00 00       	call   f0100506 <kbd_intr>$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	e8 db 43 00 00       	call   f01044cb <sched_yield>$/;"	l
f01000f0	obj/kern/kernel.asm	/^f01000f0 <_panic>:$/;"	l
f01000f0	obj/kern/kernel.asm	/^f01000f0:	55                   	push   %ebp$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3:	56                   	push   %esi$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	53                   	push   %ebx$/;"	l
f01000f5	obj/kern/kernel.asm	/^f01000f5:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01000f8	obj/kern/kernel.asm	/^f01000f8:	83 3d 20 80 41 f0 00 	cmpl   $0x0,0xf0418020$/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	75 37                	jne    f0100138 <_panic+0x48>$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	89 35 20 80 41 f0    	mov    %esi,0xf0418020$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	fa                   	cli    $/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	fc                   	cld    $/;"	l
f0100109	obj/kern/kernel.asm	/^f0100109:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100112	obj/kern/kernel.asm	/^f0100112:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	68 24 61 10 f0       	push   $0xf0106124$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	e8 9e 39 00 00       	call   f0103abd <cprintf>$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100122	obj/kern/kernel.asm	/^f0100122:	53                   	push   %ebx$/;"	l
f0100123	obj/kern/kernel.asm	/^f0100123:	56                   	push   %esi$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	e8 6e 39 00 00       	call   f0103a97 <vcprintf>$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	c7 04 24 4e 6a 10 f0 	movl   $0xf0106a4e,(%esp)$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	e8 88 39 00 00       	call   f0103abd <cprintf>$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	6a 00                	push   $0x0$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d:	e8 de 08 00 00       	call   f0100a20 <monitor>$/;"	l
f0100142	obj/kern/kernel.asm	/^f0100142:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100145	obj/kern/kernel.asm	/^f0100145:	eb f1                	jmp    f0100138 <_panic+0x48>$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147 <_warn>:$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	55                   	push   %ebp$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	89 e5                	mov    %esp,%ebp$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	53                   	push   %ebx$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	68 3c 61 10 f0       	push   $0xf010613c$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	e8 5c 39 00 00       	call   f0103abd <cprintf>$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	53                   	push   %ebx$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100168	obj/kern/kernel.asm	/^f0100168:	e8 2a 39 00 00       	call   f0103a97 <vcprintf>$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	c7 04 24 4e 6a 10 f0 	movl   $0xf0106a4e,(%esp)$/;"	l
f0100174	obj/kern/kernel.asm	/^f0100174:	e8 44 39 00 00       	call   f0103abd <cprintf>$/;"	l
f0100179	obj/kern/kernel.asm	/^f0100179:	83 c4 10             	add    $0x10,%esp$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	c9                   	leave  $/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	c3                   	ret    $/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181 <serial_proc_data>:$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	55                   	push   %ebp$/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182:	89 e5                	mov    %esp,%ebp$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	ec                   	in     (%dx),%al$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	a8 01                	test   $0x1,%al$/;"	l
f010018c	obj/kern/kernel.asm	/^f010018c:	74 0b                	je     f0100199 <serial_proc_data+0x18>$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193:	ec                   	in     (%dx),%al$/;"	l
f0100194	obj/kern/kernel.asm	/^f0100194:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	eb 05                	jmp    f010019e <serial_proc_data+0x1d>$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010019e	obj/kern/kernel.asm	/^f010019e:	5d                   	pop    %ebp$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	c3                   	ret    $/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0 <cons_intr>:$/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0:	55                   	push   %ebp$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	53                   	push   %ebx$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	89 c3                	mov    %eax,%ebx$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	eb 3f                	jmp    f01001ea <cons_intr+0x4a>$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	85 c0                	test   %eax,%eax$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	74 3b                	je     f01001ea <cons_intr+0x4a>$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	83 f8 7e             	cmp    $0x7e,%eax$/;"	l
f01001b2	obj/kern/kernel.asm	/^f01001b2:	75 0f                	jne    f01001c3 <cons_intr+0x23>$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	6a 00                	push   $0x0$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	e8 62 08 00 00       	call   f0100a20 <monitor>$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	eb 27                	jmp    f01001ea <cons_intr+0x4a>$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	8b 0d 04 23 41 f0    	mov    0xf0412304,%ecx$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	89 15 04 23 41 f0    	mov    %edx,0xf0412304$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	88 81 00 21 41 f0    	mov    %al,-0xfbedf00(%ecx)$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	75 0a                	jne    f01001ea <cons_intr+0x4a>$/;"	l
f01001e0	obj/kern/kernel.asm	/^f01001e0:	c7 05 04 23 41 f0 00 	movl   $0x0,0xf0412304$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	00 00 00 $/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	ff d3                	call   *%ebx$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	75 ba                	jne    f01001ab <cons_intr+0xb>$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	c9                   	leave  $/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	c3                   	ret    $/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6 <kbd_proc_data>:$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	ec                   	in     (%dx),%al$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	a8 01                	test   $0x1,%al$/;"	l
f01001fe	obj/kern/kernel.asm	/^f01001fe:	0f 84 f0 00 00 00    	je     f01002f4 <kbd_proc_data+0xfe>$/;"	l
f0100204	obj/kern/kernel.asm	/^f0100204:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	ec                   	in     (%dx),%al$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	89 c2                	mov    %eax,%edx$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	3c e0                	cmp    $0xe0,%al$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	75 0d                	jne    f010021d <kbd_proc_data+0x27>$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	83 0d e0 20 41 f0 40 	orl    $0x40,0xf04120e0$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	c3                   	ret    $/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	55                   	push   %ebp$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	53                   	push   %ebx$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	84 c0                	test   %al,%al$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	79 36                	jns    f010025e <kbd_proc_data+0x68>$/;"	l
f0100228	obj/kern/kernel.asm	/^f0100228:	8b 0d e0 20 41 f0    	mov    0xf04120e0,%ecx$/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	83 e3 40             	and    $0x40,%ebx$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	85 db                	test   %ebx,%ebx$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f010023b	obj/kern/kernel.asm	/^f010023b:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e:	0f b6 82 a0 62 10 f0 	movzbl -0xfef9d60(%edx),%eax$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010024b	obj/kern/kernel.asm	/^f010024b:	f7 d0                	not    %eax$/;"	l
f010024d	obj/kern/kernel.asm	/^f010024d:	21 c8                	and    %ecx,%eax$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	a3 e0 20 41 f0       	mov    %eax,0xf04120e0$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	e9 9e 00 00 00       	jmp    f01002fc <kbd_proc_data+0x106>$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	8b 0d e0 20 41 f0    	mov    0xf04120e0,%ecx$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	74 0e                	je     f0100277 <kbd_proc_data+0x81>$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	89 c2                	mov    %eax,%edx$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	89 0d e0 20 41 f0    	mov    %ecx,0xf04120e0$/;"	l
f0100277	obj/kern/kernel.asm	/^f0100277:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010027a	obj/kern/kernel.asm	/^f010027a:	0f b6 82 a0 62 10 f0 	movzbl -0xfef9d60(%edx),%eax$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	0b 05 e0 20 41 f0    	or     0xf04120e0,%eax$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	0f b6 8a a0 61 10 f0 	movzbl -0xfef9e60(%edx),%ecx$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	31 c8                	xor    %ecx,%eax$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	a3 e0 20 41 f0       	mov    %eax,0xf04120e0$/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	89 c1                	mov    %eax,%ecx$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	8b 0c 8d 80 61 10 f0 	mov    -0xfef9e80(,%ecx,4),%ecx$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	a8 08                	test   $0x8,%al$/;"	l
f01002aa	obj/kern/kernel.asm	/^f01002aa:	74 1b                	je     f01002c7 <kbd_proc_data+0xd1>$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	89 da                	mov    %ebx,%edx$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	77 05                	ja     f01002bb <kbd_proc_data+0xc5>$/;"	l
f01002b6	obj/kern/kernel.asm	/^f01002b6:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	eb 0c                	jmp    f01002c7 <kbd_proc_data+0xd1>$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	83 ea 41             	sub    $0x41,%edx$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f01002c7	obj/kern/kernel.asm	/^f01002c7:	f7 d0                	not    %eax$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	a8 06                	test   $0x6,%al$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	75 2d                	jne    f01002fa <kbd_proc_data+0x104>$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	75 25                	jne    f01002fa <kbd_proc_data+0x104>$/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	68 56 61 10 f0       	push   $0xf0106156$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	e8 db 37 00 00       	call   f0103abd <cprintf>$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	ee                   	out    %al,(%dx)$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	89 d8                	mov    %ebx,%eax$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	eb 08                	jmp    f01002fc <kbd_proc_data+0x106>$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	c3                   	ret    $/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	89 d8                	mov    %ebx,%eax$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	c9                   	leave  $/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	c3                   	ret    $/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301 <cons_putc>:$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	55                   	push   %ebp$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302:	89 e5                	mov    %esp,%ebp$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	57                   	push   %edi$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	56                   	push   %esi$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	53                   	push   %ebx$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	89 c7                	mov    %eax,%edi$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	eb 09                	jmp    f0100326 <cons_putc+0x25>$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	89 ca                	mov    %ecx,%edx$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	ec                   	in     (%dx),%al$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	ec                   	in     (%dx),%al$/;"	l
f0100321	obj/kern/kernel.asm	/^f0100321:	ec                   	in     (%dx),%al$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	ec                   	in     (%dx),%al$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100326	obj/kern/kernel.asm	/^f0100326:	89 f2                	mov    %esi,%edx$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	ec                   	in     (%dx),%al$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	a8 20                	test   $0x20,%al$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	75 08                	jne    f0100335 <cons_putc+0x34>$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	7e e8                	jle    f010031d <cons_putc+0x1c>$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	89 f8                	mov    %edi,%eax$/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	ee                   	out    %al,(%dx)$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	eb 09                	jmp    f010035a <cons_putc+0x59>$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	89 ca                	mov    %ecx,%edx$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	ec                   	in     (%dx),%al$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	ec                   	in     (%dx),%al$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	ec                   	in     (%dx),%al$/;"	l
f0100356	obj/kern/kernel.asm	/^f0100356:	ec                   	in     (%dx),%al$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	89 f2                	mov    %esi,%edx$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	ec                   	in     (%dx),%al$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	7f 04                	jg     f0100369 <cons_putc+0x68>$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	84 c0                	test   %al,%al$/;"	l
f0100367	obj/kern/kernel.asm	/^f0100367:	79 e8                	jns    f0100351 <cons_putc+0x50>$/;"	l
f0100369	obj/kern/kernel.asm	/^f0100369:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010036e	obj/kern/kernel.asm	/^f010036e:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	ee                   	out    %al,(%dx)$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	ee                   	out    %al,(%dx)$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	ee                   	out    %al,(%dx)$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	89 fa                	mov    %edi,%edx$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	89 f8                	mov    %edi,%eax$/;"	l
f010038e	obj/kern/kernel.asm	/^f010038e:	80 cc 07             	or     $0x7,%ah$/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	85 d2                	test   %edx,%edx$/;"	l
f0100393	obj/kern/kernel.asm	/^f0100393:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	89 f8                	mov    %edi,%eax$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010039b	obj/kern/kernel.asm	/^f010039b:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	74 74                	je     f0100414 <cons_putc+0x113>$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	7f 0a                	jg     f01003af <cons_putc+0xae>$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	74 14                	je     f01003be <cons_putc+0xbd>$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	e9 99 00 00 00       	jmp    f0100448 <cons_putc+0x147>$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	74 3a                	je     f01003ee <cons_putc+0xed>$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	74 3d                	je     f01003f6 <cons_putc+0xf5>$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	e9 8a 00 00 00       	jmp    f0100448 <cons_putc+0x147>$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	0f b7 05 08 23 41 f0 	movzwl 0xf0412308,%eax$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	66 85 c0             	test   %ax,%ax$/;"	l
f01003c8	obj/kern/kernel.asm	/^f01003c8:	0f 84 e6 00 00 00    	je     f01004b4 <cons_putc+0x1b3>$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	66 a3 08 23 41 f0    	mov    %ax,0xf0412308$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01003da	obj/kern/kernel.asm	/^f01003da:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	83 cf 20             	or     $0x20,%edi$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	8b 15 0c 23 41 f0    	mov    0xf041230c,%edx$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	eb 78                	jmp    f0100466 <cons_putc+0x165>$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	66 83 05 08 23 41 f0 	addw   $0x50,0xf0412308$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	50 $/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	0f b7 05 08 23 41 f0 	movzwl 0xf0412308,%eax$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	66 a3 08 23 41 f0    	mov    %ax,0xf0412308$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	eb 52                	jmp    f0100466 <cons_putc+0x165>$/;"	l
f0100414	obj/kern/kernel.asm	/^f0100414:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	e8 e3 fe ff ff       	call   f0100301 <cons_putc>$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	e8 d9 fe ff ff       	call   f0100301 <cons_putc>$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	e8 cf fe ff ff       	call   f0100301 <cons_putc>$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	e8 c5 fe ff ff       	call   f0100301 <cons_putc>$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	e8 bb fe ff ff       	call   f0100301 <cons_putc>$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	eb 1e                	jmp    f0100466 <cons_putc+0x165>$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	0f b7 05 08 23 41 f0 	movzwl 0xf0412308,%eax$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	66 89 15 08 23 41 f0 	mov    %dx,0xf0412308$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	8b 15 0c 23 41 f0    	mov    0xf041230c,%edx$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	66 81 3d 08 23 41 f0 	cmpw   $0x7cf,0xf0412308$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	cf 07 $/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	76 43                	jbe    f01004b4 <cons_putc+0x1b3>$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	a1 0c 23 41 f0       	mov    0xf041230c,%eax$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	68 00 0f 00 00       	push   $0xf00$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	52                   	push   %edx$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	50                   	push   %eax$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	e8 93 53 00 00       	call   f010581e <memmove>$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	8b 15 0c 23 41 f0    	mov    0xf041230c,%edx$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	83 c0 02             	add    $0x2,%eax$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	39 d0                	cmp    %edx,%eax$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	75 f4                	jne    f01004a0 <cons_putc+0x19f>$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	66 83 2d 08 23 41 f0 	subw   $0x50,0xf0412308$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	50 $/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	8b 0d 10 23 41 f0    	mov    0xf0412310,%ecx$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	89 ca                	mov    %ecx,%edx$/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	ee                   	out    %al,(%dx)$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	0f b7 1d 08 23 41 f0 	movzwl 0xf0412308,%ebx$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	89 d8                	mov    %ebx,%eax$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	89 f2                	mov    %esi,%edx$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	ee                   	out    %al,(%dx)$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	89 ca                	mov    %ecx,%edx$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	ee                   	out    %al,(%dx)$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	89 d8                	mov    %ebx,%eax$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	89 f2                	mov    %esi,%edx$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	ee                   	out    %al,(%dx)$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	5b                   	pop    %ebx$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	5e                   	pop    %esi$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	5f                   	pop    %edi$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	5d                   	pop    %ebp$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	c3                   	ret    $/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea <serial_intr>:$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	80 3d 14 23 41 f0 00 	cmpb   $0x0,0xf0412314$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	74 11                	je     f0100504 <serial_intr+0x1a>$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	55                   	push   %ebp$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	89 e5                	mov    %esp,%ebp$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	b8 81 01 10 f0       	mov    $0xf0100181,%eax$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	e8 9d fc ff ff       	call   f01001a0 <cons_intr>$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	c9                   	leave  $/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	f3 c3                	repz ret $/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506 <kbd_intr>:$/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506:	55                   	push   %ebp$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	89 e5                	mov    %esp,%ebp$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	b8 f6 01 10 f0       	mov    $0xf01001f6,%eax$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	e8 8a fc ff ff       	call   f01001a0 <cons_intr>$/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	c9                   	leave  $/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	c3                   	ret    $/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518 <cons_getc>:$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	55                   	push   %ebp$/;"	l
f0100519	obj/kern/kernel.asm	/^f0100519:	89 e5                	mov    %esp,%ebp$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010051e	obj/kern/kernel.asm	/^f010051e:	e8 c7 ff ff ff       	call   f01004ea <serial_intr>$/;"	l
f0100523	obj/kern/kernel.asm	/^f0100523:	e8 de ff ff ff       	call   f0100506 <kbd_intr>$/;"	l
f0100528	obj/kern/kernel.asm	/^f0100528:	a1 00 23 41 f0       	mov    0xf0412300,%eax$/;"	l
f010052d	obj/kern/kernel.asm	/^f010052d:	3b 05 04 23 41 f0    	cmp    0xf0412304,%eax$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	74 26                	je     f010055b <cons_getc+0x43>$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	89 15 00 23 41 f0    	mov    %edx,0xf0412300$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	0f b6 88 00 21 41 f0 	movzbl -0xfbedf00(%eax),%ecx$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	89 c8                	mov    %ecx,%eax$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	75 11                	jne    f0100560 <cons_getc+0x48>$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	c7 05 00 23 41 f0 00 	movl   $0x0,0xf0412300$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	00 00 00 $/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	eb 05                	jmp    f0100560 <cons_getc+0x48>$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	c9                   	leave  $/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	c3                   	ret    $/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562 <cons_init>:$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	55                   	push   %ebp$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	89 e5                	mov    %esp,%ebp$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	57                   	push   %edi$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	56                   	push   %esi$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	53                   	push   %ebx$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	5a a5 $/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	74 11                	je     f0100599 <cons_init+0x37>$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	c7 05 10 23 41 f0 b4 	movl   $0x3b4,0xf0412310$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	03 00 00 $/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	eb 16                	jmp    f01005af <cons_init+0x4d>$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	c7 05 10 23 41 f0 d4 	movl   $0x3d4,0xf0412310$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	03 00 00 $/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	8b 3d 10 23 41 f0    	mov    0xf0412310,%edi$/;"	l
f01005b5	obj/kern/kernel.asm	/^f01005b5:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01005ba	obj/kern/kernel.asm	/^f01005ba:	89 fa                	mov    %edi,%edx$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	ee                   	out    %al,(%dx)$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	89 da                	mov    %ebx,%edx$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	ec                   	in     (%dx),%al$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	89 fa                	mov    %edi,%edx$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	ee                   	out    %al,(%dx)$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	89 da                	mov    %ebx,%edx$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	ec                   	in     (%dx),%al$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	89 35 0c 23 41 f0    	mov    %esi,0xf041230c$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01005dd	obj/kern/kernel.asm	/^f01005dd:	09 c8                	or     %ecx,%eax$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	66 a3 08 23 41 f0    	mov    %ax,0xf0412308$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	e8 1c ff ff ff       	call   f0100506 <kbd_intr>$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	0f b7 05 50 23 12 f0 	movzwl 0xf0122350,%eax$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9:	50                   	push   %eax$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	e8 42 33 00 00       	call   f0103941 <irq_setmask_8259A>$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	89 f2                	mov    %esi,%edx$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	ee                   	out    %al,(%dx)$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	ee                   	out    %al,(%dx)$/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	89 da                	mov    %ebx,%edx$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	ee                   	out    %al,(%dx)$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	ee                   	out    %al,(%dx)$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f0100634	obj/kern/kernel.asm	/^f0100634:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100639	obj/kern/kernel.asm	/^f0100639:	ee                   	out    %al,(%dx)$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	ee                   	out    %al,(%dx)$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	ee                   	out    %al,(%dx)$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	ec                   	in     (%dx),%al$/;"	l
f0100656	obj/kern/kernel.asm	/^f0100656:	89 c1                	mov    %eax,%ecx$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	83 c4 10             	add    $0x10,%esp$/;"	l
f010065b	obj/kern/kernel.asm	/^f010065b:	3c ff                	cmp    $0xff,%al$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	0f 95 05 14 23 41 f0 	setne  0xf0412314$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	89 f2                	mov    %esi,%edx$/;"	l
f0100666	obj/kern/kernel.asm	/^f0100666:	ec                   	in     (%dx),%al$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	89 da                	mov    %ebx,%edx$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	ec                   	in     (%dx),%al$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f010066d	obj/kern/kernel.asm	/^f010066d:	74 21                	je     f0100690 <cons_init+0x12e>$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	0f b7 05 50 23 12 f0 	movzwl 0xf0122350,%eax$/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	50                   	push   %eax$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	e8 bd 32 00 00       	call   f0103941 <irq_setmask_8259A>$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	80 3d 14 23 41 f0 00 	cmpb   $0x0,0xf0412314$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	75 10                	jne    f01006a0 <cons_init+0x13e>$/;"	l
f0100690	obj/kern/kernel.asm	/^f0100690:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	68 62 61 10 f0       	push   $0xf0106162$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	e8 20 34 00 00       	call   f0103abd <cprintf>$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	5b                   	pop    %ebx$/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4:	5e                   	pop    %esi$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	5f                   	pop    %edi$/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	5d                   	pop    %ebp$/;"	l
f01006a7	obj/kern/kernel.asm	/^f01006a7:	c3                   	ret    $/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8 <cputchar>:$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	55                   	push   %ebp$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	e8 4b fc ff ff       	call   f0100301 <cons_putc>$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	c9                   	leave  $/;"	l
f01006b7	obj/kern/kernel.asm	/^f01006b7:	c3                   	ret    $/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8 <getchar>:$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	55                   	push   %ebp$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	e8 55 fe ff ff       	call   f0100518 <cons_getc>$/;"	l
f01006c3	obj/kern/kernel.asm	/^f01006c3:	85 c0                	test   %eax,%eax$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	74 f7                	je     f01006be <getchar+0x6>$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	c9                   	leave  $/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	c3                   	ret    $/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9 <iscons>:$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	55                   	push   %ebp$/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	5d                   	pop    %ebp$/;"	l
f01006d2	obj/kern/kernel.asm	/^f01006d2:	c3                   	ret    $/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3 <mon_exit>:$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	55                   	push   %ebp$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	89 e5                	mov    %esp,%ebp$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	5d                   	pop    %ebp$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	c3                   	ret    $/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd <mon_help>:$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	55                   	push   %ebp$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	89 e5                	mov    %esp,%ebp$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	56                   	push   %esi$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	53                   	push   %ebx$/;"	l
f01006e2	obj/kern/kernel.asm	/^f01006e2:	bb e4 66 10 f0       	mov    $0xf01066e4,%ebx$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	be 50 67 10 f0       	mov    $0xf0106750,%esi$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	ff 33                	pushl  (%ebx)$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	ff 73 fc             	pushl  -0x4(%ebx)$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	68 a0 63 10 f0       	push   $0xf01063a0$/;"	l
f01006f9	obj/kern/kernel.asm	/^f01006f9:	e8 bf 33 00 00       	call   f0103abd <cprintf>$/;"	l
f01006fe	obj/kern/kernel.asm	/^f01006fe:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100704	obj/kern/kernel.asm	/^f0100704:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	75 e4                	jne    f01006ec <mon_help+0xf>$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	5b                   	pop    %ebx$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	5e                   	pop    %esi$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	5d                   	pop    %ebp$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	c3                   	ret    $/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714 <mon_kerninfo>:$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	55                   	push   %ebp$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	89 e5                	mov    %esp,%ebp$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	68 a9 63 10 f0       	push   $0xf01063a9$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	e8 99 33 00 00       	call   f0103abd <cprintf>$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	68 24 65 10 f0       	push   $0xf0106524$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	e8 87 33 00 00       	call   f0103abd <cprintf>$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	68 4c 65 10 f0       	push   $0xf010654c$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	e8 70 33 00 00       	call   f0103abd <cprintf>$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	68 e1 60 10 00       	push   $0x1060e1$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	68 e1 60 10 f0       	push   $0xf01060e1$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	68 70 65 10 f0       	push   $0xf0106570$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	e8 59 33 00 00       	call   f0103abd <cprintf>$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	68 e0 20 41 00       	push   $0x4120e0$/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	68 e0 20 41 f0       	push   $0xf04120e0$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	68 94 65 10 f0       	push   $0xf0106594$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	e8 42 33 00 00       	call   f0103abd <cprintf>$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	68 cc 80 41 00       	push   $0x4180cc$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	68 cc 80 41 f0       	push   $0xf04180cc$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	68 b8 65 10 f0       	push   $0xf01065b8$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	e8 2b 33 00 00       	call   f0103abd <cprintf>$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	b8 cb 84 41 f0       	mov    $0xf04184cb,%eax$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	85 c0                	test   %eax,%eax$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	50                   	push   %eax$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	68 dc 65 10 f0       	push   $0xf01065dc$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	e8 00 33 00 00       	call   f0103abd <cprintf>$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	c9                   	leave  $/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	c3                   	ret    $/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4 <mon_list_pages>:$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	55                   	push   %ebp$/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	57                   	push   %edi$/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8:	56                   	push   %esi$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	53                   	push   %ebx$/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	a1 30 80 41 f0       	mov    0xf0418030,%eax$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7:	0f 95 45 e7          	setne  -0x19(%ebp)$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	eb 79                	jmp    f0100860 <mon_list_pages+0x9c>$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	39 c3                	cmp    %eax,%ebx$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	74 17                	je     f0100802 <mon_list_pages+0x3e>$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	a1 30 80 41 f0       	mov    0xf0418030,%eax$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	66 83 7c d8 04 00    	cmpw   $0x0,0x4(%eax,%ebx,8)$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	0f 95 c0             	setne  %al$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	89 c6                	mov    %eax,%esi$/;"	l
f01007fb	obj/kern/kernel.asm	/^f01007fb:	38 45 e7             	cmp    %al,-0x19(%ebp)$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	75 07                	jne    f0100807 <mon_list_pages+0x43>$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	eb 5b                	jmp    f010085d <mon_list_pages+0x99>$/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100807	obj/kern/kernel.asm	/^f0100807:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	57                   	push   %edi$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	68 c4 63 10 f0       	push   $0xf01063c4$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	e8 a8 32 00 00       	call   f0103abd <cprintf>$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100818	obj/kern/kernel.asm	/^f0100818:	39 df                	cmp    %ebx,%edi$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	74 11                	je     f010082d <mon_list_pages+0x69>$/;"	l
f010081c	obj/kern/kernel.asm	/^f010081c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	53                   	push   %ebx$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	68 c2 63 10 f0       	push   $0xf01063c2$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	e8 93 32 00 00       	call   f0103abd <cprintf>$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	74 12                	je     f0100845 <mon_list_pages+0x81>$/;"	l
f0100833	obj/kern/kernel.asm	/^f0100833:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	68 c7 63 10 f0       	push   $0xf01063c7$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	e8 7d 32 00 00       	call   f0103abd <cprintf>$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	eb 10                	jmp    f0100855 <mon_list_pages+0x91>$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	68 d3 63 10 f0       	push   $0xf01063d3$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	e8 6b 32 00 00       	call   f0103abd <cprintf>$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	8d 7b 01             	lea    0x1(%ebx),%edi$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	89 f0                	mov    %esi,%eax$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f010085d	obj/kern/kernel.asm	/^f010085d:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	a1 28 80 41 f0       	mov    0xf0418028,%eax$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	0f 86 7a ff ff ff    	jbe    f01007e7 <mon_list_pages+0x23>$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	5b                   	pop    %ebx$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	5e                   	pop    %esi$/;"	l
f0100877	obj/kern/kernel.asm	/^f0100877:	5f                   	pop    %edi$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	5d                   	pop    %ebp$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	c3                   	ret    $/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a <mon_echo>:$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	55                   	push   %ebp$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	89 e5                	mov    %esp,%ebp$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	57                   	push   %edi$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	56                   	push   %esi$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	53                   	push   %ebx$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	eb 47                	jmp    f01008dd <mon_echo+0x63>$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	8b 04 b7             	mov    (%edi,%esi,4),%eax$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	0f be 04 18          	movsbl (%eax,%ebx,1),%eax$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	50                   	push   %eax$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	e8 02 fe ff ff       	call   f01006a8 <cputchar>$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	eb 05                	jmp    f01008b3 <mon_echo+0x39>$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	ff 34 b7             	pushl  (%edi,%esi,4)$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	e8 95 4d 00 00       	call   f0105653 <strlen>$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	39 c3                	cmp    %eax,%ebx$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	75 d1                	jne    f0100896 <mon_echo+0x1c>$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	74 10                	je     f01008da <mon_echo+0x60>$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	68 2e 64 10 f0       	push   $0xf010642e$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	e8 e6 31 00 00       	call   f0103abd <cprintf>$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	83 c6 01             	add    $0x1,%esi$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	3b 75 08             	cmp    0x8(%ebp),%esi$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	7c cc                	jl     f01008ae <mon_echo+0x34>$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	68 4e 6a 10 f0       	push   $0xf0106a4e$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	e8 ce 31 00 00       	call   f0103abd <cprintf>$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	5b                   	pop    %ebx$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	5e                   	pop    %esi$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	5f                   	pop    %edi$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	5d                   	pop    %ebp$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	c3                   	ret    $/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc <mon_backtrace>:$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	55                   	push   %ebp$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	57                   	push   %edi$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	56                   	push   %esi$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	53                   	push   %ebx$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	83 ec 48             	sub    $0x48,%esp$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	68 da 63 10 f0       	push   $0xf01063da$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	e8 ae 31 00 00       	call   f0103abd <cprintf>$/;"	l
f010090f	obj/kern/kernel.asm	/^f010090f:	89 ee                	mov    %ebp,%esi$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	c7 45 c4 fc 08 10 f0 	movl   $0xf01008fc,-0x3c(%ebp)$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	83 c4 10             	add    $0x10,%esp$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	50                   	push   %eax$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	57                   	push   %edi$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	e8 ef 43 00 00       	call   f0104d1a <debuginfo_eip>$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	89 f8                	mov    %edi,%eax$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0100933	obj/kern/kernel.asm	/^f0100933:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	50                   	push   %eax$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	56                   	push   %esi$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	68 ec 63 10 f0       	push   $0xf01063ec$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	e8 75 31 00 00       	call   f0103abd <cprintf>$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	8d 5e 08             	lea    0x8(%esi),%ebx$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	8d 7e 1c             	lea    0x1c(%esi),%edi$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	ff 33                	pushl  (%ebx)$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	68 07 64 10 f0       	push   $0xf0106407$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	e8 5d 31 00 00       	call   f0103abd <cprintf>$/;"	l
f0100960	obj/kern/kernel.asm	/^f0100960:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	75 e7                	jne    f0100951 <mon_backtrace+0x55>$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	ff 75 c0             	pushl  -0x40(%ebp)$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	68 0d 64 10 f0       	push   $0xf010640d$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	e8 37 31 00 00       	call   f0103abd <cprintf>$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	8b 36                	mov    (%esi),%esi$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	83 c4 20             	add    $0x20,%esp$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	85 f6                	test   %esi,%esi$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	75 8c                	jne    f010091b <mon_backtrace+0x1f>$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	5b                   	pop    %ebx$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	5e                   	pop    %esi$/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	5f                   	pop    %edi$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	5d                   	pop    %ebp$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	c3                   	ret    $/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c <mon_timer_start>:$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	55                   	push   %ebp$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	89 e5                	mov    %esp,%ebp$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	e8 24 52 00 00       	call   f0105bcb <timer_start>$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	c9                   	leave  $/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	c3                   	ret    $/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae <mon_timer_stop>:$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	55                   	push   %ebp$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	89 e5                	mov    %esp,%ebp$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	e8 2c 52 00 00       	call   f0105be5 <timer_stop>$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	c9                   	leave  $/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	c3                   	ret    $/;"	l
f01009c0	obj/kern/kernel.asm	/^f01009c0 <mon_kill>:$/;"	l
f01009c0	obj/kern/kernel.asm	/^f01009c0:	55                   	push   %ebp$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	57                   	push   %edi$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	56                   	push   %esi$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	53                   	push   %ebx$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	6a 0a                	push   $0xa$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	6a 00                	push   $0x0$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	50                   	push   %eax$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	e8 19 4f 00 00       	call   f01058f5 <strtol>$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	89 c6                	mov    %eax,%esi$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01009e1	obj/kern/kernel.asm	/^f01009e1:	6a 0a                	push   $0xa$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	6a 00                	push   $0x0$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	50                   	push   %eax$/;"	l
f01009ec	obj/kern/kernel.asm	/^f01009ec:	e8 04 4f 00 00       	call   f01058f5 <strtol>$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	89 c7                	mov    %eax,%edi$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01009f6	obj/kern/kernel.asm	/^f01009f6:	6a 10                	push   $0x10$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	6a 00                	push   $0x0$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	e8 f3 4e 00 00       	call   f01058f5 <strtol>$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	6a 00                	push   $0x0$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	6a 00                	push   $0x0$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	57                   	push   %edi$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	56                   	push   %esi$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	50                   	push   %eax$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	6a 0f                	push   $0xf$/;"	l
f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	e8 35 3b 00 00       	call   f0104548 <syscall>$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	5b                   	pop    %ebx$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	5e                   	pop    %esi$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	5f                   	pop    %edi$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	5d                   	pop    %ebp$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	c3                   	ret    $/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20 <monitor>:$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	55                   	push   %ebp$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	57                   	push   %edi$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	56                   	push   %esi$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	53                   	push   %ebx$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	83 ec 58             	sub    $0x58,%esp$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	68 08 66 10 f0       	push   $0xf0106608$/;"	l
f0100a2e	obj/kern/kernel.asm	/^f0100a2e:	e8 8a 30 00 00       	call   f0103abd <cprintf>$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	c7 04 24 2c 66 10 f0 	movl   $0xf010662c,(%esp)$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	e8 7e 30 00 00       	call   f0103abd <cprintf>$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a42	obj/kern/kernel.asm	/^f0100a42:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100a46	obj/kern/kernel.asm	/^f0100a46:	74 0e                	je     f0100a56 <monitor+0x36>$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	e8 32 35 00 00       	call   f0103f85 <print_trapframe>$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	68 27 64 10 f0       	push   $0xf0106427$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	e8 ff 4a 00 00       	call   f0105562 <readline>$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	85 c0                	test   %eax,%eax$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	74 ea                	je     f0100a56 <monitor+0x36>$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	eb 0a                	jmp    f0100a84 <monitor+0x64>$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	89 f7                	mov    %esi,%edi$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	89 fe                	mov    %edi,%esi$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	84 c0                	test   %al,%al$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	74 63                	je     f0100aee <monitor+0xce>$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	50                   	push   %eax$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	68 2b 64 10 f0       	push   $0xf010642b$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	e8 f8 4c 00 00       	call   f0105794 <strchr>$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	85 c0                	test   %eax,%eax$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	75 d7                	jne    f0100a7a <monitor+0x5a>$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	74 46                	je     f0100aee <monitor+0xce>$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	75 14                	jne    f0100ac1 <monitor+0xa1>$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	6a 10                	push   $0x10$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	68 30 64 10 f0       	push   $0xf0106430$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	e8 01 30 00 00       	call   f0103abd <cprintf>$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	eb 95                	jmp    f0100a56 <monitor+0x36>$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	eb 03                	jmp    f0100acd <monitor+0xad>$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100acd	obj/kern/kernel.asm	/^f0100acd:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	84 c0                	test   %al,%al$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	74 ae                	je     f0100a82 <monitor+0x62>$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	0f be c0             	movsbl %al,%eax$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	50                   	push   %eax$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	68 2b 64 10 f0       	push   $0xf010642b$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	e8 af 4c 00 00       	call   f0105794 <strchr>$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	85 c0                	test   %eax,%eax$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	74 de                	je     f0100aca <monitor+0xaa>$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	eb 94                	jmp    f0100a82 <monitor+0x62>$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	00 $/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	85 f6                	test   %esi,%esi$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	0f 84 58 ff ff ff    	je     f0100a56 <monitor+0x36>$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	ff 34 85 e0 66 10 f0 	pushl  -0xfef9920(,%eax,4)$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	e8 1e 4c 00 00       	call   f0105736 <strcmp>$/;"	l
f0100b18	obj/kern/kernel.asm	/^f0100b18:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	85 c0                	test   %eax,%eax$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	75 21                	jne    f0100b40 <monitor+0x120>$/;"	l
f0100b1f	obj/kern/kernel.asm	/^f0100b1f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	52                   	push   %edx$/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	56                   	push   %esi$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	ff 14 85 e8 66 10 f0 	call   *-0xfef9918(,%eax,4)$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	85 c0                	test   %eax,%eax$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	78 25                	js     f0100b60 <monitor+0x140>$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	e9 16 ff ff ff       	jmp    f0100a56 <monitor+0x36>$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	75 bb                	jne    f0100b03 <monitor+0xe3>$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	68 4d 64 10 f0       	push   $0xf010644d$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	e8 65 2f 00 00       	call   f0103abd <cprintf>$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	e9 f6 fe ff ff       	jmp    f0100a56 <monitor+0x36>$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	5b                   	pop    %ebx$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	5e                   	pop    %esi$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	5f                   	pop    %edi$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	5d                   	pop    %ebp$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	c3                   	ret    $/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68 <boot_alloc>:$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	83 3d 18 23 41 f0 00 	cmpl   $0x0,0xf0412318$/;"	l
f0100b6f	obj/kern/kernel.asm	/^f0100b6f:	75 11                	jne    f0100b82 <boot_alloc+0x1a>$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	ba cb 90 41 f0       	mov    $0xf04190cb,%edx$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100b7c	obj/kern/kernel.asm	/^f0100b7c:	89 15 18 23 41 f0    	mov    %edx,0xf0412318$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	8b 0d 18 23 41 f0    	mov    0xf0412318,%ecx$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	8b 15 28 80 41 f0    	mov    0xf0418028,%edx$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	81 c2 00 00 0f 00    	add    $0xf0000,%edx$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	76 17                	jbe    f0100bb2 <boot_alloc+0x4a>$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	55                   	push   %ebp$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	68 4c 67 10 f0       	push   $0xf010674c$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	6a 6a                	push   $0x6a$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100bad	obj/kern/kernel.asm	/^f0100bad:	e8 3e f5 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	8d 84 01 ff 0f 00 00 	lea    0xfff(%ecx,%eax,1),%eax$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	a3 18 23 41 f0       	mov    %eax,0xf0412318$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	89 c8                	mov    %ecx,%eax$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	c3                   	ret    $/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6 <check_va2pa>:$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6:	89 d1                	mov    %edx,%ecx$/;"	l
f0100bc8	obj/kern/kernel.asm	/^f0100bc8:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	a8 01                	test   $0x1,%al$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	74 52                	je     f0100c24 <check_va2pa+0x5e>$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	89 c1                	mov    %eax,%ecx$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	3b 0d 28 80 41 f0    	cmp    0xf0418028,%ecx$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	72 1b                	jb     f0100bff <check_va2pa+0x39>$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	55                   	push   %ebp$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	50                   	push   %eax$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0:	68 36 03 00 00       	push   $0x336$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	e8 f1 f4 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	89 c2                	mov    %eax,%edx$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	85 d2                	test   %edx,%edx$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	c3                   	ret    $/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	c3                   	ret    $/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a <check_page_free_list>:$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	55                   	push   %ebp$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	57                   	push   %edi$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	56                   	push   %esi$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	53                   	push   %ebx$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	84 c0                	test   %al,%al$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	0f 85 72 02 00 00    	jne    f0100ead <check_page_free_list+0x283>$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	e9 7f 02 00 00       	jmp    f0100ebf <check_page_free_list+0x295>$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	68 a0 6a 10 f0       	push   $0xf0106aa0$/;"	l
f0100c48	obj/kern/kernel.asm	/^f0100c48:	68 73 02 00 00       	push   $0x273$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	e8 99 f4 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	89 c2                	mov    %eax,%edx$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	2b 15 30 80 41 f0    	sub    0xf0418030,%edx$/;"	l
f0100c6b	obj/kern/kernel.asm	/^f0100c6b:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	0f 95 c2             	setne  %dl$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	8b 00                	mov    (%eax),%eax$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	85 c0                	test   %eax,%eax$/;"	l
f0100c85	obj/kern/kernel.asm	/^f0100c85:	75 dc                	jne    f0100c63 <check_page_free_list+0x39>$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100c90	obj/kern/kernel.asm	/^f0100c90:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	89 10                	mov    %edx,(%eax)$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	a3 20 23 41 f0       	mov    %eax,0xf0412320$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	8b 1d 20 23 41 f0    	mov    0xf0412320,%ebx$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	eb 53                	jmp    f0100d00 <check_page_free_list+0xd6>$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	89 d8                	mov    %ebx,%eax$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	89 c2                	mov    %eax,%edx$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	39 f2                	cmp    %esi,%edx$/;"	l
f0100cc2	obj/kern/kernel.asm	/^f0100cc2:	73 3a                	jae    f0100cfe <check_page_free_list+0xd4>$/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	89 c2                	mov    %eax,%edx$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	3b 15 28 80 41 f0    	cmp    0xf0418028,%edx$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	72 12                	jb     f0100ce3 <check_page_free_list+0xb9>$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	50                   	push   %eax$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	6a 58                	push   $0x58$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	e8 0d f4 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	68 80 00 00 00       	push   $0x80$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	68 97 00 00 00       	push   $0x97$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	50                   	push   %eax$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	e8 d6 4a 00 00       	call   f01057d1 <memset>$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	85 db                	test   %ebx,%ebx$/;"	l
f0100d02	obj/kern/kernel.asm	/^f0100d02:	75 a9                	jne    f0100cad <check_page_free_list+0x83>$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	e8 5a fe ff ff       	call   f0100b68 <boot_alloc>$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	8b 15 20 23 41 f0    	mov    0xf0412320,%edx$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	8b 0d 30 80 41 f0    	mov    0xf0418030,%ecx$/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d:	a1 28 80 41 f0       	mov    0xf0418028,%eax$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	8d 3c c1             	lea    (%ecx,%eax,8),%edi$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	e9 30 01 00 00       	jmp    f0100e68 <check_page_free_list+0x23e>$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	73 19                	jae    f0100d55 <check_page_free_list+0x12b>$/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	68 82 67 10 f0       	push   $0xf0106782$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	68 8d 02 00 00       	push   $0x28d$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	e8 9b f3 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	39 fa                	cmp    %edi,%edx$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	72 19                	jb     f0100d72 <check_page_free_list+0x148>$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	68 a3 67 10 f0       	push   $0xf01067a3$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	68 8e 02 00 00       	push   $0x28e$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	e8 7e f3 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	89 d0                	mov    %edx,%eax$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	a8 07                	test   $0x7,%al$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	74 19                	je     f0100d94 <check_page_free_list+0x16a>$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	68 8f 02 00 00       	push   $0x28f$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	e8 5c f3 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	85 c0                	test   %eax,%eax$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	75 19                	jne    f0100db7 <check_page_free_list+0x18d>$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	68 b7 67 10 f0       	push   $0xf01067b7$/;"	l
f0100da3	obj/kern/kernel.asm	/^f0100da3:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0100da8	obj/kern/kernel.asm	/^f0100da8:	68 92 02 00 00       	push   $0x292$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	e8 39 f3 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	75 19                	jne    f0100dd7 <check_page_free_list+0x1ad>$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	68 93 02 00 00       	push   $0x293$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	e8 19 f3 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	75 19                	jne    f0100df7 <check_page_free_list+0x1cd>$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	68 f8 6a 10 f0       	push   $0xf0106af8$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	68 94 02 00 00       	push   $0x294$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	e8 f9 f2 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	75 19                	jne    f0100e17 <check_page_free_list+0x1ed>$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	68 e1 67 10 f0       	push   $0xf01067e1$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	68 95 02 00 00       	push   $0x295$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	e8 d9 f2 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	76 3f                	jbe    f0100e5d <check_page_free_list+0x233>$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	89 c3                	mov    %eax,%ebx$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	39 5d c8             	cmp    %ebx,-0x38(%ebp)$/;"	l
f0100e26	obj/kern/kernel.asm	/^f0100e26:	77 12                	ja     f0100e3a <check_page_free_list+0x210>$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	50                   	push   %eax$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	6a 58                	push   $0x58$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	e8 b6 f2 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	76 1e                	jbe    f0100e62 <check_page_free_list+0x238>$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	68 1c 6b 10 f0       	push   $0xf0106b1c$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0100e4e	obj/kern/kernel.asm	/^f0100e4e:	68 96 02 00 00       	push   $0x296$/;"	l
f0100e53	obj/kern/kernel.asm	/^f0100e53:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	e8 93 f2 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	eb 04                	jmp    f0100e66 <check_page_free_list+0x23c>$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	8b 12                	mov    (%edx),%edx$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	85 d2                	test   %edx,%edx$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	0f 85 c8 fe ff ff    	jne    f0100d38 <check_page_free_list+0x10e>$/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	85 f6                	test   %esi,%esi$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	7f 19                	jg     f0100e90 <check_page_free_list+0x266>$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	68 fb 67 10 f0       	push   $0xf01067fb$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	68 9e 02 00 00       	push   $0x29e$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	e8 60 f2 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	85 db                	test   %ebx,%ebx$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	7f 42                	jg     f0100ed6 <check_page_free_list+0x2ac>$/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	68 0d 68 10 f0       	push   $0xf010680d$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	68 9f 02 00 00       	push   $0x29f$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	e8 43 f2 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100ead	obj/kern/kernel.asm	/^f0100ead:	a1 20 23 41 f0       	mov    0xf0412320,%eax$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	85 c0                	test   %eax,%eax$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	0f 85 9d fd ff ff    	jne    f0100c57 <check_page_free_list+0x2d>$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	e9 81 fd ff ff       	jmp    f0100c40 <check_page_free_list+0x16>$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	83 3d 20 23 41 f0 00 	cmpl   $0x0,0xf0412320$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	0f 84 74 fd ff ff    	je     f0100c40 <check_page_free_list+0x16>$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	e9 cf fd ff ff       	jmp    f0100ca5 <check_page_free_list+0x7b>$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	5b                   	pop    %ebx$/;"	l
f0100eda	obj/kern/kernel.asm	/^f0100eda:	5e                   	pop    %esi$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	5f                   	pop    %edi$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	5d                   	pop    %ebp$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	c3                   	ret    $/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede <page_init>:$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	55                   	push   %ebp$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ee1	obj/kern/kernel.asm	/^f0100ee1:	53                   	push   %ebx$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	a1 30 80 41 f0       	mov    0xf0418030,%eax$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	eb 73                	jmp    f0100f6a <page_init+0x8c>$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	81 fb 9f 00 00 00    	cmp    $0x9f,%ebx$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	76 40                	jbe    f0100f3f <page_init+0x61>$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04:	e8 5f fc ff ff       	call   f0100b68 <boot_alloc>$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	77 15                	ja     f0100f25 <page_init+0x47>$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	50                   	push   %eax$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	68 29 01 00 00       	push   $0x129$/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	e8 cb f1 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100f25	obj/kern/kernel.asm	/^f0100f25:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	73 0e                	jae    f0100f3f <page_init+0x61>$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	a1 30 80 41 f0       	mov    0xf0418030,%eax$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	66 c7 44 d8 04 01 00 	movw   $0x1,0x4(%eax,%ebx,8)$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	eb 28                	jmp    f0100f67 <page_init+0x89>$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	8d 04 dd 00 00 00 00 	lea    0x0(,%ebx,8),%eax$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	89 c2                	mov    %eax,%edx$/;"	l
f0100f48	obj/kern/kernel.asm	/^f0100f48:	03 15 30 80 41 f0    	add    0xf0418030,%edx$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	8b 0d 20 23 41 f0    	mov    0xf0412320,%ecx$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	03 05 30 80 41 f0    	add    0xf0418030,%eax$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	a3 20 23 41 f0       	mov    %eax,0xf0412320$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	3b 1d 28 80 41 f0    	cmp    0xf0418028,%ebx$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	72 85                	jb     f0100ef7 <page_init+0x19>$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	c9                   	leave  $/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	c3                   	ret    $/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77 <page_alloc>:$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	55                   	push   %ebp$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	53                   	push   %ebx$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	8b 1d 20 23 41 f0    	mov    0xf0412320,%ebx$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	85 db                	test   %ebx,%ebx$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	74 58                	je     f0100fe0 <page_alloc+0x69>$/;"	l
f0100f88	obj/kern/kernel.asm	/^f0100f88:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	a3 20 23 41 f0       	mov    %eax,0xf0412320$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	74 45                	je     f0100fe0 <page_alloc+0x69>$/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	89 d8                	mov    %ebx,%eax$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	89 c2                	mov    %eax,%edx$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100fae	obj/kern/kernel.asm	/^f0100fae:	3b 15 28 80 41 f0    	cmp    0xf0418028,%edx$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	72 12                	jb     f0100fc8 <page_alloc+0x51>$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	50                   	push   %eax$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	6a 58                	push   $0x58$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	e8 28 f1 ff ff       	call   f01000f0 <_panic>$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	68 00 10 00 00       	push   $0x1000$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	6a 00                	push   $0x0$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	50                   	push   %eax$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	e8 f4 47 00 00       	call   f01057d1 <memset>$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	89 d8                	mov    %ebx,%eax$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	c9                   	leave  $/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	c3                   	ret    $/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7 <page_free>:$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	55                   	push   %ebp$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	74 17                	je     f010100e <page_free+0x27>$/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	68 1e 68 10 f0       	push   $0xf010681e$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	68 58 01 00 00       	push   $0x158$/;"	l
f0101004	obj/kern/kernel.asm	/^f0101004:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	e8 e2 f0 ff ff       	call   f01000f0 <_panic>$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	74 17                	je     f010102a <page_free+0x43>$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	68 3a 68 10 f0       	push   $0xf010683a$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	68 59 01 00 00       	push   $0x159$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	e8 c6 f0 ff ff       	call   f01000f0 <_panic>$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	8b 15 20 23 41 f0    	mov    0xf0412320,%edx$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	89 10                	mov    %edx,(%eax)$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	a3 20 23 41 f0       	mov    %eax,0xf0412320$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	c9                   	leave  $/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	c3                   	ret    $/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039 <page_decref>:$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	55                   	push   %ebp$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	89 e5                	mov    %esp,%ebp$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	66 85 c0             	test   %ax,%ax$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	75 0c                	jne    f010105e <page_decref+0x25>$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	52                   	push   %edx$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	e8 8c ff ff ff       	call   f0100fe7 <page_free>$/;"	l
f010105b	obj/kern/kernel.asm	/^f010105b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	c9                   	leave  $/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	c3                   	ret    $/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060 <pgdir_walk>:$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	55                   	push   %ebp$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	89 e5                	mov    %esp,%ebp$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	56                   	push   %esi$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	53                   	push   %ebx$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	89 f3                	mov    %esi,%ebx$/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	f6 03 01             	testb  $0x1,(%ebx)$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	75 2d                	jne    f01010a5 <pgdir_walk+0x45>$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	74 62                	je     f01010e0 <pgdir_walk+0x80>$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	6a 01                	push   $0x1$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	e8 ef fe ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	83 c4 10             	add    $0x10,%esp$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	85 c0                	test   %eax,%eax$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	74 58                	je     f01010e7 <pgdir_walk+0x87>$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	83 c8 07             	or     $0x7,%eax$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	89 03                	mov    %eax,(%ebx)$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	8b 03                	mov    (%ebx),%eax$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	89 c2                	mov    %eax,%edx$/;"	l
f01010ae	obj/kern/kernel.asm	/^f01010ae:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	3b 15 28 80 41 f0    	cmp    0xf0418028,%edx$/;"	l
f01010b7	obj/kern/kernel.asm	/^f01010b7:	72 15                	jb     f01010ce <pgdir_walk+0x6e>$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	50                   	push   %eax$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	68 8b 01 00 00       	push   $0x18b$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	e8 22 f0 ff ff       	call   f01000f0 <_panic>$/;"	l
f01010ce	obj/kern/kernel.asm	/^f01010ce:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	eb 0c                	jmp    f01010ec <pgdir_walk+0x8c>$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	eb 05                	jmp    f01010ec <pgdir_walk+0x8c>$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010ec	obj/kern/kernel.asm	/^f01010ec:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	5b                   	pop    %ebx$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	5e                   	pop    %esi$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	5d                   	pop    %ebp$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	c3                   	ret    $/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3 <boot_map_region>:$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	55                   	push   %ebp$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	89 e5                	mov    %esp,%ebp$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	57                   	push   %edi$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	56                   	push   %esi$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	53                   	push   %ebx$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	89 d3                	mov    %edx,%ebx$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	29 d7                	sub    %edx,%edi$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	eb 22                	jmp    f010113e <boot_map_region+0x4b>$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	6a 01                	push   $0x1$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	53                   	push   %ebx$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	e8 36 ff ff ff       	call   f0101060 <pgdir_walk>$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	8d 14 1f             	lea    (%edi,%ebx,1),%edx$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	0b 55 dc             	or     -0x24(%ebp),%edx$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	89 10                	mov    %edx,(%eax)$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	75 d9                	jne    f010111c <boot_map_region+0x29>$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	5b                   	pop    %ebx$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	5e                   	pop    %esi$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	5f                   	pop    %edi$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	5d                   	pop    %ebp$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	c3                   	ret    $/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b <page_lookup>:$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	55                   	push   %ebp$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	89 e5                	mov    %esp,%ebp$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	53                   	push   %ebx$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	6a 00                	push   $0x0$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	e8 fe fe ff ff       	call   f0101060 <pgdir_walk>$/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	85 db                	test   %ebx,%ebx$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	74 02                	je     f010116b <page_lookup+0x20>$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	89 03                	mov    %eax,(%ebx)$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	85 c0                	test   %eax,%eax$/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	74 30                	je     f010119f <page_lookup+0x54>$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	8b 00                	mov    (%eax),%eax$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	a8 01                	test   $0x1,%al$/;"	l
f0101173	obj/kern/kernel.asm	/^f0101173:	74 31                	je     f01011a6 <page_lookup+0x5b>$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	3b 05 28 80 41 f0    	cmp    0xf0418028,%eax$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	72 14                	jb     f0101194 <page_lookup+0x49>$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	68 88 6b 10 f0       	push   $0xf0106b88$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	6a 51                	push   $0x51$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	e8 5c ef ff ff       	call   f01000f0 <_panic>$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	8b 15 30 80 41 f0    	mov    0xf0418030,%edx$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d:	eb 0c                	jmp    f01011ab <page_lookup+0x60>$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	eb 05                	jmp    f01011ab <page_lookup+0x60>$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	c9                   	leave  $/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	c3                   	ret    $/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0 <tlb_invalidate>:$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	55                   	push   %ebp$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	85 c0                	test   %eax,%eax$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	74 08                	je     f01011c4 <tlb_invalidate+0x14>$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	39 50 5c             	cmp    %edx,0x5c(%eax)$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	75 06                	jne    f01011ca <tlb_invalidate+0x1a>$/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	0f 01 38             	invlpg (%eax)$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	5d                   	pop    %ebp$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	c3                   	ret    $/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc <page_remove>:$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	55                   	push   %ebp$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	89 e5                	mov    %esp,%ebp$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	56                   	push   %esi$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	53                   	push   %ebx$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	50                   	push   %eax$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	56                   	push   %esi$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	53                   	push   %ebx$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	e8 66 ff ff ff       	call   f010114b <page_lookup>$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	85 c0                	test   %eax,%eax$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	74 1f                	je     f010120b <page_remove+0x3f>$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef:	50                   	push   %eax$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	e8 44 fe ff ff       	call   f0101039 <page_decref>$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01011fe	obj/kern/kernel.asm	/^f01011fe:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	56                   	push   %esi$/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	53                   	push   %ebx$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	e8 a8 ff ff ff       	call   f01011b0 <tlb_invalidate>$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	83 c4 10             	add    $0x10,%esp$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	5b                   	pop    %ebx$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	5e                   	pop    %esi$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	5d                   	pop    %ebp$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	c3                   	ret    $/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212 <page_insert>:$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	55                   	push   %ebp$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	89 e5                	mov    %esp,%ebp$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	57                   	push   %edi$/;"	l
f0101216	obj/kern/kernel.asm	/^f0101216:	56                   	push   %esi$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	53                   	push   %ebx$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	6a 01                	push   $0x1$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	57                   	push   %edi$/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	e8 34 fe ff ff       	call   f0101060 <pgdir_walk>$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	85 c0                	test   %eax,%eax$/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231:	74 5e                	je     f0101291 <page_insert+0x7f>$/;"	l
f0101233	obj/kern/kernel.asm	/^f0101233:	89 c3                	mov    %eax,%ebx$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	8b 00                	mov    (%eax),%eax$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	a8 01                	test   $0x1,%al$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	74 26                	je     f0101261 <page_insert+0x4f>$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	89 f2                	mov    %esi,%edx$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	2b 15 30 80 41 f0    	sub    0xf0418030,%edx$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	39 d0                	cmp    %edx,%eax$/;"	l
f0101250	obj/kern/kernel.asm	/^f0101250:	74 2e                	je     f0101280 <page_insert+0x6e>$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	57                   	push   %edi$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101259	obj/kern/kernel.asm	/^f0101259:	e8 6e ff ff ff       	call   f01011cc <page_remove>$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	89 f0                	mov    %esi,%eax$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	8b 13                	mov    (%ebx),%edx$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	39 c2                	cmp    %eax,%edx$/;"	l
f0101279	obj/kern/kernel.asm	/^f0101279:	74 05                	je     f0101280 <page_insert+0x6e>$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	83 ca 01             	or     $0x1,%edx$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	09 d0                	or     %edx,%eax$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	89 03                	mov    %eax,(%ebx)$/;"	l
f010128a	obj/kern/kernel.asm	/^f010128a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	eb 05                	jmp    f0101296 <page_insert+0x84>$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	5b                   	pop    %ebx$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	5e                   	pop    %esi$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	5f                   	pop    %edi$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	5d                   	pop    %ebp$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	c3                   	ret    $/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e <mem_init>:$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	55                   	push   %ebp$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	89 e5                	mov    %esp,%ebp$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	57                   	push   %edi$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	56                   	push   %esi$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	53                   	push   %ebx$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	83 ec 38             	sub    $0x38,%esp$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	6a 15                	push   $0x15$/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	e8 65 26 00 00       	call   f0103913 <mc146818_read>$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	89 c3                	mov    %eax,%ebx$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	e8 57 26 00 00       	call   f0103913 <mc146818_read>$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	09 d8                	or     %ebx,%eax$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	85 c0                	test   %eax,%eax$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	a3 24 23 41 f0       	mov    %eax,0xf0412324$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	e8 30 26 00 00       	call   f0103913 <mc146818_read>$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	89 c3                	mov    %eax,%ebx$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	e8 22 26 00 00       	call   f0103913 <mc146818_read>$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	09 d8                	or     %ebx,%eax$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	85 c0                	test   %eax,%eax$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	85 c0                	test   %eax,%eax$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	74 0e                	je     f010131c <mem_init+0x7e>$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	89 15 28 80 41 f0    	mov    %edx,0xf0418028$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	eb 0c                	jmp    f0101328 <mem_init+0x8a>$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	8b 15 24 23 41 f0    	mov    0xf0412324,%edx$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	89 15 28 80 41 f0    	mov    %edx,0xf0418028$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	50                   	push   %eax$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	8b 15 24 23 41 f0    	mov    0xf0412324,%edx$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	c1 ea 0a             	shr    $0xa,%edx$/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	52                   	push   %edx$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	50                   	push   %eax$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	68 a8 6b 10 f0       	push   $0xf0106ba8$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	e8 76 27 00 00       	call   f0103abd <cprintf>$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f010134c	obj/kern/kernel.asm	/^f010134c:	e8 17 f8 ff ff       	call   f0100b68 <boot_alloc>$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	a3 2c 80 41 f0       	mov    %eax,0xf041802c$/;"	l
f0101356	obj/kern/kernel.asm	/^f0101356:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	68 00 10 00 00       	push   $0x1000$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	6a 00                	push   $0x0$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	50                   	push   %eax$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	e8 6b 44 00 00       	call   f01057d1 <memset>$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	77 15                	ja     f010138a <mem_init+0xec>$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	50                   	push   %eax$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	68 93 00 00 00       	push   $0x93$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101385	obj/kern/kernel.asm	/^f0101385:	e8 66 ed ff ff       	call   f01000f0 <_panic>$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	a1 28 80 41 f0       	mov    0xf0418028,%eax$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	e8 c2 f7 ff ff       	call   f0100b68 <boot_alloc>$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	a3 30 80 41 f0       	mov    %eax,0xf0418030$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	8b 35 28 80 41 f0    	mov    0xf0418028,%esi$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	8d 14 f5 00 00 00 00 	lea    0x0(,%esi,8),%edx$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	52                   	push   %edx$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	6a 00                	push   $0x0$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	50                   	push   %eax$/;"	l
f01013bf	obj/kern/kernel.asm	/^f01013bf:	e8 0d 44 00 00       	call   f01057d1 <memset>$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	b8 00 f0 0c 00       	mov    $0xcf000,%eax$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	e8 9a f7 ff ff       	call   f0100b68 <boot_alloc>$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	a3 2c 23 41 f0       	mov    %eax,0xf041232c$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01013d6	obj/kern/kernel.asm	/^f01013d6:	68 00 f0 0c 00       	push   $0xcf000$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	6a 00                	push   $0x0$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	50                   	push   %eax$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	e8 ee 43 00 00       	call   f01057d1 <memset>$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	e8 7b f7 ff ff       	call   f0100b68 <boot_alloc>$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	a3 24 80 41 f0       	mov    %eax,0xf0418024$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	6a 08                	push   $0x8$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	6a 00                	push   $0x0$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	50                   	push   %eax$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	e8 d2 43 00 00       	call   f01057d1 <memset>$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	e8 da fa ff ff       	call   f0100ede <page_init>$/;"	l
f0101404	obj/kern/kernel.asm	/^f0101404:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	e8 1c f8 ff ff       	call   f0100c2a <check_page_free_list>$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101411	obj/kern/kernel.asm	/^f0101411:	83 3d 30 80 41 f0 00 	cmpl   $0x0,0xf0418030$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	75 17                	jne    f0101431 <mem_init+0x193>$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	68 53 68 10 f0       	push   $0xf0106853$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	68 b0 02 00 00       	push   $0x2b0$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	e8 bf ec ff ff       	call   f01000f0 <_panic>$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	a1 20 23 41 f0       	mov    0xf0412320,%eax$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	eb 05                	jmp    f0101442 <mem_init+0x1a4>$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	8b 00                	mov    (%eax),%eax$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	85 c0                	test   %eax,%eax$/;"	l
f0101444	obj/kern/kernel.asm	/^f0101444:	75 f7                	jne    f010143d <mem_init+0x19f>$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	6a 00                	push   $0x0$/;"	l
f010144b	obj/kern/kernel.asm	/^f010144b:	e8 27 fb ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450:	89 c7                	mov    %eax,%edi$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	85 c0                	test   %eax,%eax$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	75 19                	jne    f0101472 <mem_init+0x1d4>$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	68 6e 68 10 f0       	push   $0xf010686e$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	68 b8 02 00 00       	push   $0x2b8$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	e8 7e ec ff ff       	call   f01000f0 <_panic>$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	6a 00                	push   $0x0$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	e8 fb fa ff ff       	call   f0100f77 <page_alloc>$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	89 c6                	mov    %eax,%esi$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	85 c0                	test   %eax,%eax$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	75 19                	jne    f010149e <mem_init+0x200>$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	68 84 68 10 f0       	push   $0xf0106884$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	68 b9 02 00 00       	push   $0x2b9$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	e8 52 ec ff ff       	call   f01000f0 <_panic>$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	6a 00                	push   $0x0$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	e8 cf fa ff ff       	call   f0100f77 <page_alloc>$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	85 c0                	test   %eax,%eax$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	75 19                	jne    f01014cb <mem_init+0x22d>$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	68 9a 68 10 f0       	push   $0xf010689a$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	68 ba 02 00 00       	push   $0x2ba$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	e8 25 ec ff ff       	call   f01000f0 <_panic>$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	39 f7                	cmp    %esi,%edi$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	75 19                	jne    f01014e8 <mem_init+0x24a>$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	68 b0 68 10 f0       	push   $0xf01068b0$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	68 bd 02 00 00       	push   $0x2bd$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01014e3	obj/kern/kernel.asm	/^f01014e3:	e8 08 ec ff ff       	call   f01000f0 <_panic>$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	39 c6                	cmp    %eax,%esi$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	74 04                	je     f01014f3 <mem_init+0x255>$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	39 c7                	cmp    %eax,%edi$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	75 19                	jne    f010150c <mem_init+0x26e>$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	68 e4 6b 10 f0       	push   $0xf0106be4$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01014fd	obj/kern/kernel.asm	/^f01014fd:	68 be 02 00 00       	push   $0x2be$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	e8 e4 eb ff ff       	call   f01000f0 <_panic>$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	8b 0d 30 80 41 f0    	mov    0xf0418030,%ecx$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	8b 15 28 80 41 f0    	mov    0xf0418028,%edx$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	89 f8                	mov    %edi,%eax$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	29 c8                	sub    %ecx,%eax$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	39 d0                	cmp    %edx,%eax$/;"	l
f0101527	obj/kern/kernel.asm	/^f0101527:	72 19                	jb     f0101542 <mem_init+0x2a4>$/;"	l
f0101529	obj/kern/kernel.asm	/^f0101529:	68 c2 68 10 f0       	push   $0xf01068c2$/;"	l
f010152e	obj/kern/kernel.asm	/^f010152e:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	68 bf 02 00 00       	push   $0x2bf$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	e8 ae eb ff ff       	call   f01000f0 <_panic>$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	89 f0                	mov    %esi,%eax$/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	29 c8                	sub    %ecx,%eax$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	39 c2                	cmp    %eax,%edx$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	77 19                	ja     f0101569 <mem_init+0x2cb>$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	68 df 68 10 f0       	push   $0xf01068df$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	68 c0 02 00 00       	push   $0x2c0$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	e8 87 eb ff ff       	call   f01000f0 <_panic>$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	29 c8                	sub    %ecx,%eax$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	39 c2                	cmp    %eax,%edx$/;"	l
f0101576	obj/kern/kernel.asm	/^f0101576:	77 19                	ja     f0101591 <mem_init+0x2f3>$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	68 fc 68 10 f0       	push   $0xf01068fc$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	68 c1 02 00 00       	push   $0x2c1$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	e8 5f eb ff ff       	call   f01000f0 <_panic>$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	a1 20 23 41 f0       	mov    0xf0412320,%eax$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	c7 05 20 23 41 f0 00 	movl   $0x0,0xf0412320$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	00 00 00 $/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	6a 00                	push   $0x0$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	e8 ca f9 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	85 c0                	test   %eax,%eax$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	74 19                	je     f01015cd <mem_init+0x32f>$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	68 19 69 10 f0       	push   $0xf0106919$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	68 c8 02 00 00       	push   $0x2c8$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	e8 23 eb ff ff       	call   f01000f0 <_panic>$/;"	l
f01015cd	obj/kern/kernel.asm	/^f01015cd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	57                   	push   %edi$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	e8 11 fa ff ff       	call   f0100fe7 <page_free>$/;"	l
f01015d6	obj/kern/kernel.asm	/^f01015d6:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	e8 09 fa ff ff       	call   f0100fe7 <page_free>$/;"	l
f01015de	obj/kern/kernel.asm	/^f01015de:	83 c4 04             	add    $0x4,%esp$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	e8 fe f9 ff ff       	call   f0100fe7 <page_free>$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01015f0	obj/kern/kernel.asm	/^f01015f0:	e8 82 f9 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	89 c6                	mov    %eax,%esi$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	85 c0                	test   %eax,%eax$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	75 19                	jne    f0101617 <mem_init+0x379>$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	68 6e 68 10 f0       	push   $0xf010686e$/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	68 cf 02 00 00       	push   $0x2cf$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	e8 d9 ea ff ff       	call   f01000f0 <_panic>$/;"	l
f0101617	obj/kern/kernel.asm	/^f0101617:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010161a	obj/kern/kernel.asm	/^f010161a:	6a 00                	push   $0x0$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	e8 56 f9 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	89 c7                	mov    %eax,%edi$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101626	obj/kern/kernel.asm	/^f0101626:	85 c0                	test   %eax,%eax$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	75 19                	jne    f0101643 <mem_init+0x3a5>$/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	68 84 68 10 f0       	push   $0xf0106884$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	68 d0 02 00 00       	push   $0x2d0$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	e8 ad ea ff ff       	call   f01000f0 <_panic>$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	6a 00                	push   $0x0$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	e8 2a f9 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	85 c0                	test   %eax,%eax$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	75 19                	jne    f0101670 <mem_init+0x3d2>$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	68 9a 68 10 f0       	push   $0xf010689a$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	68 d1 02 00 00       	push   $0x2d1$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	e8 80 ea ff ff       	call   f01000f0 <_panic>$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	39 fe                	cmp    %edi,%esi$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	75 19                	jne    f010168d <mem_init+0x3ef>$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	68 b0 68 10 f0       	push   $0xf01068b0$/;"	l
f0101679	obj/kern/kernel.asm	/^f0101679:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	68 d3 02 00 00       	push   $0x2d3$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	e8 63 ea ff ff       	call   f01000f0 <_panic>$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	39 c7                	cmp    %eax,%edi$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	74 04                	je     f0101698 <mem_init+0x3fa>$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	39 c6                	cmp    %eax,%esi$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	75 19                	jne    f01016b1 <mem_init+0x413>$/;"	l
f0101698	obj/kern/kernel.asm	/^f0101698:	68 e4 6b 10 f0       	push   $0xf0106be4$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	68 d4 02 00 00       	push   $0x2d4$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	e8 3f ea ff ff       	call   f01000f0 <_panic>$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	6a 00                	push   $0x0$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	e8 bc f8 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	85 c0                	test   %eax,%eax$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	74 19                	je     f01016db <mem_init+0x43d>$/;"	l
f01016c2	obj/kern/kernel.asm	/^f01016c2:	68 19 69 10 f0       	push   $0xf0106919$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01016cc	obj/kern/kernel.asm	/^f01016cc:	68 d5 02 00 00       	push   $0x2d5$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	e8 15 ea ff ff       	call   f01000f0 <_panic>$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	89 f0                	mov    %esi,%eax$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016e9	obj/kern/kernel.asm	/^f01016e9:	89 c2                	mov    %eax,%edx$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	3b 15 28 80 41 f0    	cmp    0xf0418028,%edx$/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4:	72 12                	jb     f0101708 <mem_init+0x46a>$/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	50                   	push   %eax$/;"	l
f01016f7	obj/kern/kernel.asm	/^f01016f7:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	6a 58                	push   $0x58$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	e8 e8 e9 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	6a 01                	push   $0x1$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	50                   	push   %eax$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	e8 b4 40 00 00       	call   f01057d1 <memset>$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	e8 c2 f8 ff ff       	call   f0100fe7 <page_free>$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f010172c	obj/kern/kernel.asm	/^f010172c:	e8 46 f8 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	85 c0                	test   %eax,%eax$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	75 19                	jne    f0101751 <mem_init+0x4b3>$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	68 28 69 10 f0       	push   $0xf0106928$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101742	obj/kern/kernel.asm	/^f0101742:	68 da 02 00 00       	push   $0x2da$/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	e8 9f e9 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	39 c6                	cmp    %eax,%esi$/;"	l
f0101753	obj/kern/kernel.asm	/^f0101753:	74 19                	je     f010176e <mem_init+0x4d0>$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	68 46 69 10 f0       	push   $0xf0106946$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	68 db 02 00 00       	push   $0x2db$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101769	obj/kern/kernel.asm	/^f0101769:	e8 82 e9 ff ff       	call   f01000f0 <_panic>$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	89 f0                	mov    %esi,%eax$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	89 c2                	mov    %eax,%edx$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	3b 15 28 80 41 f0    	cmp    0xf0418028,%edx$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	72 12                	jb     f010179b <mem_init+0x4fd>$/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	50                   	push   %eax$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	6a 58                	push   $0x58$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	e8 55 e9 ff ff       	call   f01000f0 <_panic>$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f01017aa	obj/kern/kernel.asm	/^f01017aa:	74 19                	je     f01017c5 <mem_init+0x527>$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	68 56 69 10 f0       	push   $0xf0106956$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	68 de 02 00 00       	push   $0x2de$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	e8 2b e9 ff ff       	call   f01000f0 <_panic>$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	83 c0 01             	add    $0x1,%eax$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	39 d0                	cmp    %edx,%eax$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	75 db                	jne    f01017a7 <mem_init+0x509>$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	a3 20 23 41 f0       	mov    %eax,0xf0412320$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	56                   	push   %esi$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	e8 0a f8 ff ff       	call   f0100fe7 <page_free>$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01017e0	obj/kern/kernel.asm	/^f01017e0:	e8 02 f8 ff ff       	call   f0100fe7 <page_free>$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	83 c4 04             	add    $0x4,%esp$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	e8 f7 f7 ff ff       	call   f0100fe7 <page_free>$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	a1 20 23 41 f0       	mov    0xf0412320,%eax$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	eb 05                	jmp    f01017ff <mem_init+0x561>$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01017fd	obj/kern/kernel.asm	/^f01017fd:	8b 00                	mov    (%eax),%eax$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	85 c0                	test   %eax,%eax$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	75 f7                	jne    f01017fa <mem_init+0x55c>$/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	85 db                	test   %ebx,%ebx$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	74 19                	je     f0101820 <mem_init+0x582>$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	68 60 69 10 f0       	push   $0xf0106960$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	68 eb 02 00 00       	push   $0x2eb$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	e8 d0 e8 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	68 04 6c 10 f0       	push   $0xf0106c04$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	e8 90 22 00 00       	call   f0103abd <cprintf>$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	e8 3e f7 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010183c	obj/kern/kernel.asm	/^f010183c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	85 c0                	test   %eax,%eax$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	75 19                	jne    f010185c <mem_init+0x5be>$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	68 6e 68 10 f0       	push   $0xf010686e$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	68 49 03 00 00       	push   $0x349$/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	e8 94 e8 ff ff       	call   f01000f0 <_panic>$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	6a 00                	push   $0x0$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	e8 11 f7 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0101866	obj/kern/kernel.asm	/^f0101866:	89 c3                	mov    %eax,%ebx$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	83 c4 10             	add    $0x10,%esp$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	85 c0                	test   %eax,%eax$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	75 19                	jne    f0101888 <mem_init+0x5ea>$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	68 84 68 10 f0       	push   $0xf0106884$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	68 4a 03 00 00       	push   $0x34a$/;"	l
f010187e	obj/kern/kernel.asm	/^f010187e:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	e8 68 e8 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	6a 00                	push   $0x0$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	e8 e5 f6 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	89 c6                	mov    %eax,%esi$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	85 c0                	test   %eax,%eax$/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899:	75 19                	jne    f01018b4 <mem_init+0x616>$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	68 9a 68 10 f0       	push   $0xf010689a$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	68 4b 03 00 00       	push   $0x34b$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01018af	obj/kern/kernel.asm	/^f01018af:	e8 3c e8 ff ff       	call   f01000f0 <_panic>$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	75 19                	jne    f01018d2 <mem_init+0x634>$/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	68 b0 68 10 f0       	push   $0xf01068b0$/;"	l
f01018be	obj/kern/kernel.asm	/^f01018be:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01018c3	obj/kern/kernel.asm	/^f01018c3:	68 4e 03 00 00       	push   $0x34e$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	e8 1e e8 ff ff       	call   f01000f0 <_panic>$/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	39 c3                	cmp    %eax,%ebx$/;"	l
f01018d4	obj/kern/kernel.asm	/^f01018d4:	74 05                	je     f01018db <mem_init+0x63d>$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	75 19                	jne    f01018f4 <mem_init+0x656>$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	68 e4 6b 10 f0       	push   $0xf0106be4$/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	68 4f 03 00 00       	push   $0x34f$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	e8 fc e7 ff ff       	call   f01000f0 <_panic>$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	a1 20 23 41 f0       	mov    0xf0412320,%eax$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	c7 05 20 23 41 f0 00 	movl   $0x0,0xf0412320$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	00 00 00 $/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	6a 00                	push   $0x0$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	e8 67 f6 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	85 c0                	test   %eax,%eax$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	74 19                	je     f0101930 <mem_init+0x692>$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	68 19 69 10 f0       	push   $0xf0106919$/;"	l
f010191c	obj/kern/kernel.asm	/^f010191c:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	68 56 03 00 00       	push   $0x356$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	e8 c0 e7 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101933	obj/kern/kernel.asm	/^f0101933:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	50                   	push   %eax$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	6a 00                	push   $0x0$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	e8 07 f8 ff ff       	call   f010114b <page_lookup>$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101947	obj/kern/kernel.asm	/^f0101947:	85 c0                	test   %eax,%eax$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	74 19                	je     f0101964 <mem_init+0x6c6>$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	68 24 6c 10 f0       	push   $0xf0106c24$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	68 59 03 00 00       	push   $0x359$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	e8 8c e7 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	6a 02                	push   $0x2$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	6a 00                	push   $0x0$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	53                   	push   %ebx$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	e8 9e f8 ff ff       	call   f0101212 <page_insert>$/;"	l
f0101974	obj/kern/kernel.asm	/^f0101974:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	85 c0                	test   %eax,%eax$/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	78 19                	js     f0101994 <mem_init+0x6f6>$/;"	l
f010197b	obj/kern/kernel.asm	/^f010197b:	68 5c 6c 10 f0       	push   $0xf0106c5c$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	68 5c 03 00 00       	push   $0x35c$/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	e8 5c e7 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101997	obj/kern/kernel.asm	/^f0101997:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	e8 48 f6 ff ff       	call   f0100fe7 <page_free>$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	6a 02                	push   $0x2$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	6a 00                	push   $0x0$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	53                   	push   %ebx$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	e8 63 f8 ff ff       	call   f0101212 <page_insert>$/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	83 c4 20             	add    $0x20,%esp$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	85 c0                	test   %eax,%eax$/;"	l
f01019b4	obj/kern/kernel.asm	/^f01019b4:	74 19                	je     f01019cf <mem_init+0x731>$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	68 8c 6c 10 f0       	push   $0xf0106c8c$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	68 60 03 00 00       	push   $0x360$/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	e8 21 e7 ff ff       	call   f01000f0 <_panic>$/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	8b 3d 2c 80 41 f0    	mov    0xf041802c,%edi$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	a1 30 80 41 f0       	mov    0xf0418030,%eax$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	89 c1                	mov    %eax,%ecx$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	8b 17                	mov    (%edi),%edx$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01019ea	obj/kern/kernel.asm	/^f01019ea:	29 c8                	sub    %ecx,%eax$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01019ef	obj/kern/kernel.asm	/^f01019ef:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01019f2	obj/kern/kernel.asm	/^f01019f2:	39 c2                	cmp    %eax,%edx$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	74 19                	je     f0101a0f <mem_init+0x771>$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01019fb	obj/kern/kernel.asm	/^f01019fb:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	68 61 03 00 00       	push   $0x361$/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	e8 e1 e6 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	89 f8                	mov    %edi,%eax$/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	e8 ab f1 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	89 da                	mov    %ebx,%edx$/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101a20	obj/kern/kernel.asm	/^f0101a20:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	39 d0                	cmp    %edx,%eax$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	74 19                	je     f0101a43 <mem_init+0x7a5>$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	68 e4 6c 10 f0       	push   $0xf0106ce4$/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	68 62 03 00 00       	push   $0x362$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	e8 ad e6 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	74 19                	je     f0101a63 <mem_init+0x7c5>$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	68 6b 69 10 f0       	push   $0xf010696b$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	68 63 03 00 00       	push   $0x363$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	e8 8d e6 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a66	obj/kern/kernel.asm	/^f0101a66:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101a6b	obj/kern/kernel.asm	/^f0101a6b:	74 19                	je     f0101a86 <mem_init+0x7e8>$/;"	l
f0101a6d	obj/kern/kernel.asm	/^f0101a6d:	68 7c 69 10 f0       	push   $0xf010697c$/;"	l
f0101a72	obj/kern/kernel.asm	/^f0101a72:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	68 64 03 00 00       	push   $0x364$/;"	l
f0101a7c	obj/kern/kernel.asm	/^f0101a7c:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	e8 6a e6 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101a86	obj/kern/kernel.asm	/^f0101a86:	6a 02                	push   $0x2$/;"	l
f0101a88	obj/kern/kernel.asm	/^f0101a88:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101a8d	obj/kern/kernel.asm	/^f0101a8d:	56                   	push   %esi$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	57                   	push   %edi$/;"	l
f0101a8f	obj/kern/kernel.asm	/^f0101a8f:	e8 7e f7 ff ff       	call   f0101212 <page_insert>$/;"	l
f0101a94	obj/kern/kernel.asm	/^f0101a94:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	85 c0                	test   %eax,%eax$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	74 19                	je     f0101ab4 <mem_init+0x816>$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	68 14 6d 10 f0       	push   $0xf0106d14$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101aa5	obj/kern/kernel.asm	/^f0101aa5:	68 67 03 00 00       	push   $0x367$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	e8 3c e6 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	e8 03 f1 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	89 f2                	mov    %esi,%edx$/;"	l
f0101ac5	obj/kern/kernel.asm	/^f0101ac5:	2b 15 30 80 41 f0    	sub    0xf0418030,%edx$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101ace	obj/kern/kernel.asm	/^f0101ace:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	74 19                	je     f0101aee <mem_init+0x850>$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	68 50 6d 10 f0       	push   $0xf0106d50$/;"	l
f0101ada	obj/kern/kernel.asm	/^f0101ada:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	68 68 03 00 00       	push   $0x368$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101ae9	obj/kern/kernel.asm	/^f0101ae9:	e8 02 e6 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101aee	obj/kern/kernel.asm	/^f0101aee:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	74 19                	je     f0101b0e <mem_init+0x870>$/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	68 8d 69 10 f0       	push   $0xf010698d$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	68 69 03 00 00       	push   $0x369$/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	e8 e2 e5 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b11	obj/kern/kernel.asm	/^f0101b11:	6a 00                	push   $0x0$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	e8 5f f4 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	85 c0                	test   %eax,%eax$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	74 19                	je     f0101b38 <mem_init+0x89a>$/;"	l
f0101b1f	obj/kern/kernel.asm	/^f0101b1f:	68 19 69 10 f0       	push   $0xf0106919$/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	68 6c 03 00 00       	push   $0x36c$/;"	l
f0101b2e	obj/kern/kernel.asm	/^f0101b2e:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	e8 b8 e5 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101b38	obj/kern/kernel.asm	/^f0101b38:	6a 02                	push   $0x2$/;"	l
f0101b3a	obj/kern/kernel.asm	/^f0101b3a:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101b3f	obj/kern/kernel.asm	/^f0101b3f:	56                   	push   %esi$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f0101b46	obj/kern/kernel.asm	/^f0101b46:	e8 c7 f6 ff ff       	call   f0101212 <page_insert>$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e:	85 c0                	test   %eax,%eax$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	74 19                	je     f0101b6b <mem_init+0x8cd>$/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	68 14 6d 10 f0       	push   $0xf0106d14$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	68 6f 03 00 00       	push   $0x36f$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	e8 85 e5 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	e8 4c f0 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	89 f2                	mov    %esi,%edx$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	2b 15 30 80 41 f0    	sub    0xf0418030,%edx$/;"	l
f0101b82	obj/kern/kernel.asm	/^f0101b82:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b88	obj/kern/kernel.asm	/^f0101b88:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b8a	obj/kern/kernel.asm	/^f0101b8a:	74 19                	je     f0101ba5 <mem_init+0x907>$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	68 50 6d 10 f0       	push   $0xf0106d50$/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101b96	obj/kern/kernel.asm	/^f0101b96:	68 70 03 00 00       	push   $0x370$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101ba0	obj/kern/kernel.asm	/^f0101ba0:	e8 4b e5 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101baa	obj/kern/kernel.asm	/^f0101baa:	74 19                	je     f0101bc5 <mem_init+0x927>$/;"	l
f0101bac	obj/kern/kernel.asm	/^f0101bac:	68 8d 69 10 f0       	push   $0xf010698d$/;"	l
f0101bb1	obj/kern/kernel.asm	/^f0101bb1:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	68 71 03 00 00       	push   $0x371$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	e8 2b e5 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	6a 00                	push   $0x0$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	e8 a8 f3 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	85 c0                	test   %eax,%eax$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	74 19                	je     f0101bef <mem_init+0x951>$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	68 19 69 10 f0       	push   $0xf0106919$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101be0	obj/kern/kernel.asm	/^f0101be0:	68 75 03 00 00       	push   $0x375$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	e8 01 e5 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	8b 15 2c 80 41 f0    	mov    0xf041802c,%edx$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	8b 02                	mov    (%edx),%eax$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	89 c1                	mov    %eax,%ecx$/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	3b 0d 28 80 41 f0    	cmp    0xf0418028,%ecx$/;"	l
f0101c07	obj/kern/kernel.asm	/^f0101c07:	72 15                	jb     f0101c1e <mem_init+0x980>$/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	50                   	push   %eax$/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f0101c0f	obj/kern/kernel.asm	/^f0101c0f:	68 78 03 00 00       	push   $0x378$/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	e8 d2 e4 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	6a 00                	push   $0x0$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	52                   	push   %edx$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	e8 2a f4 ff ff       	call   f0101060 <pgdir_walk>$/;"	l
f0101c36	obj/kern/kernel.asm	/^f0101c36:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101c3c	obj/kern/kernel.asm	/^f0101c3c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	74 19                	je     f0101c5c <mem_init+0x9be>$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	68 80 6d 10 f0       	push   $0xf0106d80$/;"	l
f0101c48	obj/kern/kernel.asm	/^f0101c48:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101c4d	obj/kern/kernel.asm	/^f0101c4d:	68 79 03 00 00       	push   $0x379$/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101c57	obj/kern/kernel.asm	/^f0101c57:	e8 94 e4 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	6a 06                	push   $0x6$/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c63	obj/kern/kernel.asm	/^f0101c63:	56                   	push   %esi$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f0101c6a	obj/kern/kernel.asm	/^f0101c6a:	e8 a3 f5 ff ff       	call   f0101212 <page_insert>$/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	85 c0                	test   %eax,%eax$/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74:	74 19                	je     f0101c8f <mem_init+0x9f1>$/;"	l
f0101c76	obj/kern/kernel.asm	/^f0101c76:	68 c0 6d 10 f0       	push   $0xf0106dc0$/;"	l
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101c80	obj/kern/kernel.asm	/^f0101c80:	68 7c 03 00 00       	push   $0x37c$/;"	l
f0101c85	obj/kern/kernel.asm	/^f0101c85:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101c8a	obj/kern/kernel.asm	/^f0101c8a:	e8 61 e4 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101c8f	obj/kern/kernel.asm	/^f0101c8f:	8b 3d 2c 80 41 f0    	mov    0xf041802c,%edi$/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101c9a	obj/kern/kernel.asm	/^f0101c9a:	89 f8                	mov    %edi,%eax$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	e8 25 ef ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	89 f2                	mov    %esi,%edx$/;"	l
f0101ca3	obj/kern/kernel.asm	/^f0101ca3:	2b 15 30 80 41 f0    	sub    0xf0418030,%edx$/;"	l
f0101ca9	obj/kern/kernel.asm	/^f0101ca9:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	39 d0                	cmp    %edx,%eax$/;"	l
f0101cb1	obj/kern/kernel.asm	/^f0101cb1:	74 19                	je     f0101ccc <mem_init+0xa2e>$/;"	l
f0101cb3	obj/kern/kernel.asm	/^f0101cb3:	68 50 6d 10 f0       	push   $0xf0106d50$/;"	l
f0101cb8	obj/kern/kernel.asm	/^f0101cb8:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	68 7d 03 00 00       	push   $0x37d$/;"	l
f0101cc2	obj/kern/kernel.asm	/^f0101cc2:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101cc7	obj/kern/kernel.asm	/^f0101cc7:	e8 24 e4 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101ccc	obj/kern/kernel.asm	/^f0101ccc:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101cd1	obj/kern/kernel.asm	/^f0101cd1:	74 19                	je     f0101cec <mem_init+0xa4e>$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	68 8d 69 10 f0       	push   $0xf010698d$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	68 7e 03 00 00       	push   $0x37e$/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101ce7	obj/kern/kernel.asm	/^f0101ce7:	e8 04 e4 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101cef	obj/kern/kernel.asm	/^f0101cef:	6a 00                	push   $0x0$/;"	l
f0101cf1	obj/kern/kernel.asm	/^f0101cf1:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	57                   	push   %edi$/;"	l
f0101cf7	obj/kern/kernel.asm	/^f0101cf7:	e8 64 f3 ff ff       	call   f0101060 <pgdir_walk>$/;"	l
f0101cfc	obj/kern/kernel.asm	/^f0101cfc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d02	obj/kern/kernel.asm	/^f0101d02:	75 19                	jne    f0101d1d <mem_init+0xa7f>$/;"	l
f0101d04	obj/kern/kernel.asm	/^f0101d04:	68 00 6e 10 f0       	push   $0xf0106e00$/;"	l
f0101d09	obj/kern/kernel.asm	/^f0101d09:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101d0e	obj/kern/kernel.asm	/^f0101d0e:	68 7f 03 00 00       	push   $0x37f$/;"	l
f0101d13	obj/kern/kernel.asm	/^f0101d13:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101d18	obj/kern/kernel.asm	/^f0101d18:	e8 d3 e3 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101d1d	obj/kern/kernel.asm	/^f0101d1d:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f0101d22	obj/kern/kernel.asm	/^f0101d22:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d25	obj/kern/kernel.asm	/^f0101d25:	75 19                	jne    f0101d40 <mem_init+0xaa2>$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	68 9e 69 10 f0       	push   $0xf010699e$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	68 80 03 00 00       	push   $0x380$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101d3b	obj/kern/kernel.asm	/^f0101d3b:	e8 b0 e3 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	6a 02                	push   $0x2$/;"	l
f0101d42	obj/kern/kernel.asm	/^f0101d42:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d47	obj/kern/kernel.asm	/^f0101d47:	56                   	push   %esi$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	50                   	push   %eax$/;"	l
f0101d49	obj/kern/kernel.asm	/^f0101d49:	e8 c4 f4 ff ff       	call   f0101212 <page_insert>$/;"	l
f0101d4e	obj/kern/kernel.asm	/^f0101d4e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	85 c0                	test   %eax,%eax$/;"	l
f0101d53	obj/kern/kernel.asm	/^f0101d53:	74 19                	je     f0101d6e <mem_init+0xad0>$/;"	l
f0101d55	obj/kern/kernel.asm	/^f0101d55:	68 14 6d 10 f0       	push   $0xf0106d14$/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101d5f	obj/kern/kernel.asm	/^f0101d5f:	68 83 03 00 00       	push   $0x383$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101d69	obj/kern/kernel.asm	/^f0101d69:	e8 82 e3 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101d6e	obj/kern/kernel.asm	/^f0101d6e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	6a 00                	push   $0x0$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	e8 dd f2 ff ff       	call   f0101060 <pgdir_walk>$/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d86	obj/kern/kernel.asm	/^f0101d86:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101d89	obj/kern/kernel.asm	/^f0101d89:	75 19                	jne    f0101da4 <mem_init+0xb06>$/;"	l
f0101d8b	obj/kern/kernel.asm	/^f0101d8b:	68 34 6e 10 f0       	push   $0xf0106e34$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	68 84 03 00 00       	push   $0x384$/;"	l
f0101d9a	obj/kern/kernel.asm	/^f0101d9a:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101d9f	obj/kern/kernel.asm	/^f0101d9f:	e8 4c e3 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101da4	obj/kern/kernel.asm	/^f0101da4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101da7	obj/kern/kernel.asm	/^f0101da7:	6a 00                	push   $0x0$/;"	l
f0101da9	obj/kern/kernel.asm	/^f0101da9:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	e8 a7 f2 ff ff       	call   f0101060 <pgdir_walk>$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101dbc	obj/kern/kernel.asm	/^f0101dbc:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101dbf	obj/kern/kernel.asm	/^f0101dbf:	74 19                	je     f0101dda <mem_init+0xb3c>$/;"	l
f0101dc1	obj/kern/kernel.asm	/^f0101dc1:	68 68 6e 10 f0       	push   $0xf0106e68$/;"	l
f0101dc6	obj/kern/kernel.asm	/^f0101dc6:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101dcb	obj/kern/kernel.asm	/^f0101dcb:	68 85 03 00 00       	push   $0x385$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101dd5	obj/kern/kernel.asm	/^f0101dd5:	e8 16 e3 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101dda	obj/kern/kernel.asm	/^f0101dda:	6a 02                	push   $0x2$/;"	l
f0101ddc	obj/kern/kernel.asm	/^f0101ddc:	68 00 00 40 00       	push   $0x400000$/;"	l
f0101de1	obj/kern/kernel.asm	/^f0101de1:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101de4	obj/kern/kernel.asm	/^f0101de4:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	e8 23 f4 ff ff       	call   f0101212 <page_insert>$/;"	l
f0101def	obj/kern/kernel.asm	/^f0101def:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	85 c0                	test   %eax,%eax$/;"	l
f0101df4	obj/kern/kernel.asm	/^f0101df4:	78 19                	js     f0101e0f <mem_init+0xb71>$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	68 a0 6e 10 f0       	push   $0xf0106ea0$/;"	l
f0101dfb	obj/kern/kernel.asm	/^f0101dfb:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101e00	obj/kern/kernel.asm	/^f0101e00:	68 88 03 00 00       	push   $0x388$/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101e0a	obj/kern/kernel.asm	/^f0101e0a:	e8 e1 e2 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	6a 02                	push   $0x2$/;"	l
f0101e11	obj/kern/kernel.asm	/^f0101e11:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	53                   	push   %ebx$/;"	l
f0101e17	obj/kern/kernel.asm	/^f0101e17:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	e8 f0 f3 ff ff       	call   f0101212 <page_insert>$/;"	l
f0101e22	obj/kern/kernel.asm	/^f0101e22:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e25	obj/kern/kernel.asm	/^f0101e25:	85 c0                	test   %eax,%eax$/;"	l
f0101e27	obj/kern/kernel.asm	/^f0101e27:	74 19                	je     f0101e42 <mem_init+0xba4>$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	68 d8 6e 10 f0       	push   $0xf0106ed8$/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	68 8b 03 00 00       	push   $0x38b$/;"	l
f0101e38	obj/kern/kernel.asm	/^f0101e38:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101e3d	obj/kern/kernel.asm	/^f0101e3d:	e8 ae e2 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101e42	obj/kern/kernel.asm	/^f0101e42:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	6a 00                	push   $0x0$/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f0101e52	obj/kern/kernel.asm	/^f0101e52:	e8 09 f2 ff ff       	call   f0101060 <pgdir_walk>$/;"	l
f0101e57	obj/kern/kernel.asm	/^f0101e57:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e5a	obj/kern/kernel.asm	/^f0101e5a:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101e5d	obj/kern/kernel.asm	/^f0101e5d:	74 19                	je     f0101e78 <mem_init+0xbda>$/;"	l
f0101e5f	obj/kern/kernel.asm	/^f0101e5f:	68 68 6e 10 f0       	push   $0xf0106e68$/;"	l
f0101e64	obj/kern/kernel.asm	/^f0101e64:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	68 8c 03 00 00       	push   $0x38c$/;"	l
f0101e6e	obj/kern/kernel.asm	/^f0101e6e:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73:	e8 78 e2 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	8b 3d 2c 80 41 f0    	mov    0xf041802c,%edi$/;"	l
f0101e7e	obj/kern/kernel.asm	/^f0101e7e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e83	obj/kern/kernel.asm	/^f0101e83:	89 f8                	mov    %edi,%eax$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	e8 3c ed ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0101e8a	obj/kern/kernel.asm	/^f0101e8a:	89 c1                	mov    %eax,%ecx$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101e8f	obj/kern/kernel.asm	/^f0101e8f:	89 d8                	mov    %ebx,%eax$/;"	l
f0101e91	obj/kern/kernel.asm	/^f0101e91:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f0101e97	obj/kern/kernel.asm	/^f0101e97:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e9d	obj/kern/kernel.asm	/^f0101e9d:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	74 19                	je     f0101eba <mem_init+0xc1c>$/;"	l
f0101ea1	obj/kern/kernel.asm	/^f0101ea1:	68 14 6f 10 f0       	push   $0xf0106f14$/;"	l
f0101ea6	obj/kern/kernel.asm	/^f0101ea6:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	68 8f 03 00 00       	push   $0x38f$/;"	l
f0101eb0	obj/kern/kernel.asm	/^f0101eb0:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101eb5	obj/kern/kernel.asm	/^f0101eb5:	e8 36 e2 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101eba	obj/kern/kernel.asm	/^f0101eba:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101ebf	obj/kern/kernel.asm	/^f0101ebf:	89 f8                	mov    %edi,%eax$/;"	l
f0101ec1	obj/kern/kernel.asm	/^f0101ec1:	e8 00 ed ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	74 19                	je     f0101ee4 <mem_init+0xc46>$/;"	l
f0101ecb	obj/kern/kernel.asm	/^f0101ecb:	68 40 6f 10 f0       	push   $0xf0106f40$/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	68 90 03 00 00       	push   $0x390$/;"	l
f0101eda	obj/kern/kernel.asm	/^f0101eda:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	e8 0c e2 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f0101ee9	obj/kern/kernel.asm	/^f0101ee9:	74 19                	je     f0101f04 <mem_init+0xc66>$/;"	l
f0101eeb	obj/kern/kernel.asm	/^f0101eeb:	68 b4 69 10 f0       	push   $0xf01069b4$/;"	l
f0101ef0	obj/kern/kernel.asm	/^f0101ef0:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	68 92 03 00 00       	push   $0x392$/;"	l
f0101efa	obj/kern/kernel.asm	/^f0101efa:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101eff	obj/kern/kernel.asm	/^f0101eff:	e8 ec e1 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	74 19                	je     f0101f24 <mem_init+0xc86>$/;"	l
f0101f0b	obj/kern/kernel.asm	/^f0101f0b:	68 c5 69 10 f0       	push   $0xf01069c5$/;"	l
f0101f10	obj/kern/kernel.asm	/^f0101f10:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	68 93 03 00 00       	push   $0x393$/;"	l
f0101f1a	obj/kern/kernel.asm	/^f0101f1a:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	e8 cc e1 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101f24	obj/kern/kernel.asm	/^f0101f24:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f27	obj/kern/kernel.asm	/^f0101f27:	6a 00                	push   $0x0$/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	e8 49 f0 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0101f2e	obj/kern/kernel.asm	/^f0101f2e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	85 c0                	test   %eax,%eax$/;"	l
f0101f33	obj/kern/kernel.asm	/^f0101f33:	74 04                	je     f0101f39 <mem_init+0xc9b>$/;"	l
f0101f35	obj/kern/kernel.asm	/^f0101f35:	39 c6                	cmp    %eax,%esi$/;"	l
f0101f37	obj/kern/kernel.asm	/^f0101f37:	74 19                	je     f0101f52 <mem_init+0xcb4>$/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	68 70 6f 10 f0       	push   $0xf0106f70$/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	68 96 03 00 00       	push   $0x396$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	e8 9e e1 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101f52	obj/kern/kernel.asm	/^f0101f52:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101f55	obj/kern/kernel.asm	/^f0101f55:	6a 00                	push   $0x0$/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	e8 6a f2 ff ff       	call   f01011cc <page_remove>$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	8b 3d 2c 80 41 f0    	mov    0xf041802c,%edi$/;"	l
f0101f68	obj/kern/kernel.asm	/^f0101f68:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f6d	obj/kern/kernel.asm	/^f0101f6d:	89 f8                	mov    %edi,%eax$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	e8 52 ec ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f77	obj/kern/kernel.asm	/^f0101f77:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101f7a	obj/kern/kernel.asm	/^f0101f7a:	74 19                	je     f0101f95 <mem_init+0xcf7>$/;"	l
f0101f7c	obj/kern/kernel.asm	/^f0101f7c:	68 94 6f 10 f0       	push   $0xf0106f94$/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101f86	obj/kern/kernel.asm	/^f0101f86:	68 9a 03 00 00       	push   $0x39a$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	e8 5b e1 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f9a	obj/kern/kernel.asm	/^f0101f9a:	89 f8                	mov    %edi,%eax$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	e8 25 ec ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	89 da                	mov    %ebx,%edx$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	2b 15 30 80 41 f0    	sub    0xf0418030,%edx$/;"	l
f0101fa9	obj/kern/kernel.asm	/^f0101fa9:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101faf	obj/kern/kernel.asm	/^f0101faf:	39 d0                	cmp    %edx,%eax$/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	74 19                	je     f0101fcc <mem_init+0xd2e>$/;"	l
f0101fb3	obj/kern/kernel.asm	/^f0101fb3:	68 40 6f 10 f0       	push   $0xf0106f40$/;"	l
f0101fb8	obj/kern/kernel.asm	/^f0101fb8:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101fbd	obj/kern/kernel.asm	/^f0101fbd:	68 9b 03 00 00       	push   $0x39b$/;"	l
f0101fc2	obj/kern/kernel.asm	/^f0101fc2:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101fc7	obj/kern/kernel.asm	/^f0101fc7:	e8 24 e1 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	74 19                	je     f0101fec <mem_init+0xd4e>$/;"	l
f0101fd3	obj/kern/kernel.asm	/^f0101fd3:	68 6b 69 10 f0       	push   $0xf010696b$/;"	l
f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101fdd	obj/kern/kernel.asm	/^f0101fdd:	68 9c 03 00 00       	push   $0x39c$/;"	l
f0101fe2	obj/kern/kernel.asm	/^f0101fe2:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0101fe7	obj/kern/kernel.asm	/^f0101fe7:	e8 04 e1 ff ff       	call   f01000f0 <_panic>$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1:	74 19                	je     f010200c <mem_init+0xd6e>$/;"	l
f0101ff3	obj/kern/kernel.asm	/^f0101ff3:	68 c5 69 10 f0       	push   $0xf01069c5$/;"	l
f0101ff8	obj/kern/kernel.asm	/^f0101ff8:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	68 9d 03 00 00       	push   $0x39d$/;"	l
f0102002	obj/kern/kernel.asm	/^f0102002:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102007	obj/kern/kernel.asm	/^f0102007:	e8 e4 e0 ff ff       	call   f01000f0 <_panic>$/;"	l
f010200c	obj/kern/kernel.asm	/^f010200c:	6a 00                	push   $0x0$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102013	obj/kern/kernel.asm	/^f0102013:	53                   	push   %ebx$/;"	l
f0102014	obj/kern/kernel.asm	/^f0102014:	57                   	push   %edi$/;"	l
f0102015	obj/kern/kernel.asm	/^f0102015:	e8 f8 f1 ff ff       	call   f0101212 <page_insert>$/;"	l
f010201a	obj/kern/kernel.asm	/^f010201a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010201d	obj/kern/kernel.asm	/^f010201d:	85 c0                	test   %eax,%eax$/;"	l
f010201f	obj/kern/kernel.asm	/^f010201f:	74 19                	je     f010203a <mem_init+0xd9c>$/;"	l
f0102021	obj/kern/kernel.asm	/^f0102021:	68 b8 6f 10 f0       	push   $0xf0106fb8$/;"	l
f0102026	obj/kern/kernel.asm	/^f0102026:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	68 a0 03 00 00       	push   $0x3a0$/;"	l
f0102030	obj/kern/kernel.asm	/^f0102030:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102035	obj/kern/kernel.asm	/^f0102035:	e8 b6 e0 ff ff       	call   f01000f0 <_panic>$/;"	l
f010203a	obj/kern/kernel.asm	/^f010203a:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010203f	obj/kern/kernel.asm	/^f010203f:	75 19                	jne    f010205a <mem_init+0xdbc>$/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	68 d6 69 10 f0       	push   $0xf01069d6$/;"	l
f0102046	obj/kern/kernel.asm	/^f0102046:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	68 a1 03 00 00       	push   $0x3a1$/;"	l
f0102050	obj/kern/kernel.asm	/^f0102050:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	e8 96 e0 ff ff       	call   f01000f0 <_panic>$/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	74 19                	je     f0102078 <mem_init+0xdda>$/;"	l
f010205f	obj/kern/kernel.asm	/^f010205f:	68 e2 69 10 f0       	push   $0xf01069e2$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	68 a2 03 00 00       	push   $0x3a2$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	e8 78 e0 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010207b	obj/kern/kernel.asm	/^f010207b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	e8 41 f1 ff ff       	call   f01011cc <page_remove>$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	8b 3d 2c 80 41 f0    	mov    0xf041802c,%edi$/;"	l
f0102091	obj/kern/kernel.asm	/^f0102091:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102096	obj/kern/kernel.asm	/^f0102096:	89 f8                	mov    %edi,%eax$/;"	l
f0102098	obj/kern/kernel.asm	/^f0102098:	e8 29 eb ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020a0	obj/kern/kernel.asm	/^f01020a0:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	74 19                	je     f01020be <mem_init+0xe20>$/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	68 94 6f 10 f0       	push   $0xf0106f94$/;"	l
f01020aa	obj/kern/kernel.asm	/^f01020aa:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01020af	obj/kern/kernel.asm	/^f01020af:	68 a6 03 00 00       	push   $0x3a6$/;"	l
f01020b4	obj/kern/kernel.asm	/^f01020b4:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01020b9	obj/kern/kernel.asm	/^f01020b9:	e8 32 e0 ff ff       	call   f01000f0 <_panic>$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01020c3	obj/kern/kernel.asm	/^f01020c3:	89 f8                	mov    %edi,%eax$/;"	l
f01020c5	obj/kern/kernel.asm	/^f01020c5:	e8 fc ea ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01020cd	obj/kern/kernel.asm	/^f01020cd:	74 19                	je     f01020e8 <mem_init+0xe4a>$/;"	l
f01020cf	obj/kern/kernel.asm	/^f01020cf:	68 f0 6f 10 f0       	push   $0xf0106ff0$/;"	l
f01020d4	obj/kern/kernel.asm	/^f01020d4:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	68 a7 03 00 00       	push   $0x3a7$/;"	l
f01020de	obj/kern/kernel.asm	/^f01020de:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01020e3	obj/kern/kernel.asm	/^f01020e3:	e8 08 e0 ff ff       	call   f01000f0 <_panic>$/;"	l
f01020e8	obj/kern/kernel.asm	/^f01020e8:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01020ed	obj/kern/kernel.asm	/^f01020ed:	74 19                	je     f0102108 <mem_init+0xe6a>$/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	68 f7 69 10 f0       	push   $0xf01069f7$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01020f9	obj/kern/kernel.asm	/^f01020f9:	68 a8 03 00 00       	push   $0x3a8$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	e8 e8 df ff ff       	call   f01000f0 <_panic>$/;"	l
f0102108	obj/kern/kernel.asm	/^f0102108:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f010210d	obj/kern/kernel.asm	/^f010210d:	74 19                	je     f0102128 <mem_init+0xe8a>$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	68 c5 69 10 f0       	push   $0xf01069c5$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102119	obj/kern/kernel.asm	/^f0102119:	68 a9 03 00 00       	push   $0x3a9$/;"	l
f010211e	obj/kern/kernel.asm	/^f010211e:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102123	obj/kern/kernel.asm	/^f0102123:	e8 c8 df ff ff       	call   f01000f0 <_panic>$/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010212b	obj/kern/kernel.asm	/^f010212b:	6a 00                	push   $0x0$/;"	l
f010212d	obj/kern/kernel.asm	/^f010212d:	e8 45 ee ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0102132	obj/kern/kernel.asm	/^f0102132:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102135	obj/kern/kernel.asm	/^f0102135:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	75 04                	jne    f010213d <mem_init+0xe9f>$/;"	l
f0102139	obj/kern/kernel.asm	/^f0102139:	85 c0                	test   %eax,%eax$/;"	l
f010213b	obj/kern/kernel.asm	/^f010213b:	75 19                	jne    f0102156 <mem_init+0xeb8>$/;"	l
f010213d	obj/kern/kernel.asm	/^f010213d:	68 18 70 10 f0       	push   $0xf0107018$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	68 ac 03 00 00       	push   $0x3ac$/;"	l
f010214c	obj/kern/kernel.asm	/^f010214c:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102151	obj/kern/kernel.asm	/^f0102151:	e8 9a df ff ff       	call   f01000f0 <_panic>$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102159	obj/kern/kernel.asm	/^f0102159:	6a 00                	push   $0x0$/;"	l
f010215b	obj/kern/kernel.asm	/^f010215b:	e8 17 ee ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0102160	obj/kern/kernel.asm	/^f0102160:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102163	obj/kern/kernel.asm	/^f0102163:	85 c0                	test   %eax,%eax$/;"	l
f0102165	obj/kern/kernel.asm	/^f0102165:	74 19                	je     f0102180 <mem_init+0xee2>$/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	68 19 69 10 f0       	push   $0xf0106919$/;"	l
f010216c	obj/kern/kernel.asm	/^f010216c:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102171	obj/kern/kernel.asm	/^f0102171:	68 af 03 00 00       	push   $0x3af$/;"	l
f0102176	obj/kern/kernel.asm	/^f0102176:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	e8 70 df ff ff       	call   f01000f0 <_panic>$/;"	l
f0102180	obj/kern/kernel.asm	/^f0102180:	8b 0d 2c 80 41 f0    	mov    0xf041802c,%ecx$/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010218e	obj/kern/kernel.asm	/^f010218e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102191	obj/kern/kernel.asm	/^f0102191:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f0102197	obj/kern/kernel.asm	/^f0102197:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010219d	obj/kern/kernel.asm	/^f010219d:	39 c2                	cmp    %eax,%edx$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	74 19                	je     f01021ba <mem_init+0xf1c>$/;"	l
f01021a1	obj/kern/kernel.asm	/^f01021a1:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01021a6	obj/kern/kernel.asm	/^f01021a6:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	68 b2 03 00 00       	push   $0x3b2$/;"	l
f01021b0	obj/kern/kernel.asm	/^f01021b0:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	e8 36 df ff ff       	call   f01000f0 <_panic>$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01021c0	obj/kern/kernel.asm	/^f01021c0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f01021c8	obj/kern/kernel.asm	/^f01021c8:	74 19                	je     f01021e3 <mem_init+0xf45>$/;"	l
f01021ca	obj/kern/kernel.asm	/^f01021ca:	68 7c 69 10 f0       	push   $0xf010697c$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	68 b4 03 00 00       	push   $0x3b4$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	e8 0d df ff ff       	call   f01000f0 <_panic>$/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01021ec	obj/kern/kernel.asm	/^f01021ec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01021ef	obj/kern/kernel.asm	/^f01021ef:	50                   	push   %eax$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	e8 f2 ed ff ff       	call   f0100fe7 <page_free>$/;"	l
f01021f5	obj/kern/kernel.asm	/^f01021f5:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01021f8	obj/kern/kernel.asm	/^f01021f8:	6a 01                	push   $0x1$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	68 00 10 40 00       	push   $0x401000$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	e8 56 ee ff ff       	call   f0101060 <pgdir_walk>$/;"	l
f010220a	obj/kern/kernel.asm	/^f010220a:	89 c7                	mov    %eax,%edi$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010220f	obj/kern/kernel.asm	/^f010220f:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f0102214	obj/kern/kernel.asm	/^f0102214:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102217	obj/kern/kernel.asm	/^f0102217:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	8b 0d 28 80 41 f0    	mov    0xf0418028,%ecx$/;"	l
f0102225	obj/kern/kernel.asm	/^f0102225:	89 c2                	mov    %eax,%edx$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010222a	obj/kern/kernel.asm	/^f010222a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	39 ca                	cmp    %ecx,%edx$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	72 15                	jb     f0102246 <mem_init+0xfa8>$/;"	l
f0102231	obj/kern/kernel.asm	/^f0102231:	50                   	push   %eax$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	68 bb 03 00 00       	push   $0x3bb$/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	e8 aa de ff ff       	call   f01000f0 <_panic>$/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f010224b	obj/kern/kernel.asm	/^f010224b:	39 c7                	cmp    %eax,%edi$/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	74 19                	je     f0102268 <mem_init+0xfca>$/;"	l
f010224f	obj/kern/kernel.asm	/^f010224f:	68 08 6a 10 f0       	push   $0xf0106a08$/;"	l
f0102254	obj/kern/kernel.asm	/^f0102254:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102259	obj/kern/kernel.asm	/^f0102259:	68 bc 03 00 00       	push   $0x3bc$/;"	l
f010225e	obj/kern/kernel.asm	/^f010225e:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	e8 88 de ff ff       	call   f01000f0 <_panic>$/;"	l
f0102268	obj/kern/kernel.asm	/^f0102268:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010226b	obj/kern/kernel.asm	/^f010226b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0102272	obj/kern/kernel.asm	/^f0102272:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f010227b	obj/kern/kernel.asm	/^f010227b:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f0102281	obj/kern/kernel.asm	/^f0102281:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102287	obj/kern/kernel.asm	/^f0102287:	89 c2                	mov    %eax,%edx$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010228c	obj/kern/kernel.asm	/^f010228c:	39 d1                	cmp    %edx,%ecx$/;"	l
f010228e	obj/kern/kernel.asm	/^f010228e:	77 12                	ja     f01022a2 <mem_init+0x1004>$/;"	l
f0102290	obj/kern/kernel.asm	/^f0102290:	50                   	push   %eax$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f0102296	obj/kern/kernel.asm	/^f0102296:	6a 58                	push   $0x58$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	e8 4e de ff ff       	call   f01000f0 <_panic>$/;"	l
f01022a2	obj/kern/kernel.asm	/^f01022a2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01022a5	obj/kern/kernel.asm	/^f01022a5:	68 00 10 00 00       	push   $0x1000$/;"	l
f01022aa	obj/kern/kernel.asm	/^f01022aa:	68 ff 00 00 00       	push   $0xff$/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	50                   	push   %eax$/;"	l
f01022b5	obj/kern/kernel.asm	/^f01022b5:	e8 17 35 00 00       	call   f01057d1 <memset>$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01022bd	obj/kern/kernel.asm	/^f01022bd:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	e8 22 ed ff ff       	call   f0100fe7 <page_free>$/;"	l
f01022c5	obj/kern/kernel.asm	/^f01022c5:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	6a 01                	push   $0x1$/;"	l
f01022ca	obj/kern/kernel.asm	/^f01022ca:	6a 00                	push   $0x0$/;"	l
f01022cc	obj/kern/kernel.asm	/^f01022cc:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f01022d2	obj/kern/kernel.asm	/^f01022d2:	e8 89 ed ff ff       	call   f0101060 <pgdir_walk>$/;"	l
f01022d7	obj/kern/kernel.asm	/^f01022d7:	89 fa                	mov    %edi,%edx$/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	2b 15 30 80 41 f0    	sub    0xf0418030,%edx$/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	89 d0                	mov    %edx,%eax$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01022ea	obj/kern/kernel.asm	/^f01022ea:	83 c4 10             	add    $0x10,%esp$/;"	l
f01022ed	obj/kern/kernel.asm	/^f01022ed:	3b 05 28 80 41 f0    	cmp    0xf0418028,%eax$/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	72 12                	jb     f0102307 <mem_init+0x1069>$/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	52                   	push   %edx$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb:	6a 58                	push   $0x58$/;"	l
f01022fd	obj/kern/kernel.asm	/^f01022fd:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	e8 e9 dd ff ff       	call   f01000f0 <_panic>$/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f010230d	obj/kern/kernel.asm	/^f010230d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102310	obj/kern/kernel.asm	/^f0102310:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102316	obj/kern/kernel.asm	/^f0102316:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102319	obj/kern/kernel.asm	/^f0102319:	74 19                	je     f0102334 <mem_init+0x1096>$/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	68 20 6a 10 f0       	push   $0xf0106a20$/;"	l
f0102320	obj/kern/kernel.asm	/^f0102320:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102325	obj/kern/kernel.asm	/^f0102325:	68 c6 03 00 00       	push   $0x3c6$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	e8 bc dd ff ff       	call   f01000f0 <_panic>$/;"	l
f0102334	obj/kern/kernel.asm	/^f0102334:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102337	obj/kern/kernel.asm	/^f0102337:	39 c2                	cmp    %eax,%edx$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	75 db                	jne    f0102316 <mem_init+0x1078>$/;"	l
f010233b	obj/kern/kernel.asm	/^f010233b:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f0102340	obj/kern/kernel.asm	/^f0102340:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f010234f	obj/kern/kernel.asm	/^f010234f:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102352	obj/kern/kernel.asm	/^f0102352:	89 0d 20 23 41 f0    	mov    %ecx,0xf0412320$/;"	l
f0102358	obj/kern/kernel.asm	/^f0102358:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	50                   	push   %eax$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	e8 86 ec ff ff       	call   f0100fe7 <page_free>$/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102364	obj/kern/kernel.asm	/^f0102364:	e8 7e ec ff ff       	call   f0100fe7 <page_free>$/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010236c	obj/kern/kernel.asm	/^f010236c:	e8 76 ec ff ff       	call   f0100fe7 <page_free>$/;"	l
f0102371	obj/kern/kernel.asm	/^f0102371:	c7 04 24 37 6a 10 f0 	movl   $0xf0106a37,(%esp)$/;"	l
f0102378	obj/kern/kernel.asm	/^f0102378:	e8 40 17 00 00       	call   f0103abd <cprintf>$/;"	l
f010237d	obj/kern/kernel.asm	/^f010237d:	a1 30 80 41 f0       	mov    0xf0418030,%eax$/;"	l
f0102382	obj/kern/kernel.asm	/^f0102382:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102385	obj/kern/kernel.asm	/^f0102385:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010238a	obj/kern/kernel.asm	/^f010238a:	77 15                	ja     f01023a1 <mem_init+0x1103>$/;"	l
f010238c	obj/kern/kernel.asm	/^f010238c:	50                   	push   %eax$/;"	l
f010238d	obj/kern/kernel.asm	/^f010238d:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	68 c2 00 00 00       	push   $0xc2$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010239c	obj/kern/kernel.asm	/^f010239c:	e8 4f dd ff ff       	call   f01000f0 <_panic>$/;"	l
f01023a1	obj/kern/kernel.asm	/^f01023a1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01023a4	obj/kern/kernel.asm	/^f01023a4:	6a 04                	push   $0x4$/;"	l
f01023a6	obj/kern/kernel.asm	/^f01023a6:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01023ab	obj/kern/kernel.asm	/^f01023ab:	50                   	push   %eax$/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	b9 00 00 40 00       	mov    $0x400000,%ecx$/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	e8 33 ed ff ff       	call   f01010f3 <boot_map_region>$/;"	l
f01023c0	obj/kern/kernel.asm	/^f01023c0:	a1 2c 23 41 f0       	mov    0xf041232c,%eax$/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01023c8	obj/kern/kernel.asm	/^f01023c8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	77 15                	ja     f01023e4 <mem_init+0x1146>$/;"	l
f01023cf	obj/kern/kernel.asm	/^f01023cf:	50                   	push   %eax$/;"	l
f01023d0	obj/kern/kernel.asm	/^f01023d0:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f01023d5	obj/kern/kernel.asm	/^f01023d5:	68 cb 00 00 00       	push   $0xcb$/;"	l
f01023da	obj/kern/kernel.asm	/^f01023da:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01023df	obj/kern/kernel.asm	/^f01023df:	e8 0c dd ff ff       	call   f01000f0 <_panic>$/;"	l
f01023e4	obj/kern/kernel.asm	/^f01023e4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01023e7	obj/kern/kernel.asm	/^f01023e7:	6a 04                	push   $0x4$/;"	l
f01023e9	obj/kern/kernel.asm	/^f01023e9:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	50                   	push   %eax$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	b9 00 f0 0c 00       	mov    $0xcf000,%ecx$/;"	l
f01023f4	obj/kern/kernel.asm	/^f01023f4:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f01023fe	obj/kern/kernel.asm	/^f01023fe:	e8 f0 ec ff ff       	call   f01010f3 <boot_map_region>$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	a1 24 80 41 f0       	mov    0xf0418024,%eax$/;"	l
f0102408	obj/kern/kernel.asm	/^f0102408:	83 c4 10             	add    $0x10,%esp$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	77 15                	ja     f0102427 <mem_init+0x1189>$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	50                   	push   %eax$/;"	l
f0102413	obj/kern/kernel.asm	/^f0102413:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f0102418	obj/kern/kernel.asm	/^f0102418:	68 d4 00 00 00       	push   $0xd4$/;"	l
f010241d	obj/kern/kernel.asm	/^f010241d:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102422	obj/kern/kernel.asm	/^f0102422:	e8 c9 dc ff ff       	call   f01000f0 <_panic>$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010242a	obj/kern/kernel.asm	/^f010242a:	6a 04                	push   $0x4$/;"	l
f010242c	obj/kern/kernel.asm	/^f010242c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102431	obj/kern/kernel.asm	/^f0102431:	50                   	push   %eax$/;"	l
f0102432	obj/kern/kernel.asm	/^f0102432:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0102437	obj/kern/kernel.asm	/^f0102437:	ba 00 00 80 ee       	mov    $0xee800000,%edx$/;"	l
f010243c	obj/kern/kernel.asm	/^f010243c:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	e8 ad ec ff ff       	call   f01010f3 <boot_map_region>$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102449	obj/kern/kernel.asm	/^f0102449:	b8 00 70 11 f0       	mov    $0xf0117000,%eax$/;"	l
f010244e	obj/kern/kernel.asm	/^f010244e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	77 15                	ja     f010246a <mem_init+0x11cc>$/;"	l
f0102455	obj/kern/kernel.asm	/^f0102455:	50                   	push   %eax$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	68 e1 00 00 00       	push   $0xe1$/;"	l
f0102460	obj/kern/kernel.asm	/^f0102460:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102465	obj/kern/kernel.asm	/^f0102465:	e8 86 dc ff ff       	call   f01000f0 <_panic>$/;"	l
f010246a	obj/kern/kernel.asm	/^f010246a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	6a 02                	push   $0x2$/;"	l
f010246f	obj/kern/kernel.asm	/^f010246f:	68 00 70 11 00       	push   $0x117000$/;"	l
f0102474	obj/kern/kernel.asm	/^f0102474:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102479	obj/kern/kernel.asm	/^f0102479:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f0102483	obj/kern/kernel.asm	/^f0102483:	e8 6b ec ff ff       	call   f01010f3 <boot_map_region>$/;"	l
f0102488	obj/kern/kernel.asm	/^f0102488:	83 c4 08             	add    $0x8,%esp$/;"	l
f010248b	obj/kern/kernel.asm	/^f010248b:	6a 02                	push   $0x2$/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	6a 00                	push   $0x0$/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	e8 50 ec ff ff       	call   f01010f3 <boot_map_region>$/;"	l
f01024a3	obj/kern/kernel.asm	/^f01024a3:	8b 3d 2c 80 41 f0    	mov    0xf041802c,%edi$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	a1 28 80 41 f0       	mov    0xf0418028,%eax$/;"	l
f01024ae	obj/kern/kernel.asm	/^f01024ae:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01024c0	obj/kern/kernel.asm	/^f01024c0:	8b 35 30 80 41 f0    	mov    0xf0418030,%esi$/;"	l
f01024c6	obj/kern/kernel.asm	/^f01024c6:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01024d1	obj/kern/kernel.asm	/^f01024d1:	eb 55                	jmp    f0102528 <mem_init+0x128a>$/;"	l
f01024d3	obj/kern/kernel.asm	/^f01024d3:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f01024d9	obj/kern/kernel.asm	/^f01024d9:	89 f8                	mov    %edi,%eax$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	e8 e6 e6 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f01024e0	obj/kern/kernel.asm	/^f01024e0:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f01024e7	obj/kern/kernel.asm	/^f01024e7:	77 15                	ja     f01024fe <mem_init+0x1260>$/;"	l
f01024e9	obj/kern/kernel.asm	/^f01024e9:	56                   	push   %esi$/;"	l
f01024ea	obj/kern/kernel.asm	/^f01024ea:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f01024ef	obj/kern/kernel.asm	/^f01024ef:	68 03 03 00 00       	push   $0x303$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01024f9	obj/kern/kernel.asm	/^f01024f9:	e8 f2 db ff ff       	call   f01000f0 <_panic>$/;"	l
f01024fe	obj/kern/kernel.asm	/^f01024fe:	8d 94 1e 00 00 00 10 	lea    0x10000000(%esi,%ebx,1),%edx$/;"	l
f0102505	obj/kern/kernel.asm	/^f0102505:	39 d0                	cmp    %edx,%eax$/;"	l
f0102507	obj/kern/kernel.asm	/^f0102507:	74 19                	je     f0102522 <mem_init+0x1284>$/;"	l
f0102509	obj/kern/kernel.asm	/^f0102509:	68 3c 70 10 f0       	push   $0xf010703c$/;"	l
f010250e	obj/kern/kernel.asm	/^f010250e:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102513	obj/kern/kernel.asm	/^f0102513:	68 03 03 00 00       	push   $0x303$/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010251d	obj/kern/kernel.asm	/^f010251d:	e8 ce db ff ff       	call   f01000f0 <_panic>$/;"	l
f0102522	obj/kern/kernel.asm	/^f0102522:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f010252b	obj/kern/kernel.asm	/^f010252b:	77 a6                	ja     f01024d3 <mem_init+0x1235>$/;"	l
f010252d	obj/kern/kernel.asm	/^f010252d:	8b 35 2c 23 41 f0    	mov    0xf041232c,%esi$/;"	l
f0102533	obj/kern/kernel.asm	/^f0102533:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102536	obj/kern/kernel.asm	/^f0102536:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f010253b	obj/kern/kernel.asm	/^f010253b:	89 da                	mov    %ebx,%edx$/;"	l
f010253d	obj/kern/kernel.asm	/^f010253d:	89 f8                	mov    %edi,%eax$/;"	l
f010253f	obj/kern/kernel.asm	/^f010253f:	e8 82 e6 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	77 15                	ja     f0102562 <mem_init+0x12c4>$/;"	l
f010254d	obj/kern/kernel.asm	/^f010254d:	56                   	push   %esi$/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	68 08 03 00 00       	push   $0x308$/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	e8 8e db ff ff       	call   f01000f0 <_panic>$/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	8d 94 1e 00 00 40 21 	lea    0x21400000(%esi,%ebx,1),%edx$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	39 c2                	cmp    %eax,%edx$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	74 19                	je     f0102586 <mem_init+0x12e8>$/;"	l
f010256d	obj/kern/kernel.asm	/^f010256d:	68 70 70 10 f0       	push   $0xf0107070$/;"	l
f0102572	obj/kern/kernel.asm	/^f0102572:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	68 08 03 00 00       	push   $0x308$/;"	l
f010257c	obj/kern/kernel.asm	/^f010257c:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102581	obj/kern/kernel.asm	/^f0102581:	e8 6a db ff ff       	call   f01000f0 <_panic>$/;"	l
f0102586	obj/kern/kernel.asm	/^f0102586:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010258c	obj/kern/kernel.asm	/^f010258c:	81 fb 00 f0 cc ee    	cmp    $0xeeccf000,%ebx$/;"	l
f0102592	obj/kern/kernel.asm	/^f0102592:	75 a7                	jne    f010253b <mem_init+0x129d>$/;"	l
f0102594	obj/kern/kernel.asm	/^f0102594:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0102597	obj/kern/kernel.asm	/^f0102597:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f010259a	obj/kern/kernel.asm	/^f010259a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	eb 30                	jmp    f01025d1 <mem_init+0x1333>$/;"	l
f01025a1	obj/kern/kernel.asm	/^f01025a1:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	89 f8                	mov    %edi,%eax$/;"	l
f01025a9	obj/kern/kernel.asm	/^f01025a9:	e8 18 e6 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f01025ae	obj/kern/kernel.asm	/^f01025ae:	39 c3                	cmp    %eax,%ebx$/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0:	74 19                	je     f01025cb <mem_init+0x132d>$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	68 a4 70 10 f0       	push   $0xf01070a4$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	68 0c 03 00 00       	push   $0x30c$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01025c6	obj/kern/kernel.asm	/^f01025c6:	e8 25 db ff ff       	call   f01000f0 <_panic>$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	39 f3                	cmp    %esi,%ebx$/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	72 cc                	jb     f01025a1 <mem_init+0x1303>$/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	bb 00 80 ff ef       	mov    $0xefff8000,%ebx$/;"	l
f01025da	obj/kern/kernel.asm	/^f01025da:	89 da                	mov    %ebx,%edx$/;"	l
f01025dc	obj/kern/kernel.asm	/^f01025dc:	89 f8                	mov    %edi,%eax$/;"	l
f01025de	obj/kern/kernel.asm	/^f01025de:	e8 e3 e5 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f01025e3	obj/kern/kernel.asm	/^f01025e3:	8d 93 00 f0 11 10    	lea    0x1011f000(%ebx),%edx$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	39 c2                	cmp    %eax,%edx$/;"	l
f01025eb	obj/kern/kernel.asm	/^f01025eb:	74 19                	je     f0102606 <mem_init+0x1368>$/;"	l
f01025ed	obj/kern/kernel.asm	/^f01025ed:	68 cc 70 10 f0       	push   $0xf01070cc$/;"	l
f01025f2	obj/kern/kernel.asm	/^f01025f2:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	68 10 03 00 00       	push   $0x310$/;"	l
f01025fc	obj/kern/kernel.asm	/^f01025fc:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102601	obj/kern/kernel.asm	/^f0102601:	e8 ea da ff ff       	call   f01000f0 <_panic>$/;"	l
f0102606	obj/kern/kernel.asm	/^f0102606:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	81 fb 00 00 00 f0    	cmp    $0xf0000000,%ebx$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	75 c6                	jne    f01025da <mem_init+0x133c>$/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	ba 00 00 c0 ef       	mov    $0xefc00000,%edx$/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	89 f8                	mov    %edi,%eax$/;"	l
f010261b	obj/kern/kernel.asm	/^f010261b:	e8 a6 e5 ff ff       	call   f0100bc6 <check_va2pa>$/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102623	obj/kern/kernel.asm	/^f0102623:	74 51                	je     f0102676 <mem_init+0x13d8>$/;"	l
f0102625	obj/kern/kernel.asm	/^f0102625:	68 14 71 10 f0       	push   $0xf0107114$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010262f	obj/kern/kernel.asm	/^f010262f:	68 11 03 00 00       	push   $0x311$/;"	l
f0102634	obj/kern/kernel.asm	/^f0102634:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102639	obj/kern/kernel.asm	/^f0102639:	e8 b2 da ff ff       	call   f01000f0 <_panic>$/;"	l
f010263e	obj/kern/kernel.asm	/^f010263e:	3d ba 03 00 00       	cmp    $0x3ba,%eax$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	72 36                	jb     f010267b <mem_init+0x13dd>$/;"	l
f0102645	obj/kern/kernel.asm	/^f0102645:	3d bd 03 00 00       	cmp    $0x3bd,%eax$/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	76 07                	jbe    f0102653 <mem_init+0x13b5>$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0102651	obj/kern/kernel.asm	/^f0102651:	75 28                	jne    f010267b <mem_init+0x13dd>$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f0102657	obj/kern/kernel.asm	/^f0102657:	0f 85 83 00 00 00    	jne    f01026e0 <mem_init+0x1442>$/;"	l
f010265d	obj/kern/kernel.asm	/^f010265d:	68 50 6a 10 f0       	push   $0xf0106a50$/;"	l
f0102662	obj/kern/kernel.asm	/^f0102662:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102667	obj/kern/kernel.asm	/^f0102667:	68 1b 03 00 00       	push   $0x31b$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102671	obj/kern/kernel.asm	/^f0102671:	e8 7a da ff ff       	call   f01000f0 <_panic>$/;"	l
f0102676	obj/kern/kernel.asm	/^f0102676:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0102680	obj/kern/kernel.asm	/^f0102680:	76 3f                	jbe    f01026c1 <mem_init+0x1423>$/;"	l
f0102682	obj/kern/kernel.asm	/^f0102682:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0102685	obj/kern/kernel.asm	/^f0102685:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0102688	obj/kern/kernel.asm	/^f0102688:	75 19                	jne    f01026a3 <mem_init+0x1405>$/;"	l
f010268a	obj/kern/kernel.asm	/^f010268a:	68 50 6a 10 f0       	push   $0xf0106a50$/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694:	68 1f 03 00 00       	push   $0x31f$/;"	l
f0102699	obj/kern/kernel.asm	/^f0102699:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010269e	obj/kern/kernel.asm	/^f010269e:	e8 4d da ff ff       	call   f01000f0 <_panic>$/;"	l
f01026a3	obj/kern/kernel.asm	/^f01026a3:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01026a6	obj/kern/kernel.asm	/^f01026a6:	75 38                	jne    f01026e0 <mem_init+0x1442>$/;"	l
f01026a8	obj/kern/kernel.asm	/^f01026a8:	68 61 6a 10 f0       	push   $0xf0106a61$/;"	l
f01026ad	obj/kern/kernel.asm	/^f01026ad:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01026b2	obj/kern/kernel.asm	/^f01026b2:	68 20 03 00 00       	push   $0x320$/;"	l
f01026b7	obj/kern/kernel.asm	/^f01026b7:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01026bc	obj/kern/kernel.asm	/^f01026bc:	e8 2f da ff ff       	call   f01000f0 <_panic>$/;"	l
f01026c1	obj/kern/kernel.asm	/^f01026c1:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f01026c5	obj/kern/kernel.asm	/^f01026c5:	74 19                	je     f01026e0 <mem_init+0x1442>$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	68 72 6a 10 f0       	push   $0xf0106a72$/;"	l
f01026cc	obj/kern/kernel.asm	/^f01026cc:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01026d1	obj/kern/kernel.asm	/^f01026d1:	68 22 03 00 00       	push   $0x322$/;"	l
f01026d6	obj/kern/kernel.asm	/^f01026d6:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01026db	obj/kern/kernel.asm	/^f01026db:	e8 10 da ff ff       	call   f01000f0 <_panic>$/;"	l
f01026e0	obj/kern/kernel.asm	/^f01026e0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01026e3	obj/kern/kernel.asm	/^f01026e3:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f01026e8	obj/kern/kernel.asm	/^f01026e8:	0f 86 50 ff ff ff    	jbe    f010263e <mem_init+0x13a0>$/;"	l
f01026ee	obj/kern/kernel.asm	/^f01026ee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	68 44 71 10 f0       	push   $0xf0107144$/;"	l
f01026f6	obj/kern/kernel.asm	/^f01026f6:	e8 c2 13 00 00       	call   f0103abd <cprintf>$/;"	l
f01026fb	obj/kern/kernel.asm	/^f01026fb:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f0102700	obj/kern/kernel.asm	/^f0102700:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102703	obj/kern/kernel.asm	/^f0102703:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102708	obj/kern/kernel.asm	/^f0102708:	77 15                	ja     f010271f <mem_init+0x1481>$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	50                   	push   %eax$/;"	l
f010270b	obj/kern/kernel.asm	/^f010270b:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f0102710	obj/kern/kernel.asm	/^f0102710:	68 f7 00 00 00       	push   $0xf7$/;"	l
f0102715	obj/kern/kernel.asm	/^f0102715:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	e8 d1 d9 ff ff       	call   f01000f0 <_panic>$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102724	obj/kern/kernel.asm	/^f0102724:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102727	obj/kern/kernel.asm	/^f0102727:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	e8 f9 e4 ff ff       	call   f0100c2a <check_page_free_list>$/;"	l
f0102731	obj/kern/kernel.asm	/^f0102731:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0102734	obj/kern/kernel.asm	/^f0102734:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0102737	obj/kern/kernel.asm	/^f0102737:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010273c	obj/kern/kernel.asm	/^f010273c:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010273f	obj/kern/kernel.asm	/^f010273f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	6a 00                	push   $0x0$/;"	l
f0102744	obj/kern/kernel.asm	/^f0102744:	e8 2e e8 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0102749	obj/kern/kernel.asm	/^f0102749:	89 c3                	mov    %eax,%ebx$/;"	l
f010274b	obj/kern/kernel.asm	/^f010274b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	85 c0                	test   %eax,%eax$/;"	l
f0102750	obj/kern/kernel.asm	/^f0102750:	75 19                	jne    f010276b <mem_init+0x14cd>$/;"	l
f0102752	obj/kern/kernel.asm	/^f0102752:	68 6e 68 10 f0       	push   $0xf010686e$/;"	l
f0102757	obj/kern/kernel.asm	/^f0102757:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	68 dd 03 00 00       	push   $0x3dd$/;"	l
f0102761	obj/kern/kernel.asm	/^f0102761:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	e8 85 d9 ff ff       	call   f01000f0 <_panic>$/;"	l
f010276b	obj/kern/kernel.asm	/^f010276b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010276e	obj/kern/kernel.asm	/^f010276e:	6a 00                	push   $0x0$/;"	l
f0102770	obj/kern/kernel.asm	/^f0102770:	e8 02 e8 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0102775	obj/kern/kernel.asm	/^f0102775:	89 c7                	mov    %eax,%edi$/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	83 c4 10             	add    $0x10,%esp$/;"	l
f010277a	obj/kern/kernel.asm	/^f010277a:	85 c0                	test   %eax,%eax$/;"	l
f010277c	obj/kern/kernel.asm	/^f010277c:	75 19                	jne    f0102797 <mem_init+0x14f9>$/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	68 84 68 10 f0       	push   $0xf0106884$/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	68 de 03 00 00       	push   $0x3de$/;"	l
f010278d	obj/kern/kernel.asm	/^f010278d:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	e8 59 d9 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102797	obj/kern/kernel.asm	/^f0102797:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	6a 00                	push   $0x0$/;"	l
f010279c	obj/kern/kernel.asm	/^f010279c:	e8 d6 e7 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	89 c6                	mov    %eax,%esi$/;"	l
f01027a3	obj/kern/kernel.asm	/^f01027a3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01027a6	obj/kern/kernel.asm	/^f01027a6:	85 c0                	test   %eax,%eax$/;"	l
f01027a8	obj/kern/kernel.asm	/^f01027a8:	75 19                	jne    f01027c3 <mem_init+0x1525>$/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	68 9a 68 10 f0       	push   $0xf010689a$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	68 df 03 00 00       	push   $0x3df$/;"	l
f01027b9	obj/kern/kernel.asm	/^f01027b9:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01027be	obj/kern/kernel.asm	/^f01027be:	e8 2d d9 ff ff       	call   f01000f0 <_panic>$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01027c6	obj/kern/kernel.asm	/^f01027c6:	53                   	push   %ebx$/;"	l
f01027c7	obj/kern/kernel.asm	/^f01027c7:	e8 1b e8 ff ff       	call   f0100fe7 <page_free>$/;"	l
f01027cc	obj/kern/kernel.asm	/^f01027cc:	89 f8                	mov    %edi,%eax$/;"	l
f01027ce	obj/kern/kernel.asm	/^f01027ce:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f01027d4	obj/kern/kernel.asm	/^f01027d4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01027d7	obj/kern/kernel.asm	/^f01027d7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01027da	obj/kern/kernel.asm	/^f01027da:	89 c2                	mov    %eax,%edx$/;"	l
f01027dc	obj/kern/kernel.asm	/^f01027dc:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01027df	obj/kern/kernel.asm	/^f01027df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	3b 15 28 80 41 f0    	cmp    0xf0418028,%edx$/;"	l
f01027e8	obj/kern/kernel.asm	/^f01027e8:	72 12                	jb     f01027fc <mem_init+0x155e>$/;"	l
f01027ea	obj/kern/kernel.asm	/^f01027ea:	50                   	push   %eax$/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f01027f0	obj/kern/kernel.asm	/^f01027f0:	6a 58                	push   $0x58$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	e8 f4 d8 ff ff       	call   f01000f0 <_panic>$/;"	l
f01027fc	obj/kern/kernel.asm	/^f01027fc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01027ff	obj/kern/kernel.asm	/^f01027ff:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102804	obj/kern/kernel.asm	/^f0102804:	6a 01                	push   $0x1$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	50                   	push   %eax$/;"	l
f010280c	obj/kern/kernel.asm	/^f010280c:	e8 c0 2f 00 00       	call   f01057d1 <memset>$/;"	l
f0102811	obj/kern/kernel.asm	/^f0102811:	89 f0                	mov    %esi,%eax$/;"	l
f0102813	obj/kern/kernel.asm	/^f0102813:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f0102819	obj/kern/kernel.asm	/^f0102819:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010281f	obj/kern/kernel.asm	/^f010281f:	89 c2                	mov    %eax,%edx$/;"	l
f0102821	obj/kern/kernel.asm	/^f0102821:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102824	obj/kern/kernel.asm	/^f0102824:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	3b 15 28 80 41 f0    	cmp    0xf0418028,%edx$/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	72 12                	jb     f0102841 <mem_init+0x15a3>$/;"	l
f010282f	obj/kern/kernel.asm	/^f010282f:	50                   	push   %eax$/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f0102835	obj/kern/kernel.asm	/^f0102835:	6a 58                	push   $0x58$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f010283c	obj/kern/kernel.asm	/^f010283c:	e8 af d8 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102841	obj/kern/kernel.asm	/^f0102841:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102849	obj/kern/kernel.asm	/^f0102849:	6a 02                	push   $0x2$/;"	l
f010284b	obj/kern/kernel.asm	/^f010284b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102850	obj/kern/kernel.asm	/^f0102850:	50                   	push   %eax$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	e8 7b 2f 00 00       	call   f01057d1 <memset>$/;"	l
f0102856	obj/kern/kernel.asm	/^f0102856:	6a 02                	push   $0x2$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	68 00 10 00 00       	push   $0x1000$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	57                   	push   %edi$/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f0102864	obj/kern/kernel.asm	/^f0102864:	e8 a9 e9 ff ff       	call   f0101212 <page_insert>$/;"	l
f0102869	obj/kern/kernel.asm	/^f0102869:	83 c4 20             	add    $0x20,%esp$/;"	l
f010286c	obj/kern/kernel.asm	/^f010286c:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	74 19                	je     f010288c <mem_init+0x15ee>$/;"	l
f0102873	obj/kern/kernel.asm	/^f0102873:	68 6b 69 10 f0       	push   $0xf010696b$/;"	l
f0102878	obj/kern/kernel.asm	/^f0102878:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	68 e4 03 00 00       	push   $0x3e4$/;"	l
f0102882	obj/kern/kernel.asm	/^f0102882:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102887	obj/kern/kernel.asm	/^f0102887:	e8 64 d8 ff ff       	call   f01000f0 <_panic>$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0102893	obj/kern/kernel.asm	/^f0102893:	01 01 01 $/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	74 19                	je     f01028b1 <mem_init+0x1613>$/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	68 64 71 10 f0       	push   $0xf0107164$/;"	l
f010289d	obj/kern/kernel.asm	/^f010289d:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01028a2	obj/kern/kernel.asm	/^f01028a2:	68 e5 03 00 00       	push   $0x3e5$/;"	l
f01028a7	obj/kern/kernel.asm	/^f01028a7:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	e8 3f d8 ff ff       	call   f01000f0 <_panic>$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	6a 02                	push   $0x2$/;"	l
f01028b3	obj/kern/kernel.asm	/^f01028b3:	68 00 10 00 00       	push   $0x1000$/;"	l
f01028b8	obj/kern/kernel.asm	/^f01028b8:	56                   	push   %esi$/;"	l
f01028b9	obj/kern/kernel.asm	/^f01028b9:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f01028bf	obj/kern/kernel.asm	/^f01028bf:	e8 4e e9 ff ff       	call   f0101212 <page_insert>$/;"	l
f01028c4	obj/kern/kernel.asm	/^f01028c4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01028c7	obj/kern/kernel.asm	/^f01028c7:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	02 02 02 $/;"	l
f01028d1	obj/kern/kernel.asm	/^f01028d1:	74 19                	je     f01028ec <mem_init+0x164e>$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	68 88 71 10 f0       	push   $0xf0107188$/;"	l
f01028d8	obj/kern/kernel.asm	/^f01028d8:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01028dd	obj/kern/kernel.asm	/^f01028dd:	68 e7 03 00 00       	push   $0x3e7$/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01028e7	obj/kern/kernel.asm	/^f01028e7:	e8 04 d8 ff ff       	call   f01000f0 <_panic>$/;"	l
f01028ec	obj/kern/kernel.asm	/^f01028ec:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	74 19                	je     f010290c <mem_init+0x166e>$/;"	l
f01028f3	obj/kern/kernel.asm	/^f01028f3:	68 8d 69 10 f0       	push   $0xf010698d$/;"	l
f01028f8	obj/kern/kernel.asm	/^f01028f8:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01028fd	obj/kern/kernel.asm	/^f01028fd:	68 e8 03 00 00       	push   $0x3e8$/;"	l
f0102902	obj/kern/kernel.asm	/^f0102902:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102907	obj/kern/kernel.asm	/^f0102907:	e8 e4 d7 ff ff       	call   f01000f0 <_panic>$/;"	l
f010290c	obj/kern/kernel.asm	/^f010290c:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102911	obj/kern/kernel.asm	/^f0102911:	74 19                	je     f010292c <mem_init+0x168e>$/;"	l
f0102913	obj/kern/kernel.asm	/^f0102913:	68 f7 69 10 f0       	push   $0xf01069f7$/;"	l
f0102918	obj/kern/kernel.asm	/^f0102918:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010291d	obj/kern/kernel.asm	/^f010291d:	68 e9 03 00 00       	push   $0x3e9$/;"	l
f0102922	obj/kern/kernel.asm	/^f0102922:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102927	obj/kern/kernel.asm	/^f0102927:	e8 c4 d7 ff ff       	call   f01000f0 <_panic>$/;"	l
f010292c	obj/kern/kernel.asm	/^f010292c:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	03 03 03 $/;"	l
f0102936	obj/kern/kernel.asm	/^f0102936:	89 f0                	mov    %esi,%eax$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f010293e	obj/kern/kernel.asm	/^f010293e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102941	obj/kern/kernel.asm	/^f0102941:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	89 c2                	mov    %eax,%edx$/;"	l
f0102946	obj/kern/kernel.asm	/^f0102946:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102949	obj/kern/kernel.asm	/^f0102949:	3b 15 28 80 41 f0    	cmp    0xf0418028,%edx$/;"	l
f010294f	obj/kern/kernel.asm	/^f010294f:	72 12                	jb     f0102963 <mem_init+0x16c5>$/;"	l
f0102951	obj/kern/kernel.asm	/^f0102951:	50                   	push   %eax$/;"	l
f0102952	obj/kern/kernel.asm	/^f0102952:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f0102957	obj/kern/kernel.asm	/^f0102957:	6a 58                	push   $0x58$/;"	l
f0102959	obj/kern/kernel.asm	/^f0102959:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f010295e	obj/kern/kernel.asm	/^f010295e:	e8 8d d7 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102963	obj/kern/kernel.asm	/^f0102963:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f010296a	obj/kern/kernel.asm	/^f010296a:	03 03 03 $/;"	l
f010296d	obj/kern/kernel.asm	/^f010296d:	74 19                	je     f0102988 <mem_init+0x16ea>$/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	68 ac 71 10 f0       	push   $0xf01071ac$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	68 eb 03 00 00       	push   $0x3eb$/;"	l
f010297e	obj/kern/kernel.asm	/^f010297e:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102983	obj/kern/kernel.asm	/^f0102983:	e8 68 d7 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	ff 35 2c 80 41 f0    	pushl  0xf041802c$/;"	l
f0102996	obj/kern/kernel.asm	/^f0102996:	e8 31 e8 ff ff       	call   f01011cc <page_remove>$/;"	l
f010299b	obj/kern/kernel.asm	/^f010299b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	74 19                	je     f01029be <mem_init+0x1720>$/;"	l
f01029a5	obj/kern/kernel.asm	/^f01029a5:	68 c5 69 10 f0       	push   $0xf01069c5$/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01029af	obj/kern/kernel.asm	/^f01029af:	68 ed 03 00 00       	push   $0x3ed$/;"	l
f01029b4	obj/kern/kernel.asm	/^f01029b4:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01029b9	obj/kern/kernel.asm	/^f01029b9:	e8 32 d7 ff ff       	call   f01000f0 <_panic>$/;"	l
f01029be	obj/kern/kernel.asm	/^f01029be:	8b 0d 2c 80 41 f0    	mov    0xf041802c,%ecx$/;"	l
f01029c4	obj/kern/kernel.asm	/^f01029c4:	8b 11                	mov    (%ecx),%edx$/;"	l
f01029c6	obj/kern/kernel.asm	/^f01029c6:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01029cc	obj/kern/kernel.asm	/^f01029cc:	89 d8                	mov    %ebx,%eax$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	2b 05 30 80 41 f0    	sub    0xf0418030,%eax$/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01029d7	obj/kern/kernel.asm	/^f01029d7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01029da	obj/kern/kernel.asm	/^f01029da:	39 c2                	cmp    %eax,%edx$/;"	l
f01029dc	obj/kern/kernel.asm	/^f01029dc:	74 19                	je     f01029f7 <mem_init+0x1759>$/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01029e3	obj/kern/kernel.asm	/^f01029e3:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01029e8	obj/kern/kernel.asm	/^f01029e8:	68 f0 03 00 00       	push   $0x3f0$/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f01029f2	obj/kern/kernel.asm	/^f01029f2:	e8 f9 d6 ff ff       	call   f01000f0 <_panic>$/;"	l
f01029f7	obj/kern/kernel.asm	/^f01029f7:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	74 19                	je     f0102a1d <mem_init+0x177f>$/;"	l
f0102a04	obj/kern/kernel.asm	/^f0102a04:	68 7c 69 10 f0       	push   $0xf010697c$/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	68 f2 03 00 00       	push   $0x3f2$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	e8 d3 d6 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102a23	obj/kern/kernel.asm	/^f0102a23:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a26	obj/kern/kernel.asm	/^f0102a26:	53                   	push   %ebx$/;"	l
f0102a27	obj/kern/kernel.asm	/^f0102a27:	e8 bb e5 ff ff       	call   f0100fe7 <page_free>$/;"	l
f0102a2c	obj/kern/kernel.asm	/^f0102a2c:	c7 04 24 d8 71 10 f0 	movl   $0xf01071d8,(%esp)$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	e8 85 10 00 00       	call   f0103abd <cprintf>$/;"	l
f0102a38	obj/kern/kernel.asm	/^f0102a38:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a3b	obj/kern/kernel.asm	/^f0102a3b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	5b                   	pop    %ebx$/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	5e                   	pop    %esi$/;"	l
f0102a40	obj/kern/kernel.asm	/^f0102a40:	5f                   	pop    %edi$/;"	l
f0102a41	obj/kern/kernel.asm	/^f0102a41:	5d                   	pop    %ebp$/;"	l
f0102a42	obj/kern/kernel.asm	/^f0102a42:	c3                   	ret    $/;"	l
f0102a43	obj/kern/kernel.asm	/^f0102a43 <mmio_map_region>:$/;"	l
f0102a43	obj/kern/kernel.asm	/^f0102a43:	55                   	push   %ebp$/;"	l
f0102a44	obj/kern/kernel.asm	/^f0102a44:	89 e5                	mov    %esp,%ebp$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a49	obj/kern/kernel.asm	/^f0102a49:	68 04 72 10 f0       	push   $0xf0107204$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	68 21 02 00 00       	push   $0x221$/;"	l
f0102a53	obj/kern/kernel.asm	/^f0102a53:	68 68 67 10 f0       	push   $0xf0106768$/;"	l
f0102a58	obj/kern/kernel.asm	/^f0102a58:	e8 93 d6 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d <user_mem_check>:$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	55                   	push   %ebp$/;"	l
f0102a5e	obj/kern/kernel.asm	/^f0102a5e:	89 e5                	mov    %esp,%ebp$/;"	l
f0102a60	obj/kern/kernel.asm	/^f0102a60:	57                   	push   %edi$/;"	l
f0102a61	obj/kern/kernel.asm	/^f0102a61:	56                   	push   %esi$/;"	l
f0102a62	obj/kern/kernel.asm	/^f0102a62:	53                   	push   %ebx$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0102a66	obj/kern/kernel.asm	/^f0102a66:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	89 d0                	mov    %edx,%eax$/;"	l
f0102a6b	obj/kern/kernel.asm	/^f0102a6b:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0102a6e	obj/kern/kernel.asm	/^f0102a6e:	3d 00 00 80 ef       	cmp    $0xef800000,%eax$/;"	l
f0102a73	obj/kern/kernel.asm	/^f0102a73:	76 1b                	jbe    f0102a90 <user_mem_check+0x33>$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	81 fa 00 00 80 ef    	cmp    $0xef800000,%edx$/;"	l
f0102a7b	obj/kern/kernel.asm	/^f0102a7b:	b8 00 00 80 ef       	mov    $0xef800000,%eax$/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	0f 42 d0             	cmovb  %eax,%edx$/;"	l
f0102a83	obj/kern/kernel.asm	/^f0102a83:	89 15 1c 23 41 f0    	mov    %edx,0xf041231c$/;"	l
f0102a89	obj/kern/kernel.asm	/^f0102a89:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102a8e	obj/kern/kernel.asm	/^f0102a8e:	eb 66                	jmp    f0102af6 <user_mem_check+0x99>$/;"	l
f0102a90	obj/kern/kernel.asm	/^f0102a90:	89 d3                	mov    %edx,%ebx$/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	83 ce 01             	or     $0x1,%esi$/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0102a9d	obj/kern/kernel.asm	/^f0102a9d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102aa2	obj/kern/kernel.asm	/^f0102aa2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	8d 7d e4             	lea    -0x1c(%ebp),%edi$/;"	l
f0102aa8	obj/kern/kernel.asm	/^f0102aa8:	eb 42                	jmp    f0102aec <user_mem_check+0x8f>$/;"	l
f0102aaa	obj/kern/kernel.asm	/^f0102aaa:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	57                   	push   %edi$/;"	l
f0102aae	obj/kern/kernel.asm	/^f0102aae:	89 d8                	mov    %ebx,%eax$/;"	l
f0102ab0	obj/kern/kernel.asm	/^f0102ab0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102ab5	obj/kern/kernel.asm	/^f0102ab5:	50                   	push   %eax$/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102ab9	obj/kern/kernel.asm	/^f0102ab9:	ff 70 5c             	pushl  0x5c(%eax)$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	e8 8a e6 ff ff       	call   f010114b <page_lookup>$/;"	l
f0102ac1	obj/kern/kernel.asm	/^f0102ac1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ac4	obj/kern/kernel.asm	/^f0102ac4:	85 c0                	test   %eax,%eax$/;"	l
f0102ac6	obj/kern/kernel.asm	/^f0102ac6:	74 0b                	je     f0102ad3 <user_mem_check+0x76>$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102acb	obj/kern/kernel.asm	/^f0102acb:	89 f1                	mov    %esi,%ecx$/;"	l
f0102acd	obj/kern/kernel.asm	/^f0102acd:	23 08                	and    (%eax),%ecx$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	39 ce                	cmp    %ecx,%esi$/;"	l
f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	74 0d                	je     f0102ae0 <user_mem_check+0x83>$/;"	l
f0102ad3	obj/kern/kernel.asm	/^f0102ad3:	89 1d 1c 23 41 f0    	mov    %ebx,0xf041231c$/;"	l
f0102ad9	obj/kern/kernel.asm	/^f0102ad9:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102ade	obj/kern/kernel.asm	/^f0102ade:	eb 16                	jmp    f0102af6 <user_mem_check+0x99>$/;"	l
f0102ae0	obj/kern/kernel.asm	/^f0102ae0:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ae6	obj/kern/kernel.asm	/^f0102ae6:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102aec	obj/kern/kernel.asm	/^f0102aec:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx$/;"	l
f0102aef	obj/kern/kernel.asm	/^f0102aef:	75 b9                	jne    f0102aaa <user_mem_check+0x4d>$/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102af6	obj/kern/kernel.asm	/^f0102af6:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	5b                   	pop    %ebx$/;"	l
f0102afa	obj/kern/kernel.asm	/^f0102afa:	5e                   	pop    %esi$/;"	l
f0102afb	obj/kern/kernel.asm	/^f0102afb:	5f                   	pop    %edi$/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	5d                   	pop    %ebp$/;"	l
f0102afd	obj/kern/kernel.asm	/^f0102afd:	c3                   	ret    $/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe <user_mem_assert>:$/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe:	55                   	push   %ebp$/;"	l
f0102aff	obj/kern/kernel.asm	/^f0102aff:	89 e5                	mov    %esp,%ebp$/;"	l
f0102b01	obj/kern/kernel.asm	/^f0102b01:	53                   	push   %ebx$/;"	l
f0102b02	obj/kern/kernel.asm	/^f0102b02:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102b0b	obj/kern/kernel.asm	/^f0102b0b:	83 c8 04             	or     $0x4,%eax$/;"	l
f0102b0e	obj/kern/kernel.asm	/^f0102b0e:	50                   	push   %eax$/;"	l
f0102b0f	obj/kern/kernel.asm	/^f0102b0f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0102b12	obj/kern/kernel.asm	/^f0102b12:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0102b15	obj/kern/kernel.asm	/^f0102b15:	53                   	push   %ebx$/;"	l
f0102b16	obj/kern/kernel.asm	/^f0102b16:	e8 42 ff ff ff       	call   f0102a5d <user_mem_check>$/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	85 c0                	test   %eax,%eax$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	79 21                	jns    f0102b43 <user_mem_assert+0x45>$/;"	l
f0102b22	obj/kern/kernel.asm	/^f0102b22:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102b25	obj/kern/kernel.asm	/^f0102b25:	ff 35 1c 23 41 f0    	pushl  0xf041231c$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f0102b2e	obj/kern/kernel.asm	/^f0102b2e:	68 24 72 10 f0       	push   $0xf0107224$/;"	l
f0102b33	obj/kern/kernel.asm	/^f0102b33:	e8 85 0f 00 00       	call   f0103abd <cprintf>$/;"	l
f0102b38	obj/kern/kernel.asm	/^f0102b38:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102b3b	obj/kern/kernel.asm	/^f0102b3b:	e8 e1 05 00 00       	call   f0103121 <env_destroy>$/;"	l
f0102b40	obj/kern/kernel.asm	/^f0102b40:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b43	obj/kern/kernel.asm	/^f0102b43:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0102b46	obj/kern/kernel.asm	/^f0102b46:	c9                   	leave  $/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	c3                   	ret    $/;"	l
f0102b48	obj/kern/kernel.asm	/^f0102b48 <region_alloc>:$/;"	l
f0102b48	obj/kern/kernel.asm	/^f0102b48:	55                   	push   %ebp$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	89 e5                	mov    %esp,%ebp$/;"	l
f0102b4b	obj/kern/kernel.asm	/^f0102b4b:	57                   	push   %edi$/;"	l
f0102b4c	obj/kern/kernel.asm	/^f0102b4c:	56                   	push   %esi$/;"	l
f0102b4d	obj/kern/kernel.asm	/^f0102b4d:	53                   	push   %ebx$/;"	l
f0102b4e	obj/kern/kernel.asm	/^f0102b4e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102b51	obj/kern/kernel.asm	/^f0102b51:	89 c7                	mov    %eax,%edi$/;"	l
f0102b53	obj/kern/kernel.asm	/^f0102b53:	89 d3                	mov    %edx,%ebx$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102b5b	obj/kern/kernel.asm	/^f0102b5b:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f0102b62	obj/kern/kernel.asm	/^f0102b62:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	eb 58                	jmp    f0102bc2 <region_alloc+0x7a>$/;"	l
f0102b6a	obj/kern/kernel.asm	/^f0102b6a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102b6d	obj/kern/kernel.asm	/^f0102b6d:	6a 00                	push   $0x0$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	e8 03 e4 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	85 c0                	test   %eax,%eax$/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	75 17                	jne    f0102b92 <region_alloc+0x4a>$/;"	l
f0102b7b	obj/kern/kernel.asm	/^f0102b7b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	68 5c 72 10 f0       	push   $0xf010725c$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	68 46 01 00 00       	push   $0x146$/;"	l
f0102b88	obj/kern/kernel.asm	/^f0102b88:	68 7e 72 10 f0       	push   $0xf010727e$/;"	l
f0102b8d	obj/kern/kernel.asm	/^f0102b8d:	e8 5e d5 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102b92	obj/kern/kernel.asm	/^f0102b92:	6a 06                	push   $0x6$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	53                   	push   %ebx$/;"	l
f0102b95	obj/kern/kernel.asm	/^f0102b95:	50                   	push   %eax$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	ff 77 5c             	pushl  0x5c(%edi)$/;"	l
f0102b99	obj/kern/kernel.asm	/^f0102b99:	e8 74 e6 ff ff       	call   f0101212 <page_insert>$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	85 c0                	test   %eax,%eax$/;"	l
f0102ba3	obj/kern/kernel.asm	/^f0102ba3:	74 17                	je     f0102bbc <region_alloc+0x74>$/;"	l
f0102ba5	obj/kern/kernel.asm	/^f0102ba5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102ba8	obj/kern/kernel.asm	/^f0102ba8:	68 5c 72 10 f0       	push   $0xf010725c$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	68 49 01 00 00       	push   $0x149$/;"	l
f0102bb2	obj/kern/kernel.asm	/^f0102bb2:	68 7e 72 10 f0       	push   $0xf010727e$/;"	l
f0102bb7	obj/kern/kernel.asm	/^f0102bb7:	e8 34 d5 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102bbc	obj/kern/kernel.asm	/^f0102bbc:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102bc2	obj/kern/kernel.asm	/^f0102bc2:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	75 a4                	jne    f0102b6a <region_alloc+0x22>$/;"	l
f0102bc6	obj/kern/kernel.asm	/^f0102bc6:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102bc9	obj/kern/kernel.asm	/^f0102bc9:	5b                   	pop    %ebx$/;"	l
f0102bca	obj/kern/kernel.asm	/^f0102bca:	5e                   	pop    %esi$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	5f                   	pop    %edi$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	5d                   	pop    %ebp$/;"	l
f0102bcd	obj/kern/kernel.asm	/^f0102bcd:	c3                   	ret    $/;"	l
f0102bce	obj/kern/kernel.asm	/^f0102bce <envid2env>:$/;"	l
f0102bce	obj/kern/kernel.asm	/^f0102bce:	55                   	push   %ebp$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	89 e5                	mov    %esp,%ebp$/;"	l
f0102bd1	obj/kern/kernel.asm	/^f0102bd1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	85 d2                	test   %edx,%edx$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	75 11                	jne    f0102bec <envid2env+0x1e>$/;"	l
f0102bdb	obj/kern/kernel.asm	/^f0102bdb:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f0102be0	obj/kern/kernel.asm	/^f0102be0:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102be3	obj/kern/kernel.asm	/^f0102be3:	89 01                	mov    %eax,(%ecx)$/;"	l
f0102be5	obj/kern/kernel.asm	/^f0102be5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102bea	obj/kern/kernel.asm	/^f0102bea:	eb 5e                	jmp    f0102c4a <envid2env+0x7c>$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	89 d0                	mov    %edx,%eax$/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	69 c0 3c 03 00 00    	imul   $0x33c,%eax,%eax$/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	03 05 2c 23 41 f0    	add    0xf041232c,%eax$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	83 78 54 00          	cmpl   $0x0,0x54(%eax)$/;"	l
f0102c03	obj/kern/kernel.asm	/^f0102c03:	74 05                	je     f0102c0a <envid2env+0x3c>$/;"	l
f0102c05	obj/kern/kernel.asm	/^f0102c05:	3b 50 48             	cmp    0x48(%eax),%edx$/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	74 10                	je     f0102c1a <envid2env+0x4c>$/;"	l
f0102c0a	obj/kern/kernel.asm	/^f0102c0a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102c0d	obj/kern/kernel.asm	/^f0102c0d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102c18	obj/kern/kernel.asm	/^f0102c18:	eb 30                	jmp    f0102c4a <envid2env+0x7c>$/;"	l
f0102c1a	obj/kern/kernel.asm	/^f0102c1a:	84 c9                	test   %cl,%cl$/;"	l
f0102c1c	obj/kern/kernel.asm	/^f0102c1c:	74 22                	je     f0102c40 <envid2env+0x72>$/;"	l
f0102c1e	obj/kern/kernel.asm	/^f0102c1e:	8b 15 28 23 41 f0    	mov    0xf0412328,%edx$/;"	l
f0102c24	obj/kern/kernel.asm	/^f0102c24:	39 d0                	cmp    %edx,%eax$/;"	l
f0102c26	obj/kern/kernel.asm	/^f0102c26:	74 18                	je     f0102c40 <envid2env+0x72>$/;"	l
f0102c28	obj/kern/kernel.asm	/^f0102c28:	8b 4a 48             	mov    0x48(%edx),%ecx$/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	39 48 4c             	cmp    %ecx,0x4c(%eax)$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	74 10                	je     f0102c40 <envid2env+0x72>$/;"	l
f0102c30	obj/kern/kernel.asm	/^f0102c30:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102c39	obj/kern/kernel.asm	/^f0102c39:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102c3e	obj/kern/kernel.asm	/^f0102c3e:	eb 0a                	jmp    f0102c4a <envid2env+0x7c>$/;"	l
f0102c40	obj/kern/kernel.asm	/^f0102c40:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	89 01                	mov    %eax,(%ecx)$/;"	l
f0102c45	obj/kern/kernel.asm	/^f0102c45:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102c4a	obj/kern/kernel.asm	/^f0102c4a:	5d                   	pop    %ebp$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	c3                   	ret    $/;"	l
f0102c4c	obj/kern/kernel.asm	/^f0102c4c <env_init_percpu>:$/;"	l
f0102c4c	obj/kern/kernel.asm	/^f0102c4c:	55                   	push   %ebp$/;"	l
f0102c4d	obj/kern/kernel.asm	/^f0102c4d:	89 e5                	mov    %esp,%ebp$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	b8 00 23 12 f0       	mov    $0xf0122300,%eax$/;"	l
f0102c54	obj/kern/kernel.asm	/^f0102c54:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0102c5c	obj/kern/kernel.asm	/^f0102c5c:	8e e8                	mov    %eax,%gs$/;"	l
f0102c5e	obj/kern/kernel.asm	/^f0102c5e:	8e e0                	mov    %eax,%fs$/;"	l
f0102c60	obj/kern/kernel.asm	/^f0102c60:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0102c65	obj/kern/kernel.asm	/^f0102c65:	8e c0                	mov    %eax,%es$/;"	l
f0102c67	obj/kern/kernel.asm	/^f0102c67:	8e d8                	mov    %eax,%ds$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	8e d0                	mov    %eax,%ss$/;"	l
f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	ea 72 2c 10 f0 08 00 	ljmp   $0x8,$0xf0102c72$/;"	l
f0102c72	obj/kern/kernel.asm	/^f0102c72:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	0f 00 d0             	lldt   %ax$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	5d                   	pop    %ebp$/;"	l
f0102c7b	obj/kern/kernel.asm	/^f0102c7b:	c3                   	ret    $/;"	l
f0102c7c	obj/kern/kernel.asm	/^f0102c7c <env_init>:$/;"	l
f0102c7c	obj/kern/kernel.asm	/^f0102c7c:	55                   	push   %ebp$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	89 e5                	mov    %esp,%ebp$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	68 00 f0 0c 00       	push   $0xcf000$/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	6a 00                	push   $0x0$/;"	l
f0102c89	obj/kern/kernel.asm	/^f0102c89:	ff 35 2c 23 41 f0    	pushl  0xf041232c$/;"	l
f0102c8f	obj/kern/kernel.asm	/^f0102c8f:	e8 3d 2b 00 00       	call   f01057d1 <memset>$/;"	l
f0102c94	obj/kern/kernel.asm	/^f0102c94:	8b 0d 2c 23 41 f0    	mov    0xf041232c,%ecx$/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	89 0d 30 23 41 f0    	mov    %ecx,0xf0412330$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	8d 81 3c 03 00 00    	lea    0x33c(%ecx),%eax$/;"	l
f0102ca6	obj/kern/kernel.asm	/^f0102ca6:	8d 91 00 f0 0c 00    	lea    0xcf000(%ecx),%edx$/;"	l
f0102cac	obj/kern/kernel.asm	/^f0102cac:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102caf	obj/kern/kernel.asm	/^f0102caf:	c7 80 18 fd ff ff 00 	movl   $0x0,-0x2e8(%eax)$/;"	l
f0102cb6	obj/kern/kernel.asm	/^f0102cb6:	00 00 00 $/;"	l
f0102cb9	obj/kern/kernel.asm	/^f0102cb9:	89 80 08 fd ff ff    	mov    %eax,-0x2f8(%eax)$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	05 3c 03 00 00       	add    $0x33c,%eax$/;"	l
f0102cc4	obj/kern/kernel.asm	/^f0102cc4:	39 d0                	cmp    %edx,%eax$/;"	l
f0102cc6	obj/kern/kernel.asm	/^f0102cc6:	75 e7                	jne    f0102caf <env_init+0x33>$/;"	l
f0102cc8	obj/kern/kernel.asm	/^f0102cc8:	c7 81 18 ed 0c 00 00 	movl   $0x0,0xced18(%ecx)$/;"	l
f0102ccf	obj/kern/kernel.asm	/^f0102ccf:	00 00 00 $/;"	l
f0102cd2	obj/kern/kernel.asm	/^f0102cd2:	e8 75 ff ff ff       	call   f0102c4c <env_init_percpu>$/;"	l
f0102cd7	obj/kern/kernel.asm	/^f0102cd7:	c9                   	leave  $/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	c3                   	ret    $/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9 <env_alloc>:$/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9:	55                   	push   %ebp$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	89 e5                	mov    %esp,%ebp$/;"	l
f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	56                   	push   %esi$/;"	l
f0102cdd	obj/kern/kernel.asm	/^f0102cdd:	53                   	push   %ebx$/;"	l
f0102cde	obj/kern/kernel.asm	/^f0102cde:	8b 1d 30 23 41 f0    	mov    0xf0412330,%ebx$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	85 db                	test   %ebx,%ebx$/;"	l
f0102ce6	obj/kern/kernel.asm	/^f0102ce6:	0f 84 6e 01 00 00    	je     f0102e5a <env_alloc+0x181>$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	6a 01                	push   $0x1$/;"	l
f0102cf1	obj/kern/kernel.asm	/^f0102cf1:	e8 81 e2 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	85 c0                	test   %eax,%eax$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	0f 84 60 01 00 00    	je     f0102e61 <env_alloc+0x188>$/;"	l
f0102d01	obj/kern/kernel.asm	/^f0102d01:	89 c2                	mov    %eax,%edx$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	2b 15 30 80 41 f0    	sub    0xf0418030,%edx$/;"	l
f0102d09	obj/kern/kernel.asm	/^f0102d09:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102d0c	obj/kern/kernel.asm	/^f0102d0c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	89 d1                	mov    %edx,%ecx$/;"	l
f0102d11	obj/kern/kernel.asm	/^f0102d11:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102d14	obj/kern/kernel.asm	/^f0102d14:	3b 0d 28 80 41 f0    	cmp    0xf0418028,%ecx$/;"	l
f0102d1a	obj/kern/kernel.asm	/^f0102d1a:	72 12                	jb     f0102d2e <env_alloc+0x55>$/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	52                   	push   %edx$/;"	l
f0102d1d	obj/kern/kernel.asm	/^f0102d1d:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f0102d22	obj/kern/kernel.asm	/^f0102d22:	6a 58                	push   $0x58$/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	e8 c2 d3 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102d2e	obj/kern/kernel.asm	/^f0102d2e:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	89 53 5c             	mov    %edx,0x5c(%ebx)$/;"	l
f0102d37	obj/kern/kernel.asm	/^f0102d37:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0102d3c	obj/kern/kernel.asm	/^f0102d3c:	b8 ba 03 00 00       	mov    $0x3ba,%eax$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	be be 03 00 00       	mov    $0x3be,%esi$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	eb 08                	jmp    f0102d50 <env_alloc+0x77>$/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	3d bd 03 00 00       	cmp    $0x3bd,%eax$/;"	l
f0102d4d	obj/kern/kernel.asm	/^f0102d4d:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f0102d50	obj/kern/kernel.asm	/^f0102d50:	8b 15 2c 80 41 f0    	mov    0xf041802c,%edx$/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	8b 0c 82             	mov    (%edx,%eax,4),%ecx$/;"	l
f0102d59	obj/kern/kernel.asm	/^f0102d59:	8b 53 5c             	mov    0x5c(%ebx),%edx$/;"	l
f0102d5c	obj/kern/kernel.asm	/^f0102d5c:	89 0c 82             	mov    %ecx,(%edx,%eax,4)$/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0102d67	obj/kern/kernel.asm	/^f0102d67:	75 df                	jne    f0102d48 <env_alloc+0x6f>$/;"	l
f0102d69	obj/kern/kernel.asm	/^f0102d69:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d71	obj/kern/kernel.asm	/^f0102d71:	77 15                	ja     f0102d88 <env_alloc+0xaf>$/;"	l
f0102d73	obj/kern/kernel.asm	/^f0102d73:	50                   	push   %eax$/;"	l
f0102d74	obj/kern/kernel.asm	/^f0102d74:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f0102d79	obj/kern/kernel.asm	/^f0102d79:	68 d1 00 00 00       	push   $0xd1$/;"	l
f0102d7e	obj/kern/kernel.asm	/^f0102d7e:	68 7e 72 10 f0       	push   $0xf010727e$/;"	l
f0102d83	obj/kern/kernel.asm	/^f0102d83:	e8 68 d3 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0102d8e	obj/kern/kernel.asm	/^f0102d8e:	83 ca 05             	or     $0x5,%edx$/;"	l
f0102d91	obj/kern/kernel.asm	/^f0102d91:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0102d9a	obj/kern/kernel.asm	/^f0102d9a:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102da9	obj/kern/kernel.asm	/^f0102da9:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0102dac	obj/kern/kernel.asm	/^f0102dac:	89 da                	mov    %ebx,%edx$/;"	l
f0102dae	obj/kern/kernel.asm	/^f0102dae:	2b 15 2c 23 41 f0    	sub    0xf041232c,%edx$/;"	l
f0102db4	obj/kern/kernel.asm	/^f0102db4:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0102db7	obj/kern/kernel.asm	/^f0102db7:	69 d2 2f 06 15 e1    	imul   $0xe115062f,%edx,%edx$/;"	l
f0102dbd	obj/kern/kernel.asm	/^f0102dbd:	09 d0                	or     %edx,%eax$/;"	l
f0102dbf	obj/kern/kernel.asm	/^f0102dbf:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0102dc2	obj/kern/kernel.asm	/^f0102dc2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102dc5	obj/kern/kernel.asm	/^f0102dc5:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0102dc8	obj/kern/kernel.asm	/^f0102dc8:	c7 43 50 02 00 00 00 	movl   $0x2,0x50(%ebx)$/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0102dd6	obj/kern/kernel.asm	/^f0102dd6:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102de0	obj/kern/kernel.asm	/^f0102de0:	6a 44                	push   $0x44$/;"	l
f0102de2	obj/kern/kernel.asm	/^f0102de2:	6a 00                	push   $0x0$/;"	l
f0102de4	obj/kern/kernel.asm	/^f0102de4:	53                   	push   %ebx$/;"	l
f0102de5	obj/kern/kernel.asm	/^f0102de5:	e8 e7 29 00 00       	call   f01057d1 <memset>$/;"	l
f0102dea	obj/kern/kernel.asm	/^f0102dea:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0102df0	obj/kern/kernel.asm	/^f0102df0:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0102df6	obj/kern/kernel.asm	/^f0102df6:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0102dfc	obj/kern/kernel.asm	/^f0102dfc:	c7 43 3c 00 e0 7f ee 	movl   $0xee7fe000,0x3c(%ebx)$/;"	l
f0102e03	obj/kern/kernel.asm	/^f0102e03:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0102e09	obj/kern/kernel.asm	/^f0102e09:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f0102e10	obj/kern/kernel.asm	/^f0102e10:	c7 43 60 00 00 00 00 	movl   $0x0,0x60(%ebx)$/;"	l
f0102e17	obj/kern/kernel.asm	/^f0102e17:	c6 43 64 00          	movb   $0x0,0x64(%ebx)$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	a3 30 23 41 f0       	mov    %eax,0xf0412330$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	89 18                	mov    %ebx,(%eax)$/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	8b 53 48             	mov    0x48(%ebx),%edx$/;"	l
f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e33	obj/kern/kernel.asm	/^f0102e33:	85 c0                	test   %eax,%eax$/;"	l
f0102e35	obj/kern/kernel.asm	/^f0102e35:	74 05                	je     f0102e3c <env_alloc+0x163>$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0102e3a	obj/kern/kernel.asm	/^f0102e3a:	eb 05                	jmp    f0102e41 <env_alloc+0x168>$/;"	l
f0102e3c	obj/kern/kernel.asm	/^f0102e3c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102e41	obj/kern/kernel.asm	/^f0102e41:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102e44	obj/kern/kernel.asm	/^f0102e44:	52                   	push   %edx$/;"	l
f0102e45	obj/kern/kernel.asm	/^f0102e45:	50                   	push   %eax$/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	68 89 72 10 f0       	push   $0xf0107289$/;"	l
f0102e4b	obj/kern/kernel.asm	/^f0102e4b:	e8 6d 0c 00 00       	call   f0103abd <cprintf>$/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e53	obj/kern/kernel.asm	/^f0102e53:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102e58	obj/kern/kernel.asm	/^f0102e58:	eb 0c                	jmp    f0102e66 <env_alloc+0x18d>$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0102e5f	obj/kern/kernel.asm	/^f0102e5f:	eb 05                	jmp    f0102e66 <env_alloc+0x18d>$/;"	l
f0102e61	obj/kern/kernel.asm	/^f0102e61:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	5b                   	pop    %ebx$/;"	l
f0102e6a	obj/kern/kernel.asm	/^f0102e6a:	5e                   	pop    %esi$/;"	l
f0102e6b	obj/kern/kernel.asm	/^f0102e6b:	5d                   	pop    %ebp$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	c3                   	ret    $/;"	l
f0102e6d	obj/kern/kernel.asm	/^f0102e6d <env_create>:$/;"	l
f0102e6d	obj/kern/kernel.asm	/^f0102e6d:	55                   	push   %ebp$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	89 e5                	mov    %esp,%ebp$/;"	l
f0102e70	obj/kern/kernel.asm	/^f0102e70:	57                   	push   %edi$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	56                   	push   %esi$/;"	l
f0102e72	obj/kern/kernel.asm	/^f0102e72:	53                   	push   %ebx$/;"	l
f0102e73	obj/kern/kernel.asm	/^f0102e73:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0102e76	obj/kern/kernel.asm	/^f0102e76:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102e79	obj/kern/kernel.asm	/^f0102e79:	6a 00                	push   $0x0$/;"	l
f0102e7b	obj/kern/kernel.asm	/^f0102e7b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0102e7e	obj/kern/kernel.asm	/^f0102e7e:	50                   	push   %eax$/;"	l
f0102e7f	obj/kern/kernel.asm	/^f0102e7f:	e8 55 fe ff ff       	call   f0102cd9 <env_alloc>$/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e90	obj/kern/kernel.asm	/^f0102e90:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102e95	obj/kern/kernel.asm	/^f0102e95:	77 15                	ja     f0102eac <env_create+0x3f>$/;"	l
f0102e97	obj/kern/kernel.asm	/^f0102e97:	50                   	push   %eax$/;"	l
f0102e98	obj/kern/kernel.asm	/^f0102e98:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	68 ab 01 00 00       	push   $0x1ab$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	68 7e 72 10 f0       	push   $0xf010727e$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	e8 44 d2 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102eac	obj/kern/kernel.asm	/^f0102eac:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102eb4	obj/kern/kernel.asm	/^f0102eb4:	89 fb                	mov    %edi,%ebx$/;"	l
f0102eb6	obj/kern/kernel.asm	/^f0102eb6:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0102ebd	obj/kern/kernel.asm	/^f0102ebd:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	01 de                	add    %ebx,%esi$/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	eb 3d                	jmp    f0102f01 <env_create+0x94>$/;"	l
f0102ec4	obj/kern/kernel.asm	/^f0102ec4:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0102ec7	obj/kern/kernel.asm	/^f0102ec7:	75 35                	jne    f0102efe <env_create+0x91>$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0102ecc	obj/kern/kernel.asm	/^f0102ecc:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0102ecf	obj/kern/kernel.asm	/^f0102ecf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	e8 71 fc ff ff       	call   f0102b48 <region_alloc>$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0102edd	obj/kern/kernel.asm	/^f0102edd:	6a 00                	push   $0x0$/;"	l
f0102edf	obj/kern/kernel.asm	/^f0102edf:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0102ee2	obj/kern/kernel.asm	/^f0102ee2:	e8 ea 28 00 00       	call   f01057d1 <memset>$/;"	l
f0102ee7	obj/kern/kernel.asm	/^f0102ee7:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102eea	obj/kern/kernel.asm	/^f0102eea:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0102eed	obj/kern/kernel.asm	/^f0102eed:	89 f8                	mov    %edi,%eax$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	50                   	push   %eax$/;"	l
f0102ef3	obj/kern/kernel.asm	/^f0102ef3:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0102ef6	obj/kern/kernel.asm	/^f0102ef6:	e8 8b 29 00 00       	call   f0105886 <memcpy>$/;"	l
f0102efb	obj/kern/kernel.asm	/^f0102efb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102efe	obj/kern/kernel.asm	/^f0102efe:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	39 de                	cmp    %ebx,%esi$/;"	l
f0102f03	obj/kern/kernel.asm	/^f0102f03:	75 bf                	jne    f0102ec4 <env_create+0x57>$/;"	l
f0102f05	obj/kern/kernel.asm	/^f0102f05:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0102f08	obj/kern/kernel.asm	/^f0102f08:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102f0b	obj/kern/kernel.asm	/^f0102f0b:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0102f0e	obj/kern/kernel.asm	/^f0102f0e:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0102f13	obj/kern/kernel.asm	/^f0102f13:	ba 00 d0 7f ee       	mov    $0xee7fd000,%edx$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	89 f8                	mov    %edi,%eax$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	e8 29 fc ff ff       	call   f0102b48 <region_alloc>$/;"	l
f0102f1f	obj/kern/kernel.asm	/^f0102f1f:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f0102f24	obj/kern/kernel.asm	/^f0102f24:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102f29	obj/kern/kernel.asm	/^f0102f29:	77 15                	ja     f0102f40 <env_create+0xd3>$/;"	l
f0102f2b	obj/kern/kernel.asm	/^f0102f2b:	50                   	push   %eax$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f0102f31	obj/kern/kernel.asm	/^f0102f31:	68 c1 01 00 00       	push   $0x1c1$/;"	l
f0102f36	obj/kern/kernel.asm	/^f0102f36:	68 7e 72 10 f0       	push   $0xf010727e$/;"	l
f0102f3b	obj/kern/kernel.asm	/^f0102f3b:	e8 b0 d1 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102f40	obj/kern/kernel.asm	/^f0102f40:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102f45	obj/kern/kernel.asm	/^f0102f45:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102f48	obj/kern/kernel.asm	/^f0102f48:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	89 48 50             	mov    %ecx,0x50(%eax)$/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51:	83 f9 03             	cmp    $0x3,%ecx$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	75 07                	jne    f0102f5d <env_create+0xf0>$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f0102f5d	obj/kern/kernel.asm	/^f0102f5d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	5b                   	pop    %ebx$/;"	l
f0102f61	obj/kern/kernel.asm	/^f0102f61:	5e                   	pop    %esi$/;"	l
f0102f62	obj/kern/kernel.asm	/^f0102f62:	5f                   	pop    %edi$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	5d                   	pop    %ebp$/;"	l
f0102f64	obj/kern/kernel.asm	/^f0102f64:	c3                   	ret    $/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65 <env_free>:$/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	55                   	push   %ebp$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	57                   	push   %edi$/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	56                   	push   %esi$/;"	l
f0102f6a	obj/kern/kernel.asm	/^f0102f6a:	53                   	push   %ebx$/;"	l
f0102f6b	obj/kern/kernel.asm	/^f0102f6b:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102f71	obj/kern/kernel.asm	/^f0102f71:	8b 15 28 23 41 f0    	mov    0xf0412328,%edx$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	39 fa                	cmp    %edi,%edx$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	75 29                	jne    f0102fa4 <env_free+0x3f>$/;"	l
f0102f7b	obj/kern/kernel.asm	/^f0102f7b:	a1 2c 80 41 f0       	mov    0xf041802c,%eax$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102f85	obj/kern/kernel.asm	/^f0102f85:	77 15                	ja     f0102f9c <env_free+0x37>$/;"	l
f0102f87	obj/kern/kernel.asm	/^f0102f87:	50                   	push   %eax$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	68 e6 01 00 00       	push   $0x1e6$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	68 7e 72 10 f0       	push   $0xf010727e$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	e8 54 d1 ff ff       	call   f01000f0 <_panic>$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102fa1	obj/kern/kernel.asm	/^f0102fa1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	8b 4f 48             	mov    0x48(%edi),%ecx$/;"	l
f0102fa7	obj/kern/kernel.asm	/^f0102fa7:	85 d2                	test   %edx,%edx$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	74 05                	je     f0102fb0 <env_free+0x4b>$/;"	l
f0102fab	obj/kern/kernel.asm	/^f0102fab:	8b 42 48             	mov    0x48(%edx),%eax$/;"	l
f0102fae	obj/kern/kernel.asm	/^f0102fae:	eb 05                	jmp    f0102fb5 <env_free+0x50>$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102fb8	obj/kern/kernel.asm	/^f0102fb8:	51                   	push   %ecx$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	50                   	push   %eax$/;"	l
f0102fba	obj/kern/kernel.asm	/^f0102fba:	68 9e 72 10 f0       	push   $0xf010729e$/;"	l
f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	e8 f9 0a 00 00       	call   f0103abd <cprintf>$/;"	l
f0102fc4	obj/kern/kernel.asm	/^f0102fc4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102fc7	obj/kern/kernel.asm	/^f0102fc7:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0102fd1	obj/kern/kernel.asm	/^f0102fd1:	89 d0                	mov    %edx,%eax$/;"	l
f0102fd3	obj/kern/kernel.asm	/^f0102fd3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0102fd6	obj/kern/kernel.asm	/^f0102fd6:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f0102fdc	obj/kern/kernel.asm	/^f0102fdc:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f0102fdf	obj/kern/kernel.asm	/^f0102fdf:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	0f 84 a8 00 00 00    	je     f0103093 <env_free+0x12e>$/;"	l
f0102feb	obj/kern/kernel.asm	/^f0102feb:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0102ff1	obj/kern/kernel.asm	/^f0102ff1:	89 f0                	mov    %esi,%eax$/;"	l
f0102ff3	obj/kern/kernel.asm	/^f0102ff3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102ff6	obj/kern/kernel.asm	/^f0102ff6:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	39 05 28 80 41 f0    	cmp    %eax,0xf0418028$/;"	l
f0102fff	obj/kern/kernel.asm	/^f0102fff:	77 15                	ja     f0103016 <env_free+0xb1>$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	56                   	push   %esi$/;"	l
f0103002	obj/kern/kernel.asm	/^f0103002:	68 80 6a 10 f0       	push   $0xf0106a80$/;"	l
f0103007	obj/kern/kernel.asm	/^f0103007:	68 f7 01 00 00       	push   $0x1f7$/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	68 7e 72 10 f0       	push   $0xf010727e$/;"	l
f0103011	obj/kern/kernel.asm	/^f0103011:	e8 da d0 ff ff       	call   f01000f0 <_panic>$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f010301c	obj/kern/kernel.asm	/^f010301c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010301f	obj/kern/kernel.asm	/^f010301f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103024	obj/kern/kernel.asm	/^f0103024:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	01 $/;"	l
f010302c	obj/kern/kernel.asm	/^f010302c:	74 17                	je     f0103045 <env_free+0xe0>$/;"	l
f010302e	obj/kern/kernel.asm	/^f010302e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103031	obj/kern/kernel.asm	/^f0103031:	89 d8                	mov    %ebx,%eax$/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103036	obj/kern/kernel.asm	/^f0103036:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103039	obj/kern/kernel.asm	/^f0103039:	50                   	push   %eax$/;"	l
f010303a	obj/kern/kernel.asm	/^f010303a:	ff 77 5c             	pushl  0x5c(%edi)$/;"	l
f010303d	obj/kern/kernel.asm	/^f010303d:	e8 8a e1 ff ff       	call   f01011cc <page_remove>$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103048	obj/kern/kernel.asm	/^f0103048:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f010304e	obj/kern/kernel.asm	/^f010304e:	75 d4                	jne    f0103024 <env_free+0xbf>$/;"	l
f0103050	obj/kern/kernel.asm	/^f0103050:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f0103053	obj/kern/kernel.asm	/^f0103053:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f010305d	obj/kern/kernel.asm	/^f010305d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103060	obj/kern/kernel.asm	/^f0103060:	3b 05 28 80 41 f0    	cmp    0xf0418028,%eax$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	72 14                	jb     f010307c <env_free+0x117>$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010306b	obj/kern/kernel.asm	/^f010306b:	68 88 6b 10 f0       	push   $0xf0106b88$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	6a 51                	push   $0x51$/;"	l
f0103072	obj/kern/kernel.asm	/^f0103072:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	e8 74 d0 ff ff       	call   f01000f0 <_panic>$/;"	l
f010307c	obj/kern/kernel.asm	/^f010307c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010307f	obj/kern/kernel.asm	/^f010307f:	a1 30 80 41 f0       	mov    0xf0418030,%eax$/;"	l
f0103084	obj/kern/kernel.asm	/^f0103084:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103087	obj/kern/kernel.asm	/^f0103087:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f010308a	obj/kern/kernel.asm	/^f010308a:	50                   	push   %eax$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	e8 a9 df ff ff       	call   f0101039 <page_decref>$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103093	obj/kern/kernel.asm	/^f0103093:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010309a	obj/kern/kernel.asm	/^f010309a:	3d ba 03 00 00       	cmp    $0x3ba,%eax$/;"	l
f010309f	obj/kern/kernel.asm	/^f010309f:	0f 85 29 ff ff ff    	jne    f0102fce <env_free+0x69>$/;"	l
f01030a5	obj/kern/kernel.asm	/^f01030a5:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01030ad	obj/kern/kernel.asm	/^f01030ad:	77 15                	ja     f01030c4 <env_free+0x15f>$/;"	l
f01030af	obj/kern/kernel.asm	/^f01030af:	50                   	push   %eax$/;"	l
f01030b0	obj/kern/kernel.asm	/^f01030b0:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f01030b5	obj/kern/kernel.asm	/^f01030b5:	68 05 02 00 00       	push   $0x205$/;"	l
f01030ba	obj/kern/kernel.asm	/^f01030ba:	68 7e 72 10 f0       	push   $0xf010727e$/;"	l
f01030bf	obj/kern/kernel.asm	/^f01030bf:	e8 2c d0 ff ff       	call   f01000f0 <_panic>$/;"	l
f01030c4	obj/kern/kernel.asm	/^f01030c4:	c7 47 5c 00 00 00 00 	movl   $0x0,0x5c(%edi)$/;"	l
f01030cb	obj/kern/kernel.asm	/^f01030cb:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01030d0	obj/kern/kernel.asm	/^f01030d0:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01030d3	obj/kern/kernel.asm	/^f01030d3:	3b 05 28 80 41 f0    	cmp    0xf0418028,%eax$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	72 14                	jb     f01030ef <env_free+0x18a>$/;"	l
f01030db	obj/kern/kernel.asm	/^f01030db:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	68 88 6b 10 f0       	push   $0xf0106b88$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	6a 51                	push   $0x51$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	68 74 67 10 f0       	push   $0xf0106774$/;"	l
f01030ea	obj/kern/kernel.asm	/^f01030ea:	e8 01 d0 ff ff       	call   f01000f0 <_panic>$/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	8b 15 30 80 41 f0    	mov    0xf0418030,%edx$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01030fb	obj/kern/kernel.asm	/^f01030fb:	50                   	push   %eax$/;"	l
f01030fc	obj/kern/kernel.asm	/^f01030fc:	e8 38 df ff ff       	call   f0101039 <page_decref>$/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	a1 30 23 41 f0       	mov    0xf0412330,%eax$/;"	l
f010310d	obj/kern/kernel.asm	/^f010310d:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	89 3d 30 23 41 f0    	mov    %edi,0xf0412330$/;"	l
f0103116	obj/kern/kernel.asm	/^f0103116:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103119	obj/kern/kernel.asm	/^f0103119:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010311c	obj/kern/kernel.asm	/^f010311c:	5b                   	pop    %ebx$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	5e                   	pop    %esi$/;"	l
f010311e	obj/kern/kernel.asm	/^f010311e:	5f                   	pop    %edi$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	5d                   	pop    %ebp$/;"	l
f0103120	obj/kern/kernel.asm	/^f0103120:	c3                   	ret    $/;"	l
f0103121	obj/kern/kernel.asm	/^f0103121 <env_destroy>:$/;"	l
f0103121	obj/kern/kernel.asm	/^f0103121:	55                   	push   %ebp$/;"	l
f0103122	obj/kern/kernel.asm	/^f0103122:	89 e5                	mov    %esp,%ebp$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	53                   	push   %ebx$/;"	l
f0103125	obj/kern/kernel.asm	/^f0103125:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f010312f	obj/kern/kernel.asm	/^f010312f:	75 11                	jne    f0103142 <env_destroy+0x21>$/;"	l
f0103131	obj/kern/kernel.asm	/^f0103131:	3b 1d 28 23 41 f0    	cmp    0xf0412328,%ebx$/;"	l
f0103137	obj/kern/kernel.asm	/^f0103137:	74 09                	je     f0103142 <env_destroy+0x21>$/;"	l
f0103139	obj/kern/kernel.asm	/^f0103139:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103140	obj/kern/kernel.asm	/^f0103140:	eb 23                	jmp    f0103165 <env_destroy+0x44>$/;"	l
f0103142	obj/kern/kernel.asm	/^f0103142:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	53                   	push   %ebx$/;"	l
f0103146	obj/kern/kernel.asm	/^f0103146:	e8 1a fe ff ff       	call   f0102f65 <env_free>$/;"	l
f010314b	obj/kern/kernel.asm	/^f010314b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010314e	obj/kern/kernel.asm	/^f010314e:	3b 1d 28 23 41 f0    	cmp    0xf0412328,%ebx$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	75 0f                	jne    f0103165 <env_destroy+0x44>$/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	c7 05 28 23 41 f0 00 	movl   $0x0,0xf0412328$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	00 00 00 $/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	e8 66 13 00 00       	call   f01044cb <sched_yield>$/;"	l
f0103165	obj/kern/kernel.asm	/^f0103165:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	c9                   	leave  $/;"	l
f0103169	obj/kern/kernel.asm	/^f0103169:	c3                   	ret    $/;"	l
f010316a	obj/kern/kernel.asm	/^f010316a <env_pop_tf>:$/;"	l
f010316a	obj/kern/kernel.asm	/^f010316a:	55                   	push   %ebp$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	89 e5                	mov    %esp,%ebp$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103170	obj/kern/kernel.asm	/^f0103170:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103173	obj/kern/kernel.asm	/^f0103173:	61                   	popa   $/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	07                   	pop    %es$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	1f                   	pop    %ds$/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	cf                   	iret   $/;"	l
f010317a	obj/kern/kernel.asm	/^f010317a:	68 b4 72 10 f0       	push   $0xf01072b4$/;"	l
f010317f	obj/kern/kernel.asm	/^f010317f:	68 6f 02 00 00       	push   $0x26f$/;"	l
f0103184	obj/kern/kernel.asm	/^f0103184:	68 7e 72 10 f0       	push   $0xf010727e$/;"	l
f0103189	obj/kern/kernel.asm	/^f0103189:	e8 62 cf ff ff       	call   f01000f0 <_panic>$/;"	l
f010318e	obj/kern/kernel.asm	/^f010318e <env_run>:$/;"	l
f010318e	obj/kern/kernel.asm	/^f010318e:	55                   	push   %ebp$/;"	l
f010318f	obj/kern/kernel.asm	/^f010318f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	57                   	push   %edi$/;"	l
f0103192	obj/kern/kernel.asm	/^f0103192:	56                   	push   %esi$/;"	l
f0103193	obj/kern/kernel.asm	/^f0103193:	53                   	push   %ebx$/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f010319c	obj/kern/kernel.asm	/^f010319c:	85 c0                	test   %eax,%eax$/;"	l
f010319e	obj/kern/kernel.asm	/^f010319e:	74 0d                	je     f01031ad <env_run+0x1f>$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01031a4	obj/kern/kernel.asm	/^f01031a4:	75 07                	jne    f01031ad <env_run+0x1f>$/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f01031ad	obj/kern/kernel.asm	/^f01031ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	a3 28 23 41 f0       	mov    %eax,0xf0412328$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f01031c0	obj/kern/kernel.asm	/^f01031c0:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	77 15                	ja     f01031df <env_run+0x51>$/;"	l
f01031ca	obj/kern/kernel.asm	/^f01031ca:	50                   	push   %eax$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	68 64 6b 10 f0       	push   $0xf0106b64$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	68 97 02 00 00       	push   $0x297$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	68 7e 72 10 f0       	push   $0xf010727e$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	e8 11 cf ff ff       	call   f01000f0 <_panic>$/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01031e7	obj/kern/kernel.asm	/^f01031e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	8b 80 30 01 00 00    	mov    0x130(%eax),%eax$/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0:	85 c0                	test   %eax,%eax$/;"	l
f01031f2	obj/kern/kernel.asm	/^f01031f2:	0f 84 19 01 00 00    	je     f0103311 <env_run+0x183>$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	8b 93 34 03 00 00    	mov    0x334(%ebx),%edx$/;"	l
f0103201	obj/kern/kernel.asm	/^f0103201:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0103204	obj/kern/kernel.asm	/^f0103204:	0f 85 07 01 00 00    	jne    f0103311 <env_run+0x183>$/;"	l
f010320a	obj/kern/kernel.asm	/^f010320a:	83 ca 01             	or     $0x1,%edx$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	89 93 34 03 00 00    	mov    %edx,0x334(%ebx)$/;"	l
f0103213	obj/kern/kernel.asm	/^f0103213:	8b 73 3c             	mov    0x3c(%ebx),%esi$/;"	l
f0103216	obj/kern/kernel.asm	/^f0103216:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	89 83 30 01 00 00    	mov    %eax,0x130(%ebx)$/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	89 da                	mov    %ebx,%edx$/;"	l
f0103224	obj/kern/kernel.asm	/^f0103224:	8d b3 34 01 00 00    	lea    0x134(%ebx),%esi$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f010322d	obj/kern/kernel.asm	/^f010322d:	8d 1c c6             	lea    (%esi,%eax,8),%ebx$/;"	l
f0103230	obj/kern/kernel.asm	/^f0103230:	89 d0                	mov    %edx,%eax$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	83 c0 78             	add    $0x78,%eax$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	89 c7                	mov    %eax,%edi$/;"	l
f0103237	obj/kern/kernel.asm	/^f0103237:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	8b 03                	mov    (%ebx),%eax$/;"	l
f010323c	obj/kern/kernel.asm	/^f010323c:	8d 04 c7             	lea    (%edi,%eax,8),%eax$/;"	l
f010323f	obj/kern/kernel.asm	/^f010323f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	75 0c                	jne    f0103253 <env_run+0xc5>$/;"	l
f0103247	obj/kern/kernel.asm	/^f0103247:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010324a	obj/kern/kernel.asm	/^f010324a:	52                   	push   %edx$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	e8 d1 fe ff ff       	call   f0103121 <env_destroy>$/;"	l
f0103250	obj/kern/kernel.asm	/^f0103250:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103253	obj/kern/kernel.asm	/^f0103253:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0103259	obj/kern/kernel.asm	/^f0103259:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010325c	obj/kern/kernel.asm	/^f010325c:	89 d7                	mov    %edx,%edi$/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	89 42 fc             	mov    %eax,-0x4(%edx)$/;"	l
f0103261	obj/kern/kernel.asm	/^f0103261:	83 ef 48             	sub    $0x48,%edi$/;"	l
f0103264	obj/kern/kernel.asm	/^f0103264:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0103269	obj/kern/kernel.asm	/^f0103269:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010326c	obj/kern/kernel.asm	/^f010326c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010326e	obj/kern/kernel.asm	/^f010326e:	c7 42 b4 00 00 00 00 	movl   $0x0,-0x4c(%edx)$/;"	l
f0103275	obj/kern/kernel.asm	/^f0103275:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0103278	obj/kern/kernel.asm	/^f0103278:	89 42 b0             	mov    %eax,-0x50(%edx)$/;"	l
f010327b	obj/kern/kernel.asm	/^f010327b:	8d 72 ac             	lea    -0x54(%edx),%esi$/;"	l
f010327e	obj/kern/kernel.asm	/^f010327e:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103281	obj/kern/kernel.asm	/^f0103281:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0103284	obj/kern/kernel.asm	/^f0103284:	89 42 ac             	mov    %eax,-0x54(%edx)$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	eb 4c                	jmp    f01032d5 <env_run+0x147>$/;"	l
f0103289	obj/kern/kernel.asm	/^f0103289:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010328f	obj/kern/kernel.asm	/^f010328f:	89 82 30 01 00 00    	mov    %eax,0x130(%edx)$/;"	l
f0103295	obj/kern/kernel.asm	/^f0103295:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	8d 1c c2             	lea    (%edx,%eax,8),%ebx$/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	8b 03                	mov    (%ebx),%eax$/;"	l
f010329d	obj/kern/kernel.asm	/^f010329d:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	8d 3c c1             	lea    (%ecx,%eax,8),%edi$/;"	l
f01032a3	obj/kern/kernel.asm	/^f01032a3:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01032a6	obj/kern/kernel.asm	/^f01032a6:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f01032a9	obj/kern/kernel.asm	/^f01032a9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01032ac	obj/kern/kernel.asm	/^f01032ac:	83 3f 00             	cmpl   $0x0,(%edi)$/;"	l
f01032af	obj/kern/kernel.asm	/^f01032af:	75 0e                	jne    f01032bf <env_run+0x131>$/;"	l
f01032b1	obj/kern/kernel.asm	/^f01032b1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01032b7	obj/kern/kernel.asm	/^f01032b7:	e8 65 fe ff ff       	call   f0103121 <env_destroy>$/;"	l
f01032bc	obj/kern/kernel.asm	/^f01032bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032bf	obj/kern/kernel.asm	/^f01032bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01032c2	obj/kern/kernel.asm	/^f01032c2:	8b 00                	mov    (%eax),%eax$/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	89 46 fc             	mov    %eax,-0x4(%esi)$/;"	l
f01032c7	obj/kern/kernel.asm	/^f01032c7:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01032ca	obj/kern/kernel.asm	/^f01032ca:	89 46 f8             	mov    %eax,-0x8(%esi)$/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	83 ee 0c             	sub    $0xc,%esi$/;"	l
f01032d0	obj/kern/kernel.asm	/^f01032d0:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	89 06                	mov    %eax,(%esi)$/;"	l
f01032d5	obj/kern/kernel.asm	/^f01032d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01032d8	obj/kern/kernel.asm	/^f01032d8:	8b 80 30 01 00 00    	mov    0x130(%eax),%eax$/;"	l
f01032de	obj/kern/kernel.asm	/^f01032de:	85 c0                	test   %eax,%eax$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	75 a7                	jne    f0103289 <env_run+0xfb>$/;"	l
f01032e2	obj/kern/kernel.asm	/^f01032e2:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	8b 80 38 03 00 00    	mov    0x338(%eax),%eax$/;"	l
f01032ee	obj/kern/kernel.asm	/^f01032ee:	85 c0                	test   %eax,%eax$/;"	l
f01032f0	obj/kern/kernel.asm	/^f01032f0:	74 11                	je     f0103303 <env_run+0x175>$/;"	l
f01032f2	obj/kern/kernel.asm	/^f01032f2:	8b 13                	mov    (%ebx),%edx$/;"	l
f01032f4	obj/kern/kernel.asm	/^f01032f4:	89 10                	mov    %edx,(%eax)$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	c7 80 38 03 00 00 00 	movl   $0x0,0x338(%eax)$/;"	l
f0103300	obj/kern/kernel.asm	/^f0103300:	00 00 00 $/;"	l
f0103303	obj/kern/kernel.asm	/^f0103303:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103306	obj/kern/kernel.asm	/^f0103306:	8b 00                	mov    (%eax),%eax$/;"	l
f0103308	obj/kern/kernel.asm	/^f0103308:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f010330e	obj/kern/kernel.asm	/^f010330e:	89 73 3c             	mov    %esi,0x3c(%ebx)$/;"	l
f0103311	obj/kern/kernel.asm	/^f0103311:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103314	obj/kern/kernel.asm	/^f0103314:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103317	obj/kern/kernel.asm	/^f0103317:	e8 4e fe ff ff       	call   f010316a <env_pop_tf>$/;"	l
f010331c	obj/kern/kernel.asm	/^f010331c <is_leap_year>:$/;"	l
f010331c	obj/kern/kernel.asm	/^f010331c:	55                   	push   %ebp$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	89 e5                	mov    %esp,%ebp$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0103322	obj/kern/kernel.asm	/^f0103322:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	89 c8                	mov    %ecx,%eax$/;"	l
f0103329	obj/kern/kernel.asm	/^f0103329:	f7 ea                	imul   %edx$/;"	l
f010332b	obj/kern/kernel.asm	/^f010332b:	c1 fa 07             	sar    $0x7,%edx$/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	89 c8                	mov    %ecx,%eax$/;"	l
f0103330	obj/kern/kernel.asm	/^f0103330:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	29 c2                	sub    %eax,%edx$/;"	l
f0103335	obj/kern/kernel.asm	/^f0103335:	69 d2 90 01 00 00    	imul   $0x190,%edx,%edx$/;"	l
f010333b	obj/kern/kernel.asm	/^f010333b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103342	obj/kern/kernel.asm	/^f0103342:	74 28                	je     f010336c <is_leap_year+0x50>$/;"	l
f0103344	obj/kern/kernel.asm	/^f0103344:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103349	obj/kern/kernel.asm	/^f0103349:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010334c	obj/kern/kernel.asm	/^f010334c:	75 1e                	jne    f010336c <is_leap_year+0x50>$/;"	l
f010334e	obj/kern/kernel.asm	/^f010334e:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx$/;"	l
f0103353	obj/kern/kernel.asm	/^f0103353:	89 c8                	mov    %ecx,%eax$/;"	l
f0103355	obj/kern/kernel.asm	/^f0103355:	f7 ea                	imul   %edx$/;"	l
f0103357	obj/kern/kernel.asm	/^f0103357:	c1 fa 05             	sar    $0x5,%edx$/;"	l
f010335a	obj/kern/kernel.asm	/^f010335a:	89 c8                	mov    %ecx,%eax$/;"	l
f010335c	obj/kern/kernel.asm	/^f010335c:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f010335f	obj/kern/kernel.asm	/^f010335f:	29 c2                	sub    %eax,%edx$/;"	l
f0103361	obj/kern/kernel.asm	/^f0103361:	6b d2 64             	imul   $0x64,%edx,%edx$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	0f 95 c0             	setne  %al$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010336c	obj/kern/kernel.asm	/^f010336c:	83 e0 01             	and    $0x1,%eax$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	5d                   	pop    %ebp$/;"	l
f0103370	obj/kern/kernel.asm	/^f0103370:	c3                   	ret    $/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371 <d_to_s>:$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	55                   	push   %ebp$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	89 e5                	mov    %esp,%ebp$/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	69 45 08 80 51 01 00 	imul   $0x15180,0x8(%ebp),%eax$/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	5d                   	pop    %ebp$/;"	l
f010337c	obj/kern/kernel.asm	/^f010337c:	c3                   	ret    $/;"	l
f010337d	obj/kern/kernel.asm	/^f010337d <timestamp>:$/;"	l
f010337d	obj/kern/kernel.asm	/^f010337d:	55                   	push   %ebp$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103380	obj/kern/kernel.asm	/^f0103380:	57                   	push   %edi$/;"	l
f0103381	obj/kern/kernel.asm	/^f0103381:	56                   	push   %esi$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	53                   	push   %ebx$/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103389	obj/kern/kernel.asm	/^f0103389:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f010338c	obj/kern/kernel.asm	/^f010338c:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f010338f	obj/kern/kernel.asm	/^f010338f:	8d b8 d0 07 00 00    	lea    0x7d0(%eax),%edi$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	be b2 07 00 00       	mov    $0x7b2,%esi$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	eb 1c                	jmp    f01033bd <timestamp+0x40>$/;"	l
f01033a1	obj/kern/kernel.asm	/^f01033a1:	56                   	push   %esi$/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	e8 75 ff ff ff       	call   f010331c <is_leap_year>$/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	83 c4 04             	add    $0x4,%esp$/;"	l
f01033aa	obj/kern/kernel.asm	/^f01033aa:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	05 6d 01 00 00       	add    $0x16d,%eax$/;"	l
f01033b2	obj/kern/kernel.asm	/^f01033b2:	69 c0 80 51 01 00    	imul   $0x15180,%eax,%eax$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	01 c3                	add    %eax,%ebx$/;"	l
f01033ba	obj/kern/kernel.asm	/^f01033ba:	83 c6 01             	add    $0x1,%esi$/;"	l
f01033bd	obj/kern/kernel.asm	/^f01033bd:	39 fe                	cmp    %edi,%esi$/;"	l
f01033bf	obj/kern/kernel.asm	/^f01033bf:	7c e0                	jl     f01033a1 <timestamp+0x24>$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	c7 45 c4 1f 00 00 00 	movl   $0x1f,-0x3c(%ebp)$/;"	l
f01033c8	obj/kern/kernel.asm	/^f01033c8:	56                   	push   %esi$/;"	l
f01033c9	obj/kern/kernel.asm	/^f01033c9:	e8 4e ff ff ff       	call   f010331c <is_leap_year>$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	83 c4 04             	add    $0x4,%esp$/;"	l
f01033d1	obj/kern/kernel.asm	/^f01033d1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	83 c0 1c             	add    $0x1c,%eax$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	c7 45 cc 1f 00 00 00 	movl   $0x1f,-0x34(%ebp)$/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	c7 45 d0 1e 00 00 00 	movl   $0x1e,-0x30(%ebp)$/;"	l
f01033e8	obj/kern/kernel.asm	/^f01033e8:	c7 45 d4 1f 00 00 00 	movl   $0x1f,-0x2c(%ebp)$/;"	l
f01033ef	obj/kern/kernel.asm	/^f01033ef:	c7 45 d8 1e 00 00 00 	movl   $0x1e,-0x28(%ebp)$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	c7 45 dc 1f 00 00 00 	movl   $0x1f,-0x24(%ebp)$/;"	l
f01033fd	obj/kern/kernel.asm	/^f01033fd:	c7 45 e0 1f 00 00 00 	movl   $0x1f,-0x20(%ebp)$/;"	l
f0103404	obj/kern/kernel.asm	/^f0103404:	c7 45 e4 1e 00 00 00 	movl   $0x1e,-0x1c(%ebp)$/;"	l
f010340b	obj/kern/kernel.asm	/^f010340b:	c7 45 e8 1f 00 00 00 	movl   $0x1f,-0x18(%ebp)$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	c7 45 ec 1e 00 00 00 	movl   $0x1e,-0x14(%ebp)$/;"	l
f0103419	obj/kern/kernel.asm	/^f0103419:	c7 45 f0 1f 00 00 00 	movl   $0x1f,-0x10(%ebp)$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423:	8b 48 10             	mov    0x10(%eax),%ecx$/;"	l
f0103426	obj/kern/kernel.asm	/^f0103426:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010342b	obj/kern/kernel.asm	/^f010342b:	eb 0d                	jmp    f010343a <timestamp+0xbd>$/;"	l
f010342d	obj/kern/kernel.asm	/^f010342d:	69 54 85 c4 80 51 01 	imul   $0x15180,-0x3c(%ebp,%eax,4),%edx$/;"	l
f0103434	obj/kern/kernel.asm	/^f0103434:	00 $/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	01 d3                	add    %edx,%ebx$/;"	l
f0103437	obj/kern/kernel.asm	/^f0103437:	83 c0 01             	add    $0x1,%eax$/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	39 c8                	cmp    %ecx,%eax$/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	7c ef                	jl     f010342d <timestamp+0xb0>$/;"	l
f010343e	obj/kern/kernel.asm	/^f010343e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	69 50 08 10 0e 00 00 	imul   $0xe10,0x8(%eax),%edx$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	69 40 0c 80 51 01 00 	imul   $0x15180,0xc(%eax),%eax$/;"	l
f010344f	obj/kern/kernel.asm	/^f010344f:	01 c2                	add    %eax,%edx$/;"	l
f0103451	obj/kern/kernel.asm	/^f0103451:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103454	obj/kern/kernel.asm	/^f0103454:	6b 40 04 3c          	imul   $0x3c,0x4(%eax),%eax$/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	01 d0                	add    %edx,%eax$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010345d	obj/kern/kernel.asm	/^f010345d:	03 07                	add    (%edi),%eax$/;"	l
f010345f	obj/kern/kernel.asm	/^f010345f:	01 d8                	add    %ebx,%eax$/;"	l
f0103461	obj/kern/kernel.asm	/^f0103461:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103464	obj/kern/kernel.asm	/^f0103464:	5b                   	pop    %ebx$/;"	l
f0103465	obj/kern/kernel.asm	/^f0103465:	5e                   	pop    %esi$/;"	l
f0103466	obj/kern/kernel.asm	/^f0103466:	5f                   	pop    %edi$/;"	l
f0103467	obj/kern/kernel.asm	/^f0103467:	5d                   	pop    %ebp$/;"	l
f0103468	obj/kern/kernel.asm	/^f0103468:	c3                   	ret    $/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469 <mktime>:$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	55                   	push   %ebp$/;"	l
f010346a	obj/kern/kernel.asm	/^f010346a:	89 e5                	mov    %esp,%ebp$/;"	l
f010346c	obj/kern/kernel.asm	/^f010346c:	57                   	push   %edi$/;"	l
f010346d	obj/kern/kernel.asm	/^f010346d:	56                   	push   %esi$/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	53                   	push   %ebx$/;"	l
f010346f	obj/kern/kernel.asm	/^f010346f:	83 ec 30             	sub    $0x30,%esp$/;"	l
f0103472	obj/kern/kernel.asm	/^f0103472:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	be 46 00 00 00       	mov    $0x46,%esi$/;"	l
f010347d	obj/kern/kernel.asm	/^f010347d:	eb 05                	jmp    f0103484 <mktime+0x1b>$/;"	l
f010347f	obj/kern/kernel.asm	/^f010347f:	29 d3                	sub    %edx,%ebx$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	83 c6 01             	add    $0x1,%esi$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	8d 86 6c 07 00 00    	lea    0x76c(%esi),%eax$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	50                   	push   %eax$/;"	l
f010348b	obj/kern/kernel.asm	/^f010348b:	e8 8c fe ff ff       	call   f010331c <is_leap_year>$/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103493	obj/kern/kernel.asm	/^f0103493:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	8d 90 6d 01 00 00    	lea    0x16d(%eax),%edx$/;"	l
f010349c	obj/kern/kernel.asm	/^f010349c:	69 d2 80 51 01 00    	imul   $0x15180,%edx,%edx$/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	39 d3                	cmp    %edx,%ebx$/;"	l
f01034a4	obj/kern/kernel.asm	/^f01034a4:	7f d9                	jg     f010347f <mktime+0x16>$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	89 77 14             	mov    %esi,0x14(%edi)$/;"	l
f01034a9	obj/kern/kernel.asm	/^f01034a9:	c7 45 c4 1f 00 00 00 	movl   $0x1f,-0x3c(%ebp)$/;"	l
f01034b0	obj/kern/kernel.asm	/^f01034b0:	83 c0 1c             	add    $0x1c,%eax$/;"	l
f01034b3	obj/kern/kernel.asm	/^f01034b3:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	c7 45 cc 1f 00 00 00 	movl   $0x1f,-0x34(%ebp)$/;"	l
f01034bd	obj/kern/kernel.asm	/^f01034bd:	c7 45 d0 1e 00 00 00 	movl   $0x1e,-0x30(%ebp)$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	c7 45 d4 1f 00 00 00 	movl   $0x1f,-0x2c(%ebp)$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	c7 45 d8 1e 00 00 00 	movl   $0x1e,-0x28(%ebp)$/;"	l
f01034d2	obj/kern/kernel.asm	/^f01034d2:	c7 45 dc 1f 00 00 00 	movl   $0x1f,-0x24(%ebp)$/;"	l
f01034d9	obj/kern/kernel.asm	/^f01034d9:	c7 45 e0 1f 00 00 00 	movl   $0x1f,-0x20(%ebp)$/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0:	c7 45 e4 1e 00 00 00 	movl   $0x1e,-0x1c(%ebp)$/;"	l
f01034e7	obj/kern/kernel.asm	/^f01034e7:	c7 45 e8 1f 00 00 00 	movl   $0x1f,-0x18(%ebp)$/;"	l
f01034ee	obj/kern/kernel.asm	/^f01034ee:	c7 45 ec 1e 00 00 00 	movl   $0x1e,-0x14(%ebp)$/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5:	c7 45 f0 1f 00 00 00 	movl   $0x1f,-0x10(%ebp)$/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	eb 05                	jmp    f0103508 <mktime+0x9f>$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	29 d3                	sub    %edx,%ebx$/;"	l
f0103505	obj/kern/kernel.asm	/^f0103505:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	69 54 85 c4 80 51 01 	imul   $0x15180,-0x3c(%ebp,%eax,4),%edx$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	00 $/;"	l
f0103510	obj/kern/kernel.asm	/^f0103510:	39 d3                	cmp    %edx,%ebx$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	7f ef                	jg     f0103503 <mktime+0x9a>$/;"	l
f0103514	obj/kern/kernel.asm	/^f0103514:	89 47 10             	mov    %eax,0x10(%edi)$/;"	l
f0103517	obj/kern/kernel.asm	/^f0103517:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	eb 09                	jmp    f0103527 <mktime+0xbe>$/;"	l
f010351e	obj/kern/kernel.asm	/^f010351e:	81 eb 80 51 01 00    	sub    $0x15180,%ebx$/;"	l
f0103524	obj/kern/kernel.asm	/^f0103524:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103527	obj/kern/kernel.asm	/^f0103527:	81 fb 80 51 01 00    	cmp    $0x15180,%ebx$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	7f ef                	jg     f010351e <mktime+0xb5>$/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f:	89 47 0c             	mov    %eax,0xc(%edi)$/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	eb 09                	jmp    f0103542 <mktime+0xd9>$/;"	l
f0103539	obj/kern/kernel.asm	/^f0103539:	81 eb 10 0e 00 00    	sub    $0xe10,%ebx$/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542:	81 fb 0f 0e 00 00    	cmp    $0xe0f,%ebx$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	7f ef                	jg     f0103539 <mktime+0xd0>$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	89 47 08             	mov    %eax,0x8(%edi)$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103552	obj/kern/kernel.asm	/^f0103552:	eb 06                	jmp    f010355a <mktime+0xf1>$/;"	l
f0103554	obj/kern/kernel.asm	/^f0103554:	83 eb 3c             	sub    $0x3c,%ebx$/;"	l
f0103557	obj/kern/kernel.asm	/^f0103557:	83 c0 01             	add    $0x1,%eax$/;"	l
f010355a	obj/kern/kernel.asm	/^f010355a:	83 fb 3b             	cmp    $0x3b,%ebx$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	7f f5                	jg     f0103554 <mktime+0xeb>$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f0103562	obj/kern/kernel.asm	/^f0103562:	89 1f                	mov    %ebx,(%edi)$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103567	obj/kern/kernel.asm	/^f0103567:	5b                   	pop    %ebx$/;"	l
f0103568	obj/kern/kernel.asm	/^f0103568:	5e                   	pop    %esi$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	5f                   	pop    %edi$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	5d                   	pop    %ebp$/;"	l
f010356b	obj/kern/kernel.asm	/^f010356b:	c3                   	ret    $/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c <print_datetime>:$/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c:	55                   	push   %ebp$/;"	l
f010356d	obj/kern/kernel.asm	/^f010356d:	89 e5                	mov    %esp,%ebp$/;"	l
f010356f	obj/kern/kernel.asm	/^f010356f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103572	obj/kern/kernel.asm	/^f0103572:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	ff 30                	pushl  (%eax)$/;"	l
f0103577	obj/kern/kernel.asm	/^f0103577:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f010357a	obj/kern/kernel.asm	/^f010357a:	ff 70 08             	pushl  0x8(%eax)$/;"	l
f010357d	obj/kern/kernel.asm	/^f010357d:	ff 70 0c             	pushl  0xc(%eax)$/;"	l
f0103580	obj/kern/kernel.asm	/^f0103580:	8b 48 10             	mov    0x10(%eax),%ecx$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	52                   	push   %edx$/;"	l
f0103587	obj/kern/kernel.asm	/^f0103587:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	05 6c 07 00 00       	add    $0x76c,%eax$/;"	l
f010358f	obj/kern/kernel.asm	/^f010358f:	50                   	push   %eax$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	68 b8 72 10 f0       	push   $0xf01072b8$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	e8 23 05 00 00       	call   f0103abd <cprintf>$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010359d	obj/kern/kernel.asm	/^f010359d:	c9                   	leave  $/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	c3                   	ret    $/;"	l
f010359f	obj/kern/kernel.asm	/^f010359f <snprint_datetime>:$/;"	l
f010359f	obj/kern/kernel.asm	/^f010359f:	55                   	push   %ebp$/;"	l
f01035a0	obj/kern/kernel.asm	/^f01035a0:	89 e5                	mov    %esp,%ebp$/;"	l
f01035a2	obj/kern/kernel.asm	/^f01035a2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01035a5	obj/kern/kernel.asm	/^f01035a5:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01035a8	obj/kern/kernel.asm	/^f01035a8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	83 f9 13             	cmp    $0x13,%ecx$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	7f 16                	jg     f01035c6 <snprint_datetime+0x27>$/;"	l
f01035b0	obj/kern/kernel.asm	/^f01035b0:	68 d7 72 10 f0       	push   $0xf01072d7$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f01035ba	obj/kern/kernel.asm	/^f01035ba:	6a 60                	push   $0x60$/;"	l
f01035bc	obj/kern/kernel.asm	/^f01035bc:	68 ee 72 10 f0       	push   $0xf01072ee$/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	e8 2a cb ff ff       	call   f01000f0 <_panic>$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	ff 30                	pushl  (%eax)$/;"	l
f01035cb	obj/kern/kernel.asm	/^f01035cb:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	ff 70 08             	pushl  0x8(%eax)$/;"	l
f01035d1	obj/kern/kernel.asm	/^f01035d1:	ff 70 0c             	pushl  0xc(%eax)$/;"	l
f01035d4	obj/kern/kernel.asm	/^f01035d4:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	52                   	push   %edx$/;"	l
f01035db	obj/kern/kernel.asm	/^f01035db:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	05 6c 07 00 00       	add    $0x76c,%eax$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	50                   	push   %eax$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	68 fb 72 10 f0       	push   $0xf01072fb$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	51                   	push   %ecx$/;"	l
f01035ea	obj/kern/kernel.asm	/^f01035ea:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01035ed	obj/kern/kernel.asm	/^f01035ed:	e8 56 1f 00 00       	call   f0105548 <snprintf>$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	83 c4 30             	add    $0x30,%esp$/;"	l
f01035f5	obj/kern/kernel.asm	/^f01035f5:	c9                   	leave  $/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	c3                   	ret    $/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7 <gettime>:$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7:	55                   	push   %ebp$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	57                   	push   %edi$/;"	l
f01035fb	obj/kern/kernel.asm	/^f01035fb:	56                   	push   %esi$/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc:	53                   	push   %ebx$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	83 ec 44             	sub    $0x44,%esp$/;"	l
f0103600	obj/kern/kernel.asm	/^f0103600:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	ec                   	in     (%dx),%al$/;"	l
f0103606	obj/kern/kernel.asm	/^f0103606:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0103609	obj/kern/kernel.asm	/^f0103609:	ee                   	out    %al,(%dx)$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	b9 70 00 00 00       	mov    $0x70,%ecx$/;"	l
f0103614	obj/kern/kernel.asm	/^f0103614:	89 d8                	mov    %ebx,%eax$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	89 ca                	mov    %ecx,%edx$/;"	l
f0103618	obj/kern/kernel.asm	/^f0103618:	ee                   	out    %al,(%dx)$/;"	l
f0103619	obj/kern/kernel.asm	/^f0103619:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	ec                   	in     (%dx),%al$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	84 c0                	test   %al,%al$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	78 f1                	js     f0103614 <gettime+0x1d>$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	ee                   	out    %al,(%dx)$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	b9 71 00 00 00       	mov    $0x71,%ecx$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	89 ca                	mov    %ecx,%edx$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	ec                   	in     (%dx),%al$/;"	l
f0103636	obj/kern/kernel.asm	/^f0103636:	88 45 d0             	mov    %al,-0x30(%ebp)$/;"	l
f0103639	obj/kern/kernel.asm	/^f0103639:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010363e	obj/kern/kernel.asm	/^f010363e:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	ee                   	out    %al,(%dx)$/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	89 ca                	mov    %ecx,%edx$/;"	l
f0103646	obj/kern/kernel.asm	/^f0103646:	ec                   	in     (%dx),%al$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	88 45 ce             	mov    %al,-0x32(%ebp)$/;"	l
f010364a	obj/kern/kernel.asm	/^f010364a:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010364f	obj/kern/kernel.asm	/^f010364f:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	ee                   	out    %al,(%dx)$/;"	l
f0103655	obj/kern/kernel.asm	/^f0103655:	89 ca                	mov    %ecx,%edx$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	ec                   	in     (%dx),%al$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	88 45 cd             	mov    %al,-0x33(%ebp)$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103660	obj/kern/kernel.asm	/^f0103660:	b8 07 00 00 00       	mov    $0x7,%eax$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	ee                   	out    %al,(%dx)$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	89 ca                	mov    %ecx,%edx$/;"	l
f0103668	obj/kern/kernel.asm	/^f0103668:	ec                   	in     (%dx),%al$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	88 45 cc             	mov    %al,-0x34(%ebp)$/;"	l
f010366c	obj/kern/kernel.asm	/^f010366c:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103671	obj/kern/kernel.asm	/^f0103671:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	ee                   	out    %al,(%dx)$/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	89 ca                	mov    %ecx,%edx$/;"	l
f0103679	obj/kern/kernel.asm	/^f0103679:	ec                   	in     (%dx),%al$/;"	l
f010367a	obj/kern/kernel.asm	/^f010367a:	88 45 cb             	mov    %al,-0x35(%ebp)$/;"	l
f010367d	obj/kern/kernel.asm	/^f010367d:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	b8 09 00 00 00       	mov    $0x9,%eax$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	ee                   	out    %al,(%dx)$/;"	l
f0103688	obj/kern/kernel.asm	/^f0103688:	89 ca                	mov    %ecx,%edx$/;"	l
f010368a	obj/kern/kernel.asm	/^f010368a:	ec                   	in     (%dx),%al$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010368e	obj/kern/kernel.asm	/^f010368e:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	bf 70 00 00 00       	mov    $0x70,%edi$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	be 71 00 00 00       	mov    $0x71,%esi$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	eb 6a                	jmp    f0103707 <gettime+0x110>$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	88 45 cb             	mov    %al,-0x35(%ebp)$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	0f b6 45 d2          	movzbl -0x2e(%ebp),%eax$/;"	l
f01036ab	obj/kern/kernel.asm	/^f01036ab:	88 45 cc             	mov    %al,-0x34(%ebp)$/;"	l
f01036ae	obj/kern/kernel.asm	/^f01036ae:	0f b6 45 cf          	movzbl -0x31(%ebp),%eax$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	88 45 cd             	mov    %al,-0x33(%ebp)$/;"	l
f01036b5	obj/kern/kernel.asm	/^f01036b5:	0f b6 45 d3          	movzbl -0x2d(%ebp),%eax$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	88 45 ce             	mov    %al,-0x32(%ebp)$/;"	l
f01036bc	obj/kern/kernel.asm	/^f01036bc:	88 5d d0             	mov    %bl,-0x30(%ebp)$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	eb 46                	jmp    f0103707 <gettime+0x110>$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
f01036c8	obj/kern/kernel.asm	/^f01036c8:	88 45 cb             	mov    %al,-0x35(%ebp)$/;"	l
f01036cb	obj/kern/kernel.asm	/^f01036cb:	0f b6 45 d2          	movzbl -0x2e(%ebp),%eax$/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	88 45 cc             	mov    %al,-0x34(%ebp)$/;"	l
f01036d2	obj/kern/kernel.asm	/^f01036d2:	0f b6 45 cf          	movzbl -0x31(%ebp),%eax$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	88 45 cd             	mov    %al,-0x33(%ebp)$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	0f b6 45 d3          	movzbl -0x2d(%ebp),%eax$/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	88 45 ce             	mov    %al,-0x32(%ebp)$/;"	l
f01036e0	obj/kern/kernel.asm	/^f01036e0:	88 5d d0             	mov    %bl,-0x30(%ebp)$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	eb 22                	jmp    f0103707 <gettime+0x110>$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
f01036e8	obj/kern/kernel.asm	/^f01036e8:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	88 45 cb             	mov    %al,-0x35(%ebp)$/;"	l
f01036ef	obj/kern/kernel.asm	/^f01036ef:	0f b6 45 d2          	movzbl -0x2e(%ebp),%eax$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	88 45 cc             	mov    %al,-0x34(%ebp)$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	0f b6 45 cf          	movzbl -0x31(%ebp),%eax$/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	88 45 cd             	mov    %al,-0x33(%ebp)$/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	0f b6 45 d3          	movzbl -0x2d(%ebp),%eax$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	88 45 ce             	mov    %al,-0x32(%ebp)$/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704:	88 5d d0             	mov    %bl,-0x30(%ebp)$/;"	l
f0103707	obj/kern/kernel.asm	/^f0103707:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f010370c	obj/kern/kernel.asm	/^f010370c:	89 c8                	mov    %ecx,%eax$/;"	l
f010370e	obj/kern/kernel.asm	/^f010370e:	89 fa                	mov    %edi,%edx$/;"	l
f0103710	obj/kern/kernel.asm	/^f0103710:	ee                   	out    %al,(%dx)$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	89 f2                	mov    %esi,%edx$/;"	l
f0103713	obj/kern/kernel.asm	/^f0103713:	ec                   	in     (%dx),%al$/;"	l
f0103714	obj/kern/kernel.asm	/^f0103714:	84 c0                	test   %al,%al$/;"	l
f0103716	obj/kern/kernel.asm	/^f0103716:	78 f4                	js     f010370c <gettime+0x115>$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010371d	obj/kern/kernel.asm	/^f010371d:	89 fa                	mov    %edi,%edx$/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	ee                   	out    %al,(%dx)$/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	89 f2                	mov    %esi,%edx$/;"	l
f0103722	obj/kern/kernel.asm	/^f0103722:	ec                   	in     (%dx),%al$/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723:	89 c3                	mov    %eax,%ebx$/;"	l
f0103725	obj/kern/kernel.asm	/^f0103725:	88 45 b6             	mov    %al,-0x4a(%ebp)$/;"	l
f0103728	obj/kern/kernel.asm	/^f0103728:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f010372d	obj/kern/kernel.asm	/^f010372d:	89 fa                	mov    %edi,%edx$/;"	l
f010372f	obj/kern/kernel.asm	/^f010372f:	ee                   	out    %al,(%dx)$/;"	l
f0103730	obj/kern/kernel.asm	/^f0103730:	89 f2                	mov    %esi,%edx$/;"	l
f0103732	obj/kern/kernel.asm	/^f0103732:	ec                   	in     (%dx),%al$/;"	l
f0103733	obj/kern/kernel.asm	/^f0103733:	88 45 d3             	mov    %al,-0x2d(%ebp)$/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	88 45 b7             	mov    %al,-0x49(%ebp)$/;"	l
f0103739	obj/kern/kernel.asm	/^f0103739:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	89 fa                	mov    %edi,%edx$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	ee                   	out    %al,(%dx)$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	89 f2                	mov    %esi,%edx$/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	ec                   	in     (%dx),%al$/;"	l
f0103744	obj/kern/kernel.asm	/^f0103744:	88 45 cf             	mov    %al,-0x31(%ebp)$/;"	l
f0103747	obj/kern/kernel.asm	/^f0103747:	89 c1                	mov    %eax,%ecx$/;"	l
f0103749	obj/kern/kernel.asm	/^f0103749:	88 45 c8             	mov    %al,-0x38(%ebp)$/;"	l
f010374c	obj/kern/kernel.asm	/^f010374c:	b8 07 00 00 00       	mov    $0x7,%eax$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	89 fa                	mov    %edi,%edx$/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753:	ee                   	out    %al,(%dx)$/;"	l
f0103754	obj/kern/kernel.asm	/^f0103754:	89 f2                	mov    %esi,%edx$/;"	l
f0103756	obj/kern/kernel.asm	/^f0103756:	ec                   	in     (%dx),%al$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	88 45 d2             	mov    %al,-0x2e(%ebp)$/;"	l
f010375a	obj/kern/kernel.asm	/^f010375a:	88 45 c9             	mov    %al,-0x37(%ebp)$/;"	l
f010375d	obj/kern/kernel.asm	/^f010375d:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0103762	obj/kern/kernel.asm	/^f0103762:	89 fa                	mov    %edi,%edx$/;"	l
f0103764	obj/kern/kernel.asm	/^f0103764:	ee                   	out    %al,(%dx)$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	89 f2                	mov    %esi,%edx$/;"	l
f0103767	obj/kern/kernel.asm	/^f0103767:	ec                   	in     (%dx),%al$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
f010376b	obj/kern/kernel.asm	/^f010376b:	88 45 ca             	mov    %al,-0x36(%ebp)$/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	b8 09 00 00 00       	mov    $0x9,%eax$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	89 fa                	mov    %edi,%edx$/;"	l
f0103775	obj/kern/kernel.asm	/^f0103775:	ee                   	out    %al,(%dx)$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	89 f2                	mov    %esi,%edx$/;"	l
f0103778	obj/kern/kernel.asm	/^f0103778:	ec                   	in     (%dx),%al$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	88 45 b8             	mov    %al,-0x48(%ebp)$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010377f	obj/kern/kernel.asm	/^f010377f:	38 5d d0             	cmp    %bl,-0x30(%ebp)$/;"	l
f0103782	obj/kern/kernel.asm	/^f0103782:	0f 85 15 ff ff ff    	jne    f010369d <gettime+0xa6>$/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	0f b6 55 d3          	movzbl -0x2d(%ebp),%edx$/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c:	38 55 ce             	cmp    %dl,-0x32(%ebp)$/;"	l
f010378f	obj/kern/kernel.asm	/^f010378f:	0f 85 08 ff ff ff    	jne    f010369d <gettime+0xa6>$/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	38 4d cd             	cmp    %cl,-0x33(%ebp)$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	0f 95 45 d0          	setne  -0x30(%ebp)$/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	0f b6 4d d0          	movzbl -0x30(%ebp),%ecx$/;"	l
f01037a0	obj/kern/kernel.asm	/^f01037a0:	0f b6 55 d2          	movzbl -0x2e(%ebp),%edx$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	38 55 cc             	cmp    %dl,-0x34(%ebp)$/;"	l
f01037a7	obj/kern/kernel.asm	/^f01037a7:	0f 95 c2             	setne  %dl$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	08 d1                	or     %dl,%cl$/;"	l
f01037ac	obj/kern/kernel.asm	/^f01037ac:	0f 85 0f ff ff ff    	jne    f01036c1 <gettime+0xca>$/;"	l
f01037b2	obj/kern/kernel.asm	/^f01037b2:	0f b6 55 d1          	movzbl -0x2f(%ebp),%edx$/;"	l
f01037b6	obj/kern/kernel.asm	/^f01037b6:	38 55 cb             	cmp    %dl,-0x35(%ebp)$/;"	l
f01037b9	obj/kern/kernel.asm	/^f01037b9:	0f 85 02 ff ff ff    	jne    f01036c1 <gettime+0xca>$/;"	l
f01037bf	obj/kern/kernel.asm	/^f01037bf:	0f b6 55 b0          	movzbl -0x50(%ebp),%edx$/;"	l
f01037c3	obj/kern/kernel.asm	/^f01037c3:	39 c2                	cmp    %eax,%edx$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	0f 85 1a ff ff ff    	jne    f01036e5 <gettime+0xee>$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f01037ce	obj/kern/kernel.asm	/^f01037ce:	8d 0c 80             	lea    (%eax,%eax,4),%ecx$/;"	l
f01037d1	obj/kern/kernel.asm	/^f01037d1:	89 d8                	mov    %ebx,%eax$/;"	l
f01037d3	obj/kern/kernel.asm	/^f01037d3:	89 da                	mov    %ebx,%edx$/;"	l
f01037d5	obj/kern/kernel.asm	/^f01037d5:	c0 ea 04             	shr    $0x4,%dl$/;"	l
f01037d8	obj/kern/kernel.asm	/^f01037d8:	8d 14 92             	lea    (%edx,%edx,4),%edx$/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db:	83 e0 0f             	and    $0xf,%eax$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	8d 04 50             	lea    (%eax,%edx,2),%eax$/;"	l
f01037e1	obj/kern/kernel.asm	/^f01037e1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01037e4	obj/kern/kernel.asm	/^f01037e4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01037e7	obj/kern/kernel.asm	/^f01037e7:	0f b6 55 b7          	movzbl -0x49(%ebp),%edx$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	89 d0                	mov    %edx,%eax$/;"	l
f01037ed	obj/kern/kernel.asm	/^f01037ed:	c0 e8 04             	shr    $0x4,%al$/;"	l
f01037f0	obj/kern/kernel.asm	/^f01037f0:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01037f3	obj/kern/kernel.asm	/^f01037f3:	83 e2 0f             	and    $0xf,%edx$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	8d 04 42             	lea    (%edx,%eax,2),%eax$/;"	l
f01037f9	obj/kern/kernel.asm	/^f01037f9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01037ff	obj/kern/kernel.asm	/^f01037ff:	0f b6 5d c8          	movzbl -0x38(%ebp),%ebx$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	89 d8                	mov    %ebx,%eax$/;"	l
f0103805	obj/kern/kernel.asm	/^f0103805:	83 e0 70             	and    $0x70,%eax$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	c1 f8 04             	sar    $0x4,%eax$/;"	l
f010380b	obj/kern/kernel.asm	/^f010380b:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010380e	obj/kern/kernel.asm	/^f010380e:	89 da                	mov    %ebx,%edx$/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810:	83 e2 0f             	and    $0xf,%edx$/;"	l
f0103813	obj/kern/kernel.asm	/^f0103813:	8d 04 42             	lea    (%edx,%eax,2),%eax$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	89 da                	mov    %ebx,%edx$/;"	l
f0103818	obj/kern/kernel.asm	/^f0103818:	83 e2 80             	and    $0xffffff80,%edx$/;"	l
f010381b	obj/kern/kernel.asm	/^f010381b:	09 d0                	or     %edx,%eax$/;"	l
f010381d	obj/kern/kernel.asm	/^f010381d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103820	obj/kern/kernel.asm	/^f0103820:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	0f b6 5d c9          	movzbl -0x37(%ebp),%ebx$/;"	l
f0103827	obj/kern/kernel.asm	/^f0103827:	89 d8                	mov    %ebx,%eax$/;"	l
f0103829	obj/kern/kernel.asm	/^f0103829:	c0 e8 04             	shr    $0x4,%al$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	89 d8                	mov    %ebx,%eax$/;"	l
f0103831	obj/kern/kernel.asm	/^f0103831:	83 e0 0f             	and    $0xf,%eax$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	8d 04 50             	lea    (%eax,%edx,2),%eax$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010383a	obj/kern/kernel.asm	/^f010383a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f010383d	obj/kern/kernel.asm	/^f010383d:	0f b6 5d ca          	movzbl -0x36(%ebp),%ebx$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	89 d8                	mov    %ebx,%eax$/;"	l
f0103843	obj/kern/kernel.asm	/^f0103843:	c0 e8 04             	shr    $0x4,%al$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0103849	obj/kern/kernel.asm	/^f0103849:	89 d8                	mov    %ebx,%eax$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	83 e0 0f             	and    $0xf,%eax$/;"	l
f010384e	obj/kern/kernel.asm	/^f010384e:	8d 04 50             	lea    (%eax,%edx,2),%eax$/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103857	obj/kern/kernel.asm	/^f0103857:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010385a	obj/kern/kernel.asm	/^f010385a:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
f010385d	obj/kern/kernel.asm	/^f010385d:	83 e0 0f             	and    $0xf,%eax$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	8d 04 48             	lea    (%eax,%ecx,2),%eax$/;"	l
f0103863	obj/kern/kernel.asm	/^f0103863:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	50                   	push   %eax$/;"	l
f010386a	obj/kern/kernel.asm	/^f010386a:	e8 0e fb ff ff       	call   f010337d <timestamp>$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103872	obj/kern/kernel.asm	/^f0103872:	89 c1                	mov    %eax,%ecx$/;"	l
f0103874	obj/kern/kernel.asm	/^f0103874:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103879	obj/kern/kernel.asm	/^f0103879:	ec                   	in     (%dx),%al$/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010387d	obj/kern/kernel.asm	/^f010387d:	ee                   	out    %al,(%dx)$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	89 c8                	mov    %ecx,%eax$/;"	l
f0103880	obj/kern/kernel.asm	/^f0103880:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	5b                   	pop    %ebx$/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	5e                   	pop    %esi$/;"	l
f0103885	obj/kern/kernel.asm	/^f0103885:	5f                   	pop    %edi$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	5d                   	pop    %ebp$/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	c3                   	ret    $/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888 <rtc_init>:$/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888:	55                   	push   %ebp$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	89 e5                	mov    %esp,%ebp$/;"	l
f010388b	obj/kern/kernel.asm	/^f010388b:	56                   	push   %esi$/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	53                   	push   %ebx$/;"	l
f010388d	obj/kern/kernel.asm	/^f010388d:	bb 70 00 00 00       	mov    $0x70,%ebx$/;"	l
f0103892	obj/kern/kernel.asm	/^f0103892:	89 da                	mov    %ebx,%edx$/;"	l
f0103894	obj/kern/kernel.asm	/^f0103894:	ec                   	in     (%dx),%al$/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0103898	obj/kern/kernel.asm	/^f0103898:	ee                   	out    %al,(%dx)$/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	b8 0b 00 00 00       	mov    $0xb,%eax$/;"	l
f010389e	obj/kern/kernel.asm	/^f010389e:	ee                   	out    %al,(%dx)$/;"	l
f010389f	obj/kern/kernel.asm	/^f010389f:	b9 71 00 00 00       	mov    $0x71,%ecx$/;"	l
f01038a4	obj/kern/kernel.asm	/^f01038a4:	89 ca                	mov    %ecx,%edx$/;"	l
f01038a6	obj/kern/kernel.asm	/^f01038a6:	ec                   	in     (%dx),%al$/;"	l
f01038a7	obj/kern/kernel.asm	/^f01038a7:	89 c6                	mov    %eax,%esi$/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	b8 0b 00 00 00       	mov    $0xb,%eax$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	ee                   	out    %al,(%dx)$/;"	l
f01038b4	obj/kern/kernel.asm	/^f01038b4:	89 f0                	mov    %esi,%eax$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	83 c8 40             	or     $0x40,%eax$/;"	l
f01038b9	obj/kern/kernel.asm	/^f01038b9:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	ee                   	out    %al,(%dx)$/;"	l
f01038bf	obj/kern/kernel.asm	/^f01038bf:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01038c4	obj/kern/kernel.asm	/^f01038c4:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01038c9	obj/kern/kernel.asm	/^f01038c9:	ee                   	out    %al,(%dx)$/;"	l
f01038ca	obj/kern/kernel.asm	/^f01038ca:	89 ca                	mov    %ecx,%edx$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	ec                   	in     (%dx),%al$/;"	l
f01038cd	obj/kern/kernel.asm	/^f01038cd:	89 c1                	mov    %eax,%ecx$/;"	l
f01038cf	obj/kern/kernel.asm	/^f01038cf:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01038d4	obj/kern/kernel.asm	/^f01038d4:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	ee                   	out    %al,(%dx)$/;"	l
f01038da	obj/kern/kernel.asm	/^f01038da:	89 c8                	mov    %ecx,%eax$/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	83 c8 0f             	or     $0xf,%eax$/;"	l
f01038df	obj/kern/kernel.asm	/^f01038df:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f01038e4	obj/kern/kernel.asm	/^f01038e4:	ee                   	out    %al,(%dx)$/;"	l
f01038e5	obj/kern/kernel.asm	/^f01038e5:	8b 35 24 80 41 f0    	mov    0xf0418024,%esi$/;"	l
f01038eb	obj/kern/kernel.asm	/^f01038eb:	e8 07 fd ff ff       	call   f01035f7 <gettime>$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	89 06                	mov    %eax,(%esi)$/;"	l
f01038f2	obj/kern/kernel.asm	/^f01038f2:	89 da                	mov    %ebx,%edx$/;"	l
f01038f4	obj/kern/kernel.asm	/^f01038f4:	ec                   	in     (%dx),%al$/;"	l
f01038f5	obj/kern/kernel.asm	/^f01038f5:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	ee                   	out    %al,(%dx)$/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	5b                   	pop    %ebx$/;"	l
f01038fa	obj/kern/kernel.asm	/^f01038fa:	5e                   	pop    %esi$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	5d                   	pop    %ebp$/;"	l
f01038fc	obj/kern/kernel.asm	/^f01038fc:	c3                   	ret    $/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd <rtc_check_status>:$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	55                   	push   %ebp$/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	ee                   	out    %al,(%dx)$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	ec                   	in     (%dx),%al$/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	5d                   	pop    %ebp$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	c3                   	ret    $/;"	l
f0103913	obj/kern/kernel.asm	/^f0103913 <mc146818_read>:$/;"	l
f0103913	obj/kern/kernel.asm	/^f0103913:	55                   	push   %ebp$/;"	l
f0103914	obj/kern/kernel.asm	/^f0103914:	89 e5                	mov    %esp,%ebp$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010391b	obj/kern/kernel.asm	/^f010391b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	ee                   	out    %al,(%dx)$/;"	l
f010391f	obj/kern/kernel.asm	/^f010391f:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	ec                   	in     (%dx),%al$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103928	obj/kern/kernel.asm	/^f0103928:	5d                   	pop    %ebp$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	c3                   	ret    $/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a <mc146818_write>:$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	55                   	push   %ebp$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	89 e5                	mov    %esp,%ebp$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103932	obj/kern/kernel.asm	/^f0103932:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103935	obj/kern/kernel.asm	/^f0103935:	ee                   	out    %al,(%dx)$/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010393b	obj/kern/kernel.asm	/^f010393b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010393e	obj/kern/kernel.asm	/^f010393e:	ee                   	out    %al,(%dx)$/;"	l
f010393f	obj/kern/kernel.asm	/^f010393f:	5d                   	pop    %ebp$/;"	l
f0103940	obj/kern/kernel.asm	/^f0103940:	c3                   	ret    $/;"	l
f0103941	obj/kern/kernel.asm	/^f0103941 <irq_setmask_8259A>:$/;"	l
f0103941	obj/kern/kernel.asm	/^f0103941:	55                   	push   %ebp$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	89 e5                	mov    %esp,%ebp$/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944:	56                   	push   %esi$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	53                   	push   %ebx$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103949	obj/kern/kernel.asm	/^f0103949:	66 a3 50 23 12 f0    	mov    %ax,0xf0122350$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	80 3d 34 23 41 f0 00 	cmpb   $0x0,0xf0412334$/;"	l
f0103956	obj/kern/kernel.asm	/^f0103956:	74 5a                	je     f01039b2 <irq_setmask_8259A+0x71>$/;"	l
f0103958	obj/kern/kernel.asm	/^f0103958:	89 c6                	mov    %eax,%esi$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	ee                   	out    %al,(%dx)$/;"	l
f0103960	obj/kern/kernel.asm	/^f0103960:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103964	obj/kern/kernel.asm	/^f0103964:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103969	obj/kern/kernel.asm	/^f0103969:	ee                   	out    %al,(%dx)$/;"	l
f010396a	obj/kern/kernel.asm	/^f010396a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	68 19 73 10 f0       	push   $0xf0107319$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	e8 46 01 00 00       	call   f0103abd <cprintf>$/;"	l
f0103977	obj/kern/kernel.asm	/^f0103977:	83 c4 10             	add    $0x10,%esp$/;"	l
f010397a	obj/kern/kernel.asm	/^f010397a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010397f	obj/kern/kernel.asm	/^f010397f:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103982	obj/kern/kernel.asm	/^f0103982:	f7 d6                	not    %esi$/;"	l
f0103984	obj/kern/kernel.asm	/^f0103984:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103987	obj/kern/kernel.asm	/^f0103987:	73 11                	jae    f010399a <irq_setmask_8259A+0x59>$/;"	l
f0103989	obj/kern/kernel.asm	/^f0103989:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010398c	obj/kern/kernel.asm	/^f010398c:	53                   	push   %ebx$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	68 e3 77 10 f0       	push   $0xf01077e3$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	e8 26 01 00 00       	call   f0103abd <cprintf>$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	83 c4 10             	add    $0x10,%esp$/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	75 e2                	jne    f0103984 <irq_setmask_8259A+0x43>$/;"	l
f01039a2	obj/kern/kernel.asm	/^f01039a2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	68 4e 6a 10 f0       	push   $0xf0106a4e$/;"	l
f01039aa	obj/kern/kernel.asm	/^f01039aa:	e8 0e 01 00 00       	call   f0103abd <cprintf>$/;"	l
f01039af	obj/kern/kernel.asm	/^f01039af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01039b2	obj/kern/kernel.asm	/^f01039b2:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	5b                   	pop    %ebx$/;"	l
f01039b6	obj/kern/kernel.asm	/^f01039b6:	5e                   	pop    %esi$/;"	l
f01039b7	obj/kern/kernel.asm	/^f01039b7:	5d                   	pop    %ebp$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	c3                   	ret    $/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9 <pic_init>:$/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	c6 05 34 23 41 f0 01 	movb   $0x1,0xf0412334$/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01039c5	obj/kern/kernel.asm	/^f01039c5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca:	ee                   	out    %al,(%dx)$/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	ee                   	out    %al,(%dx)$/;"	l
f01039d1	obj/kern/kernel.asm	/^f01039d1:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f01039d6	obj/kern/kernel.asm	/^f01039d6:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01039db	obj/kern/kernel.asm	/^f01039db:	ee                   	out    %al,(%dx)$/;"	l
f01039dc	obj/kern/kernel.asm	/^f01039dc:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01039e1	obj/kern/kernel.asm	/^f01039e1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	ee                   	out    %al,(%dx)$/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f01039ec	obj/kern/kernel.asm	/^f01039ec:	ee                   	out    %al,(%dx)$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	ee                   	out    %al,(%dx)$/;"	l
f01039f3	obj/kern/kernel.asm	/^f01039f3:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f01039f8	obj/kern/kernel.asm	/^f01039f8:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01039fd	obj/kern/kernel.asm	/^f01039fd:	ee                   	out    %al,(%dx)$/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103a03	obj/kern/kernel.asm	/^f0103a03:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103a08	obj/kern/kernel.asm	/^f0103a08:	ee                   	out    %al,(%dx)$/;"	l
f0103a09	obj/kern/kernel.asm	/^f0103a09:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103a0e	obj/kern/kernel.asm	/^f0103a0e:	ee                   	out    %al,(%dx)$/;"	l
f0103a0f	obj/kern/kernel.asm	/^f0103a0f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103a14	obj/kern/kernel.asm	/^f0103a14:	ee                   	out    %al,(%dx)$/;"	l
f0103a15	obj/kern/kernel.asm	/^f0103a15:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	ee                   	out    %al,(%dx)$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	ee                   	out    %al,(%dx)$/;"	l
f0103a26	obj/kern/kernel.asm	/^f0103a26:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	ee                   	out    %al,(%dx)$/;"	l
f0103a31	obj/kern/kernel.asm	/^f0103a31:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103a36	obj/kern/kernel.asm	/^f0103a36:	ee                   	out    %al,(%dx)$/;"	l
f0103a37	obj/kern/kernel.asm	/^f0103a37:	0f b7 05 50 23 12 f0 	movzwl 0xf0122350,%eax$/;"	l
f0103a3e	obj/kern/kernel.asm	/^f0103a3e:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	74 13                	je     f0103a57 <pic_init+0x9e>$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	55                   	push   %ebp$/;"	l
f0103a45	obj/kern/kernel.asm	/^f0103a45:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103a4d	obj/kern/kernel.asm	/^f0103a4d:	50                   	push   %eax$/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	e8 ee fe ff ff       	call   f0103941 <irq_setmask_8259A>$/;"	l
f0103a53	obj/kern/kernel.asm	/^f0103a53:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	c9                   	leave  $/;"	l
f0103a57	obj/kern/kernel.asm	/^f0103a57:	f3 c3                	repz ret $/;"	l
f0103a59	obj/kern/kernel.asm	/^f0103a59 <pic_send_eoi>:$/;"	l
f0103a59	obj/kern/kernel.asm	/^f0103a59:	55                   	push   %ebp$/;"	l
f0103a5a	obj/kern/kernel.asm	/^f0103a5a:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	80 7d 08 07          	cmpb   $0x7,0x8(%ebp)$/;"	l
f0103a60	obj/kern/kernel.asm	/^f0103a60:	76 0b                	jbe    f0103a6d <pic_send_eoi+0x14>$/;"	l
f0103a62	obj/kern/kernel.asm	/^f0103a62:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103a67	obj/kern/kernel.asm	/^f0103a67:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	ee                   	out    %al,(%dx)$/;"	l
f0103a6d	obj/kern/kernel.asm	/^f0103a6d:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103a72	obj/kern/kernel.asm	/^f0103a72:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103a77	obj/kern/kernel.asm	/^f0103a77:	ee                   	out    %al,(%dx)$/;"	l
f0103a78	obj/kern/kernel.asm	/^f0103a78:	5d                   	pop    %ebp$/;"	l
f0103a79	obj/kern/kernel.asm	/^f0103a79:	c3                   	ret    $/;"	l
f0103a7a	obj/kern/kernel.asm	/^f0103a7a <putch>:$/;"	l
f0103a7a	obj/kern/kernel.asm	/^f0103a7a:	55                   	push   %ebp$/;"	l
f0103a7b	obj/kern/kernel.asm	/^f0103a7b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a7d	obj/kern/kernel.asm	/^f0103a7d:	53                   	push   %ebx$/;"	l
f0103a7e	obj/kern/kernel.asm	/^f0103a7e:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103a81	obj/kern/kernel.asm	/^f0103a81:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103a87	obj/kern/kernel.asm	/^f0103a87:	e8 1c cc ff ff       	call   f01006a8 <cputchar>$/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	83 03 01             	addl   $0x1,(%ebx)$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a92	obj/kern/kernel.asm	/^f0103a92:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	c9                   	leave  $/;"	l
f0103a96	obj/kern/kernel.asm	/^f0103a96:	c3                   	ret    $/;"	l
f0103a97	obj/kern/kernel.asm	/^f0103a97 <vcprintf>:$/;"	l
f0103a97	obj/kern/kernel.asm	/^f0103a97:	55                   	push   %ebp$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103aaa	obj/kern/kernel.asm	/^f0103aaa:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	50                   	push   %eax$/;"	l
f0103aae	obj/kern/kernel.asm	/^f0103aae:	68 7a 3a 10 f0       	push   $0xf0103a7a$/;"	l
f0103ab3	obj/kern/kernel.asm	/^f0103ab3:	e8 95 16 00 00       	call   f010514d <vprintfmt>$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	c9                   	leave  $/;"	l
f0103abc	obj/kern/kernel.asm	/^f0103abc:	c3                   	ret    $/;"	l
f0103abd	obj/kern/kernel.asm	/^f0103abd <cprintf>:$/;"	l
f0103abd	obj/kern/kernel.asm	/^f0103abd:	55                   	push   %ebp$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103ac3	obj/kern/kernel.asm	/^f0103ac3:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103ac6	obj/kern/kernel.asm	/^f0103ac6:	50                   	push   %eax$/;"	l
f0103ac7	obj/kern/kernel.asm	/^f0103ac7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103aca	obj/kern/kernel.asm	/^f0103aca:	e8 c8 ff ff ff       	call   f0103a97 <vcprintf>$/;"	l
f0103acf	obj/kern/kernel.asm	/^f0103acf:	c9                   	leave  $/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	c3                   	ret    $/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1 <trap_init_percpu>:$/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	55                   	push   %ebp$/;"	l
f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	b8 60 2b 41 f0       	mov    $0xf0412b60,%eax$/;"	l
f0103ad9	obj/kern/kernel.asm	/^f0103ad9:	c7 05 64 2b 41 f0 00 	movl   $0xf0000000,0xf0412b64$/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	00 00 f0 $/;"	l
f0103ae3	obj/kern/kernel.asm	/^f0103ae3:	66 c7 05 68 2b 41 f0 	movw   $0x10,0xf0412b68$/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea:	10 00 $/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	66 c7 05 48 23 12 f0 	movw   $0x68,0xf0122348$/;"	l
f0103af3	obj/kern/kernel.asm	/^f0103af3:	68 00 $/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	66 a3 4a 23 12 f0    	mov    %ax,0xf012234a$/;"	l
f0103afb	obj/kern/kernel.asm	/^f0103afb:	89 c2                	mov    %eax,%edx$/;"	l
f0103afd	obj/kern/kernel.asm	/^f0103afd:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103b00	obj/kern/kernel.asm	/^f0103b00:	88 15 4c 23 12 f0    	mov    %dl,0xf012234c$/;"	l
f0103b06	obj/kern/kernel.asm	/^f0103b06:	c6 05 4e 23 12 f0 40 	movb   $0x40,0xf012234e$/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0103b10	obj/kern/kernel.asm	/^f0103b10:	a2 4f 23 12 f0       	mov    %al,0xf012234f$/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	c6 05 4d 23 12 f0 89 	movb   $0x89,0xf012234d$/;"	l
f0103b1c	obj/kern/kernel.asm	/^f0103b1c:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	0f 00 d8             	ltr    %ax$/;"	l
f0103b24	obj/kern/kernel.asm	/^f0103b24:	b8 54 23 12 f0       	mov    $0xf0122354,%eax$/;"	l
f0103b29	obj/kern/kernel.asm	/^f0103b29:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103b2c	obj/kern/kernel.asm	/^f0103b2c:	5d                   	pop    %ebp$/;"	l
f0103b2d	obj/kern/kernel.asm	/^f0103b2d:	c3                   	ret    $/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e <trap_init>:$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	55                   	push   %ebp$/;"	l
f0103b2f	obj/kern/kernel.asm	/^f0103b2f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	b8 cc 43 10 f0       	mov    $0xf01043cc,%eax$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	66 a3 40 23 41 f0    	mov    %ax,0xf0412340$/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	66 c7 05 42 23 41 f0 	movw   $0x8,0xf0412342$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	08 00 $/;"	l
f0103b45	obj/kern/kernel.asm	/^f0103b45:	c6 05 44 23 41 f0 00 	movb   $0x0,0xf0412344$/;"	l
f0103b4c	obj/kern/kernel.asm	/^f0103b4c:	c6 05 45 23 41 f0 8e 	movb   $0x8e,0xf0412345$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b56	obj/kern/kernel.asm	/^f0103b56:	66 a3 46 23 41 f0    	mov    %ax,0xf0412346$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	b8 d2 43 10 f0       	mov    $0xf01043d2,%eax$/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	66 a3 48 23 41 f0    	mov    %ax,0xf0412348$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	66 c7 05 4a 23 41 f0 	movw   $0x8,0xf041234a$/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	08 00 $/;"	l
f0103b70	obj/kern/kernel.asm	/^f0103b70:	c6 05 4c 23 41 f0 00 	movb   $0x0,0xf041234c$/;"	l
f0103b77	obj/kern/kernel.asm	/^f0103b77:	c6 05 4d 23 41 f0 8e 	movb   $0x8e,0xf041234d$/;"	l
f0103b7e	obj/kern/kernel.asm	/^f0103b7e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b81	obj/kern/kernel.asm	/^f0103b81:	66 a3 4e 23 41 f0    	mov    %ax,0xf041234e$/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87:	b8 d8 43 10 f0       	mov    $0xf01043d8,%eax$/;"	l
f0103b8c	obj/kern/kernel.asm	/^f0103b8c:	66 a3 50 23 41 f0    	mov    %ax,0xf0412350$/;"	l
f0103b92	obj/kern/kernel.asm	/^f0103b92:	66 c7 05 52 23 41 f0 	movw   $0x8,0xf0412352$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	08 00 $/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	c6 05 54 23 41 f0 00 	movb   $0x0,0xf0412354$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	c6 05 55 23 41 f0 8e 	movb   $0x8e,0xf0412355$/;"	l
f0103ba9	obj/kern/kernel.asm	/^f0103ba9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac:	66 a3 56 23 41 f0    	mov    %ax,0xf0412356$/;"	l
f0103bb2	obj/kern/kernel.asm	/^f0103bb2:	b8 de 43 10 f0       	mov    $0xf01043de,%eax$/;"	l
f0103bb7	obj/kern/kernel.asm	/^f0103bb7:	66 a3 58 23 41 f0    	mov    %ax,0xf0412358$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	66 c7 05 5a 23 41 f0 	movw   $0x8,0xf041235a$/;"	l
f0103bc4	obj/kern/kernel.asm	/^f0103bc4:	08 00 $/;"	l
f0103bc6	obj/kern/kernel.asm	/^f0103bc6:	c6 05 5c 23 41 f0 00 	movb   $0x0,0xf041235c$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	c6 05 5d 23 41 f0 ee 	movb   $0xee,0xf041235d$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	66 a3 5e 23 41 f0    	mov    %ax,0xf041235e$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	b8 e4 43 10 f0       	mov    $0xf01043e4,%eax$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	66 a3 60 23 41 f0    	mov    %ax,0xf0412360$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	66 c7 05 62 23 41 f0 	movw   $0x8,0xf0412362$/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	08 00 $/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	c6 05 64 23 41 f0 00 	movb   $0x0,0xf0412364$/;"	l
f0103bf8	obj/kern/kernel.asm	/^f0103bf8:	c6 05 65 23 41 f0 8e 	movb   $0x8e,0xf0412365$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	66 a3 66 23 41 f0    	mov    %ax,0xf0412366$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	b8 ea 43 10 f0       	mov    $0xf01043ea,%eax$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	66 a3 68 23 41 f0    	mov    %ax,0xf0412368$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	66 c7 05 6a 23 41 f0 	movw   $0x8,0xf041236a$/;"	l
f0103c1a	obj/kern/kernel.asm	/^f0103c1a:	08 00 $/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	c6 05 6c 23 41 f0 00 	movb   $0x0,0xf041236c$/;"	l
f0103c23	obj/kern/kernel.asm	/^f0103c23:	c6 05 6d 23 41 f0 8e 	movb   $0x8e,0xf041236d$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	66 a3 6e 23 41 f0    	mov    %ax,0xf041236e$/;"	l
f0103c33	obj/kern/kernel.asm	/^f0103c33:	b8 f0 43 10 f0       	mov    $0xf01043f0,%eax$/;"	l
f0103c38	obj/kern/kernel.asm	/^f0103c38:	66 a3 70 23 41 f0    	mov    %ax,0xf0412370$/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	66 c7 05 72 23 41 f0 	movw   $0x8,0xf0412372$/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	08 00 $/;"	l
f0103c47	obj/kern/kernel.asm	/^f0103c47:	c6 05 74 23 41 f0 00 	movb   $0x0,0xf0412374$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	c6 05 75 23 41 f0 8e 	movb   $0x8e,0xf0412375$/;"	l
f0103c55	obj/kern/kernel.asm	/^f0103c55:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c58	obj/kern/kernel.asm	/^f0103c58:	66 a3 76 23 41 f0    	mov    %ax,0xf0412376$/;"	l
f0103c5e	obj/kern/kernel.asm	/^f0103c5e:	b8 f6 43 10 f0       	mov    $0xf01043f6,%eax$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	66 a3 78 23 41 f0    	mov    %ax,0xf0412378$/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	66 c7 05 7a 23 41 f0 	movw   $0x8,0xf041237a$/;"	l
f0103c70	obj/kern/kernel.asm	/^f0103c70:	08 00 $/;"	l
f0103c72	obj/kern/kernel.asm	/^f0103c72:	c6 05 7c 23 41 f0 00 	movb   $0x0,0xf041237c$/;"	l
f0103c79	obj/kern/kernel.asm	/^f0103c79:	c6 05 7d 23 41 f0 8e 	movb   $0x8e,0xf041237d$/;"	l
f0103c80	obj/kern/kernel.asm	/^f0103c80:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	66 a3 7e 23 41 f0    	mov    %ax,0xf041237e$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	b8 fc 43 10 f0       	mov    $0xf01043fc,%eax$/;"	l
f0103c8e	obj/kern/kernel.asm	/^f0103c8e:	66 a3 80 23 41 f0    	mov    %ax,0xf0412380$/;"	l
f0103c94	obj/kern/kernel.asm	/^f0103c94:	66 c7 05 82 23 41 f0 	movw   $0x8,0xf0412382$/;"	l
f0103c9b	obj/kern/kernel.asm	/^f0103c9b:	08 00 $/;"	l
f0103c9d	obj/kern/kernel.asm	/^f0103c9d:	c6 05 84 23 41 f0 00 	movb   $0x0,0xf0412384$/;"	l
f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	c6 05 85 23 41 f0 8e 	movb   $0x8e,0xf0412385$/;"	l
f0103cab	obj/kern/kernel.asm	/^f0103cab:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103cae	obj/kern/kernel.asm	/^f0103cae:	66 a3 86 23 41 f0    	mov    %ax,0xf0412386$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	b8 00 44 10 f0       	mov    $0xf0104400,%eax$/;"	l
f0103cb9	obj/kern/kernel.asm	/^f0103cb9:	66 a3 90 23 41 f0    	mov    %ax,0xf0412390$/;"	l
f0103cbf	obj/kern/kernel.asm	/^f0103cbf:	66 c7 05 92 23 41 f0 	movw   $0x8,0xf0412392$/;"	l
f0103cc6	obj/kern/kernel.asm	/^f0103cc6:	08 00 $/;"	l
f0103cc8	obj/kern/kernel.asm	/^f0103cc8:	c6 05 94 23 41 f0 00 	movb   $0x0,0xf0412394$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	c6 05 95 23 41 f0 8e 	movb   $0x8e,0xf0412395$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	66 a3 96 23 41 f0    	mov    %ax,0xf0412396$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	b8 04 44 10 f0       	mov    $0xf0104404,%eax$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	66 a3 98 23 41 f0    	mov    %ax,0xf0412398$/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	66 c7 05 9a 23 41 f0 	movw   $0x8,0xf041239a$/;"	l
f0103cf1	obj/kern/kernel.asm	/^f0103cf1:	08 00 $/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	c6 05 9c 23 41 f0 00 	movb   $0x0,0xf041239c$/;"	l
f0103cfa	obj/kern/kernel.asm	/^f0103cfa:	c6 05 9d 23 41 f0 8e 	movb   $0x8e,0xf041239d$/;"	l
f0103d01	obj/kern/kernel.asm	/^f0103d01:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	66 a3 9e 23 41 f0    	mov    %ax,0xf041239e$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	b8 08 44 10 f0       	mov    $0xf0104408,%eax$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	66 a3 a0 23 41 f0    	mov    %ax,0xf04123a0$/;"	l
f0103d15	obj/kern/kernel.asm	/^f0103d15:	66 c7 05 a2 23 41 f0 	movw   $0x8,0xf04123a2$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	08 00 $/;"	l
f0103d1e	obj/kern/kernel.asm	/^f0103d1e:	c6 05 a4 23 41 f0 00 	movb   $0x0,0xf04123a4$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	c6 05 a5 23 41 f0 8e 	movb   $0x8e,0xf04123a5$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	66 a3 a6 23 41 f0    	mov    %ax,0xf04123a6$/;"	l
f0103d35	obj/kern/kernel.asm	/^f0103d35:	b8 0c 44 10 f0       	mov    $0xf010440c,%eax$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	66 a3 a8 23 41 f0    	mov    %ax,0xf04123a8$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	66 c7 05 aa 23 41 f0 	movw   $0x8,0xf04123aa$/;"	l
f0103d47	obj/kern/kernel.asm	/^f0103d47:	08 00 $/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	c6 05 ac 23 41 f0 00 	movb   $0x0,0xf04123ac$/;"	l
f0103d50	obj/kern/kernel.asm	/^f0103d50:	c6 05 ad 23 41 f0 8e 	movb   $0x8e,0xf04123ad$/;"	l
f0103d57	obj/kern/kernel.asm	/^f0103d57:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103d5a	obj/kern/kernel.asm	/^f0103d5a:	66 a3 ae 23 41 f0    	mov    %ax,0xf04123ae$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	b8 10 44 10 f0       	mov    $0xf0104410,%eax$/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	66 a3 b0 23 41 f0    	mov    %ax,0xf04123b0$/;"	l
f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	66 c7 05 b2 23 41 f0 	movw   $0x8,0xf04123b2$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	08 00 $/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	c6 05 b4 23 41 f0 00 	movb   $0x0,0xf04123b4$/;"	l
f0103d7b	obj/kern/kernel.asm	/^f0103d7b:	c6 05 b5 23 41 f0 8e 	movb   $0x8e,0xf04123b5$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103d85	obj/kern/kernel.asm	/^f0103d85:	66 a3 b6 23 41 f0    	mov    %ax,0xf04123b6$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	b8 14 44 10 f0       	mov    $0xf0104414,%eax$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	66 a3 c0 23 41 f0    	mov    %ax,0xf04123c0$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	66 c7 05 c2 23 41 f0 	movw   $0x8,0xf04123c2$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	08 00 $/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	c6 05 c4 23 41 f0 00 	movb   $0x0,0xf04123c4$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	c6 05 c5 23 41 f0 8e 	movb   $0x8e,0xf04123c5$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	66 a3 c6 23 41 f0    	mov    %ax,0xf04123c6$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	b8 1a 44 10 f0       	mov    $0xf010441a,%eax$/;"	l
f0103dbb	obj/kern/kernel.asm	/^f0103dbb:	66 a3 c8 23 41 f0    	mov    %ax,0xf04123c8$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	66 c7 05 ca 23 41 f0 	movw   $0x8,0xf04123ca$/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	08 00 $/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	c6 05 cc 23 41 f0 00 	movb   $0x0,0xf04123cc$/;"	l
f0103dd1	obj/kern/kernel.asm	/^f0103dd1:	c6 05 cd 23 41 f0 8e 	movb   $0x8e,0xf04123cd$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	66 a3 ce 23 41 f0    	mov    %ax,0xf04123ce$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	b8 1e 44 10 f0       	mov    $0xf010441e,%eax$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6:	66 a3 d0 23 41 f0    	mov    %ax,0xf04123d0$/;"	l
f0103dec	obj/kern/kernel.asm	/^f0103dec:	66 c7 05 d2 23 41 f0 	movw   $0x8,0xf04123d2$/;"	l
f0103df3	obj/kern/kernel.asm	/^f0103df3:	08 00 $/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	c6 05 d4 23 41 f0 00 	movb   $0x0,0xf04123d4$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	c6 05 d5 23 41 f0 8e 	movb   $0x8e,0xf04123d5$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	66 a3 d6 23 41 f0    	mov    %ax,0xf04123d6$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	b8 24 44 10 f0       	mov    $0xf0104424,%eax$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	66 a3 d8 23 41 f0    	mov    %ax,0xf04123d8$/;"	l
f0103e17	obj/kern/kernel.asm	/^f0103e17:	66 c7 05 da 23 41 f0 	movw   $0x8,0xf04123da$/;"	l
f0103e1e	obj/kern/kernel.asm	/^f0103e1e:	08 00 $/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20:	c6 05 dc 23 41 f0 00 	movb   $0x0,0xf04123dc$/;"	l
f0103e27	obj/kern/kernel.asm	/^f0103e27:	c6 05 dd 23 41 f0 8e 	movb   $0x8e,0xf04123dd$/;"	l
f0103e2e	obj/kern/kernel.asm	/^f0103e2e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103e31	obj/kern/kernel.asm	/^f0103e31:	66 a3 de 23 41 f0    	mov    %ax,0xf04123de$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	b8 2a 44 10 f0       	mov    $0xf010442a,%eax$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	66 a3 c0 24 41 f0    	mov    %ax,0xf04124c0$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	66 c7 05 c2 24 41 f0 	movw   $0x8,0xf04124c2$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	08 00 $/;"	l
f0103e4b	obj/kern/kernel.asm	/^f0103e4b:	c6 05 c4 24 41 f0 00 	movb   $0x0,0xf04124c4$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	c6 05 c5 24 41 f0 ee 	movb   $0xee,0xf04124c5$/;"	l
f0103e59	obj/kern/kernel.asm	/^f0103e59:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103e5c	obj/kern/kernel.asm	/^f0103e5c:	66 a3 c6 24 41 f0    	mov    %ax,0xf04124c6$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	b8 30 44 10 f0       	mov    $0xf0104430,%eax$/;"	l
f0103e67	obj/kern/kernel.asm	/^f0103e67:	66 a3 48 24 41 f0    	mov    %ax,0xf0412448$/;"	l
f0103e6d	obj/kern/kernel.asm	/^f0103e6d:	66 c7 05 4a 24 41 f0 	movw   $0x8,0xf041244a$/;"	l
f0103e74	obj/kern/kernel.asm	/^f0103e74:	08 00 $/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	c6 05 4c 24 41 f0 00 	movb   $0x0,0xf041244c$/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	c6 05 4d 24 41 f0 8e 	movb   $0x8e,0xf041244d$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103e87	obj/kern/kernel.asm	/^f0103e87:	66 a3 4e 24 41 f0    	mov    %ax,0xf041244e$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	b8 36 44 10 f0       	mov    $0xf0104436,%eax$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	66 a3 60 24 41 f0    	mov    %ax,0xf0412460$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	66 c7 05 62 24 41 f0 	movw   $0x8,0xf0412462$/;"	l
f0103e9f	obj/kern/kernel.asm	/^f0103e9f:	08 00 $/;"	l
f0103ea1	obj/kern/kernel.asm	/^f0103ea1:	c6 05 64 24 41 f0 00 	movb   $0x0,0xf0412464$/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	c6 05 65 24 41 f0 8e 	movb   $0x8e,0xf0412465$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103eb2	obj/kern/kernel.asm	/^f0103eb2:	66 a3 66 24 41 f0    	mov    %ax,0xf0412466$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8:	e8 14 fc ff ff       	call   f0103ad1 <trap_init_percpu>$/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	5d                   	pop    %ebp$/;"	l
f0103ebe	obj/kern/kernel.asm	/^f0103ebe:	c3                   	ret    $/;"	l
f0103ebf	obj/kern/kernel.asm	/^f0103ebf <clock_idt_init>:$/;"	l
f0103ebf	obj/kern/kernel.asm	/^f0103ebf:	55                   	push   %ebp$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	b8 50 44 10 f0       	mov    $0xf0104450,%eax$/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	66 a3 80 24 41 f0    	mov    %ax,0xf0412480$/;"	l
f0103ecd	obj/kern/kernel.asm	/^f0103ecd:	66 c7 05 82 24 41 f0 	movw   $0x8,0xf0412482$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	08 00 $/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	c6 05 84 24 41 f0 00 	movb   $0x0,0xf0412484$/;"	l
f0103edd	obj/kern/kernel.asm	/^f0103edd:	c6 05 85 24 41 f0 8e 	movb   $0x8e,0xf0412485$/;"	l
f0103ee4	obj/kern/kernel.asm	/^f0103ee4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ee7	obj/kern/kernel.asm	/^f0103ee7:	66 a3 86 24 41 f0    	mov    %ax,0xf0412486$/;"	l
f0103eed	obj/kern/kernel.asm	/^f0103eed:	b8 54 23 12 f0       	mov    $0xf0122354,%eax$/;"	l
f0103ef2	obj/kern/kernel.asm	/^f0103ef2:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103ef5	obj/kern/kernel.asm	/^f0103ef5:	5d                   	pop    %ebp$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	c3                   	ret    $/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7 <print_regs>:$/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	55                   	push   %ebp$/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8:	89 e5                	mov    %esp,%ebp$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	53                   	push   %ebx$/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	ff 33                	pushl  (%ebx)$/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0103f08	obj/kern/kernel.asm	/^f0103f08:	e8 b0 fb ff ff       	call   f0103abd <cprintf>$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0103f13	obj/kern/kernel.asm	/^f0103f13:	68 3c 73 10 f0       	push   $0xf010733c$/;"	l
f0103f18	obj/kern/kernel.asm	/^f0103f18:	e8 a0 fb ff ff       	call   f0103abd <cprintf>$/;"	l
f0103f1d	obj/kern/kernel.asm	/^f0103f1d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	68 4b 73 10 f0       	push   $0xf010734b$/;"	l
f0103f28	obj/kern/kernel.asm	/^f0103f28:	e8 90 fb ff ff       	call   f0103abd <cprintf>$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	68 5a 73 10 f0       	push   $0xf010735a$/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	e8 80 fb ff ff       	call   f0103abd <cprintf>$/;"	l
f0103f3d	obj/kern/kernel.asm	/^f0103f3d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f40	obj/kern/kernel.asm	/^f0103f40:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	68 69 73 10 f0       	push   $0xf0107369$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	e8 70 fb ff ff       	call   f0103abd <cprintf>$/;"	l
f0103f4d	obj/kern/kernel.asm	/^f0103f4d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f50	obj/kern/kernel.asm	/^f0103f50:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	68 78 73 10 f0       	push   $0xf0107378$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	e8 60 fb ff ff       	call   f0103abd <cprintf>$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	68 87 73 10 f0       	push   $0xf0107387$/;"	l
f0103f68	obj/kern/kernel.asm	/^f0103f68:	e8 50 fb ff ff       	call   f0103abd <cprintf>$/;"	l
f0103f6d	obj/kern/kernel.asm	/^f0103f6d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f0103f73	obj/kern/kernel.asm	/^f0103f73:	68 96 73 10 f0       	push   $0xf0107396$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	e8 40 fb ff ff       	call   f0103abd <cprintf>$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103f83	obj/kern/kernel.asm	/^f0103f83:	c9                   	leave  $/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	c3                   	ret    $/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85 <print_trapframe>:$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	55                   	push   %ebp$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	56                   	push   %esi$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	53                   	push   %ebx$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103f8d	obj/kern/kernel.asm	/^f0103f8d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	53                   	push   %ebx$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	68 fa 73 10 f0       	push   $0xf01073fa$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	e8 22 fb ff ff       	call   f0103abd <cprintf>$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103f9e	obj/kern/kernel.asm	/^f0103f9e:	e8 54 ff ff ff       	call   f0103ef7 <print_regs>$/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa:	50                   	push   %eax$/;"	l
f0103fab	obj/kern/kernel.asm	/^f0103fab:	68 0c 74 10 f0       	push   $0xf010740c$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	e8 08 fb ff ff       	call   f0103abd <cprintf>$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103fbc	obj/kern/kernel.asm	/^f0103fbc:	50                   	push   %eax$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	68 1f 74 10 f0       	push   $0xf010741f$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	e8 f6 fa ff ff       	call   f0103abd <cprintf>$/;"	l
f0103fc7	obj/kern/kernel.asm	/^f0103fc7:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103fca	obj/kern/kernel.asm	/^f0103fca:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fcd	obj/kern/kernel.asm	/^f0103fcd:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	77 09                	ja     f0103fdb <print_trapframe+0x56>$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	8b 14 85 c0 76 10 f0 	mov    -0xfef8940(,%eax,4),%edx$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	eb 1f                	jmp    f0103ffa <print_trapframe+0x75>$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103fde	obj/kern/kernel.asm	/^f0103fde:	74 15                	je     f0103ff5 <print_trapframe+0x70>$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	b9 c4 73 10 f0       	mov    $0xf01073c4,%ecx$/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	ba b1 73 10 f0       	mov    $0xf01073b1,%edx$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	0f 43 d1             	cmovae %ecx,%edx$/;"	l
f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	eb 05                	jmp    f0103ffa <print_trapframe+0x75>$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	ba a5 73 10 f0       	mov    $0xf01073a5,%edx$/;"	l
f0103ffa	obj/kern/kernel.asm	/^f0103ffa:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103ffd	obj/kern/kernel.asm	/^f0103ffd:	52                   	push   %edx$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	50                   	push   %eax$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	68 32 74 10 f0       	push   $0xf0107432$/;"	l
f0104004	obj/kern/kernel.asm	/^f0104004:	e8 b4 fa ff ff       	call   f0103abd <cprintf>$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	83 c4 10             	add    $0x10,%esp$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	3b 1d 40 2b 41 f0    	cmp    0xf0412b40,%ebx$/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	75 1a                	jne    f010402e <print_trapframe+0xa9>$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104018	obj/kern/kernel.asm	/^f0104018:	75 14                	jne    f010402e <print_trapframe+0xa9>$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	50                   	push   %eax$/;"	l
f0104021	obj/kern/kernel.asm	/^f0104021:	68 44 74 10 f0       	push   $0xf0107444$/;"	l
f0104026	obj/kern/kernel.asm	/^f0104026:	e8 92 fa ff ff       	call   f0103abd <cprintf>$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104031	obj/kern/kernel.asm	/^f0104031:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	68 53 74 10 f0       	push   $0xf0107453$/;"	l
f0104039	obj/kern/kernel.asm	/^f0104039:	e8 7f fa ff ff       	call   f0103abd <cprintf>$/;"	l
f010403e	obj/kern/kernel.asm	/^f010403e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104041	obj/kern/kernel.asm	/^f0104041:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	75 49                	jne    f0104090 <print_trapframe+0x10b>$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010404a	obj/kern/kernel.asm	/^f010404a:	89 c2                	mov    %eax,%edx$/;"	l
f010404c	obj/kern/kernel.asm	/^f010404c:	83 e2 01             	and    $0x1,%edx$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	ba de 73 10 f0       	mov    $0xf01073de,%edx$/;"	l
f0104054	obj/kern/kernel.asm	/^f0104054:	b9 d3 73 10 f0       	mov    $0xf01073d3,%ecx$/;"	l
f0104059	obj/kern/kernel.asm	/^f0104059:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	89 c2                	mov    %eax,%edx$/;"	l
f010405e	obj/kern/kernel.asm	/^f010405e:	83 e2 02             	and    $0x2,%edx$/;"	l
f0104061	obj/kern/kernel.asm	/^f0104061:	ba f0 73 10 f0       	mov    $0xf01073f0,%edx$/;"	l
f0104066	obj/kern/kernel.asm	/^f0104066:	be ea 73 10 f0       	mov    $0xf01073ea,%esi$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	83 e0 04             	and    $0x4,%eax$/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	be 3a 75 10 f0       	mov    $0xf010753a,%esi$/;"	l
f0104076	obj/kern/kernel.asm	/^f0104076:	b8 f5 73 10 f0       	mov    $0xf01073f5,%eax$/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e:	51                   	push   %ecx$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	52                   	push   %edx$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	50                   	push   %eax$/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	68 61 74 10 f0       	push   $0xf0107461$/;"	l
f0104086	obj/kern/kernel.asm	/^f0104086:	e8 32 fa ff ff       	call   f0103abd <cprintf>$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010408e	obj/kern/kernel.asm	/^f010408e:	eb 10                	jmp    f01040a0 <print_trapframe+0x11b>$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	68 4e 6a 10 f0       	push   $0xf0106a4e$/;"	l
f0104098	obj/kern/kernel.asm	/^f0104098:	e8 20 fa ff ff       	call   f0103abd <cprintf>$/;"	l
f010409d	obj/kern/kernel.asm	/^f010409d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040a0	obj/kern/kernel.asm	/^f01040a0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01040a3	obj/kern/kernel.asm	/^f01040a3:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f01040a6	obj/kern/kernel.asm	/^f01040a6:	68 70 74 10 f0       	push   $0xf0107470$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	e8 0d fa ff ff       	call   f0103abd <cprintf>$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	83 c4 08             	add    $0x8,%esp$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	50                   	push   %eax$/;"	l
f01040b8	obj/kern/kernel.asm	/^f01040b8:	68 7f 74 10 f0       	push   $0xf010747f$/;"	l
f01040bd	obj/kern/kernel.asm	/^f01040bd:	e8 fb f9 ff ff       	call   f0103abd <cprintf>$/;"	l
f01040c2	obj/kern/kernel.asm	/^f01040c2:	83 c4 08             	add    $0x8,%esp$/;"	l
f01040c5	obj/kern/kernel.asm	/^f01040c5:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	68 92 74 10 f0       	push   $0xf0107492$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	e8 eb f9 ff ff       	call   f0103abd <cprintf>$/;"	l
f01040d2	obj/kern/kernel.asm	/^f01040d2:	83 c4 08             	add    $0x8,%esp$/;"	l
f01040d5	obj/kern/kernel.asm	/^f01040d5:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	68 a1 74 10 f0       	push   $0xf01074a1$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	e8 db f9 ff ff       	call   f0103abd <cprintf>$/;"	l
f01040e2	obj/kern/kernel.asm	/^f01040e2:	83 c4 08             	add    $0x8,%esp$/;"	l
f01040e5	obj/kern/kernel.asm	/^f01040e5:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f01040e9	obj/kern/kernel.asm	/^f01040e9:	50                   	push   %eax$/;"	l
f01040ea	obj/kern/kernel.asm	/^f01040ea:	68 b0 74 10 f0       	push   $0xf01074b0$/;"	l
f01040ef	obj/kern/kernel.asm	/^f01040ef:	e8 c9 f9 ff ff       	call   f0103abd <cprintf>$/;"	l
f01040f4	obj/kern/kernel.asm	/^f01040f4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040f7	obj/kern/kernel.asm	/^f01040f7:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	5b                   	pop    %ebx$/;"	l
f01040fb	obj/kern/kernel.asm	/^f01040fb:	5e                   	pop    %esi$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	5d                   	pop    %ebp$/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	c3                   	ret    $/;"	l
f01040fe	obj/kern/kernel.asm	/^f01040fe <page_fault_handler>:$/;"	l
f01040fe	obj/kern/kernel.asm	/^f01040fe:	55                   	push   %ebp$/;"	l
f01040ff	obj/kern/kernel.asm	/^f01040ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0104101	obj/kern/kernel.asm	/^f0104101:	57                   	push   %edi$/;"	l
f0104102	obj/kern/kernel.asm	/^f0104102:	56                   	push   %esi$/;"	l
f0104103	obj/kern/kernel.asm	/^f0104103:	53                   	push   %ebx$/;"	l
f0104104	obj/kern/kernel.asm	/^f0104104:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104107	obj/kern/kernel.asm	/^f0104107:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010410a	obj/kern/kernel.asm	/^f010410a:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f010410d	obj/kern/kernel.asm	/^f010410d:	66 83 7b 34 08       	cmpw   $0x8,0x34(%ebx)$/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112:	75 20                	jne    f0104134 <page_fault_handler+0x36>$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104117	obj/kern/kernel.asm	/^f0104117:	53                   	push   %ebx$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	e8 68 fe ff ff       	call   f0103f85 <print_trapframe>$/;"	l
f010411d	obj/kern/kernel.asm	/^f010411d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	68 c3 74 10 f0       	push   $0xf01074c3$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	68 49 01 00 00       	push   $0x149$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	68 df 74 10 f0       	push   $0xf01074df$/;"	l
f010412f	obj/kern/kernel.asm	/^f010412f:	e8 bc bf ff ff       	call   f01000f0 <_panic>$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f0104139	obj/kern/kernel.asm	/^f0104139:	83 78 60 00          	cmpl   $0x0,0x60(%eax)$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	0f 84 94 00 00 00    	je     f01041d7 <page_fault_handler+0xd9>$/;"	l
f0104143	obj/kern/kernel.asm	/^f0104143:	8b 53 3c             	mov    0x3c(%ebx),%edx$/;"	l
f0104146	obj/kern/kernel.asm	/^f0104146:	8d 8a 00 10 80 11    	lea    0x11801000(%edx),%ecx$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	81 f9 ff 0f 00 00    	cmp    $0xfff,%ecx$/;"	l
f0104152	obj/kern/kernel.asm	/^f0104152:	77 13                	ja     f0104167 <page_fault_handler+0x69>$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154:	8d 4a c4             	lea    -0x3c(%edx),%ecx$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	81 f9 ff ef 7f ee    	cmp    $0xee7fefff,%ecx$/;"	l
f010415d	obj/kern/kernel.asm	/^f010415d:	76 78                	jbe    f01041d7 <page_fault_handler+0xd9>$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	8d 7a c8             	lea    -0x38(%edx),%edi$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	eb 11                	jmp    f0104178 <page_fault_handler+0x7a>$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	b9 c8 ff 7f ee       	mov    $0xee7fffc8,%ecx$/;"	l
f010416c	obj/kern/kernel.asm	/^f010416c:	bf cc ff 7f ee       	mov    $0xee7fffcc,%edi$/;"	l
f0104171	obj/kern/kernel.asm	/^f0104171:	c7 45 e4 cc ff 7f ee 	movl   $0xee7fffcc,-0x1c(%ebp)$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	6a 02                	push   $0x2$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	6a 38                	push   $0x38$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	51                   	push   %ecx$/;"	l
f010417d	obj/kern/kernel.asm	/^f010417d:	50                   	push   %eax$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	e8 7b e9 ff ff       	call   f0102afe <user_mem_assert>$/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	6a 00                	push   $0x0$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	6a 01                	push   $0x1$/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f:	50                   	push   %eax$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	e8 69 e9 ff ff       	call   f0102afe <user_mem_assert>$/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	89 fa                	mov    %edi,%edx$/;"	l
f0104197	obj/kern/kernel.asm	/^f0104197:	89 37                	mov    %esi,(%edi)$/;"	l
f0104199	obj/kern/kernel.asm	/^f0104199:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010419c	obj/kern/kernel.asm	/^f010419c:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f010419f	obj/kern/kernel.asm	/^f010419f:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f01041a2	obj/kern/kernel.asm	/^f01041a2:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f01041a7	obj/kern/kernel.asm	/^f01041a7:	89 de                	mov    %ebx,%esi$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01041ab	obj/kern/kernel.asm	/^f01041ab:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f01041b1	obj/kern/kernel.asm	/^f01041b1:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01041b4	obj/kern/kernel.asm	/^f01041b4:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f01041b7	obj/kern/kernel.asm	/^f01041b7:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01041ba	obj/kern/kernel.asm	/^f01041ba:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01041c0	obj/kern/kernel.asm	/^f01041c0:	89 43 3c             	mov    %eax,0x3c(%ebx)$/;"	l
f01041c3	obj/kern/kernel.asm	/^f01041c3:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	8b 50 60             	mov    0x60(%eax),%edx$/;"	l
f01041cb	obj/kern/kernel.asm	/^f01041cb:	89 53 30             	mov    %edx,0x30(%ebx)$/;"	l
f01041ce	obj/kern/kernel.asm	/^f01041ce:	83 c4 14             	add    $0x14,%esp$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	50                   	push   %eax$/;"	l
f01041d2	obj/kern/kernel.asm	/^f01041d2:	e8 b7 ef ff ff       	call   f010318e <env_run>$/;"	l
f01041d7	obj/kern/kernel.asm	/^f01041d7:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f01041da	obj/kern/kernel.asm	/^f01041da:	56                   	push   %esi$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de:	68 84 76 10 f0       	push   $0xf0107684$/;"	l
f01041e3	obj/kern/kernel.asm	/^f01041e3:	e8 d5 f8 ff ff       	call   f0103abd <cprintf>$/;"	l
f01041e8	obj/kern/kernel.asm	/^f01041e8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	e8 95 fd ff ff       	call   f0103f85 <print_trapframe>$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	83 c4 04             	add    $0x4,%esp$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	ff 35 28 23 41 f0    	pushl  0xf0412328$/;"	l
f01041f9	obj/kern/kernel.asm	/^f01041f9:	e8 23 ef ff ff       	call   f0103121 <env_destroy>$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104201	obj/kern/kernel.asm	/^f0104201:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104204	obj/kern/kernel.asm	/^f0104204:	5b                   	pop    %ebx$/;"	l
f0104205	obj/kern/kernel.asm	/^f0104205:	5e                   	pop    %esi$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	5f                   	pop    %edi$/;"	l
f0104207	obj/kern/kernel.asm	/^f0104207:	5d                   	pop    %ebp$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	c3                   	ret    $/;"	l
f0104209	obj/kern/kernel.asm	/^f0104209 <trap>:$/;"	l
f0104209	obj/kern/kernel.asm	/^f0104209:	55                   	push   %ebp$/;"	l
f010420a	obj/kern/kernel.asm	/^f010420a:	89 e5                	mov    %esp,%ebp$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	57                   	push   %edi$/;"	l
f010420d	obj/kern/kernel.asm	/^f010420d:	56                   	push   %esi$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	fc                   	cld    $/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	83 3d 20 80 41 f0 00 	cmpl   $0x0,0xf0418020$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	74 01                	je     f0104219 <trap+0x10>$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	f4                   	hlt    $/;"	l
f0104219	obj/kern/kernel.asm	/^f0104219:	9c                   	pushf  $/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	58                   	pop    %eax$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	f6 c4 02             	test   $0x2,%ah$/;"	l
f010421e	obj/kern/kernel.asm	/^f010421e:	74 19                	je     f0104239 <trap+0x30>$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	68 eb 74 10 f0       	push   $0xf01074eb$/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	68 17 01 00 00       	push   $0x117$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	68 df 74 10 f0       	push   $0xf01074df$/;"	l
f0104234	obj/kern/kernel.asm	/^f0104234:	e8 b7 be ff ff       	call   f01000f0 <_panic>$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	85 c0                	test   %eax,%eax$/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240:	75 19                	jne    f010425b <trap+0x52>$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	68 04 75 10 f0       	push   $0xf0107504$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247:	68 8e 67 10 f0       	push   $0xf010678e$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	68 1b 01 00 00       	push   $0x11b$/;"	l
f0104251	obj/kern/kernel.asm	/^f0104251:	68 df 74 10 f0       	push   $0xf01074df$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	e8 95 be ff ff       	call   f01000f0 <_panic>$/;"	l
f010425b	obj/kern/kernel.asm	/^f010425b:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f010425f	obj/kern/kernel.asm	/^f010425f:	75 18                	jne    f0104279 <trap+0x70>$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	50                   	push   %eax$/;"	l
f0104265	obj/kern/kernel.asm	/^f0104265:	e8 fb ec ff ff       	call   f0102f65 <env_free>$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	c7 05 28 23 41 f0 00 	movl   $0x0,0xf0412328$/;"	l
f0104271	obj/kern/kernel.asm	/^f0104271:	00 00 00 $/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	e8 52 02 00 00       	call   f01044cb <sched_yield>$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	89 c7                	mov    %eax,%edi$/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104283	obj/kern/kernel.asm	/^f0104283:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	8b 35 28 23 41 f0    	mov    0xf0412328,%esi$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	89 35 40 2b 41 f0    	mov    %esi,0xf0412b40$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	75 11                	jne    f01042aa <trap+0xa1>$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	56                   	push   %esi$/;"	l
f010429d	obj/kern/kernel.asm	/^f010429d:	e8 5c fe ff ff       	call   f01040fe <page_fault_handler>$/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	e9 04 01 00 00       	jmp    f01043ae <trap+0x1a5>$/;"	l
f01042aa	obj/kern/kernel.asm	/^f01042aa:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01042ad	obj/kern/kernel.asm	/^f01042ad:	75 24                	jne    f01042d3 <trap+0xca>$/;"	l
f01042af	obj/kern/kernel.asm	/^f01042af:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01042b2	obj/kern/kernel.asm	/^f01042b2:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f01042b5	obj/kern/kernel.asm	/^f01042b5:	ff 36                	pushl  (%esi)$/;"	l
f01042b7	obj/kern/kernel.asm	/^f01042b7:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f01042bd	obj/kern/kernel.asm	/^f01042bd:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	e8 80 02 00 00       	call   f0104548 <syscall>$/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb:	83 c4 20             	add    $0x20,%esp$/;"	l
f01042ce	obj/kern/kernel.asm	/^f01042ce:	e9 db 00 00 00       	jmp    f01043ae <trap+0x1a5>$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	75 11                	jne    f01042e9 <trap+0xe0>$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	56                   	push   %esi$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	e8 3f c7 ff ff       	call   f0100a20 <monitor>$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	e9 c5 00 00 00       	jmp    f01043ae <trap+0x1a5>$/;"	l
f01042e9	obj/kern/kernel.asm	/^f01042e9:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f01042ec	obj/kern/kernel.asm	/^f01042ec:	75 1d                	jne    f010430b <trap+0x102>$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01042f1	obj/kern/kernel.asm	/^f01042f1:	68 0b 75 10 f0       	push   $0xf010750b$/;"	l
f01042f6	obj/kern/kernel.asm	/^f01042f6:	e8 c2 f7 ff ff       	call   f0103abd <cprintf>$/;"	l
f01042fb	obj/kern/kernel.asm	/^f01042fb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	e8 82 fc ff ff       	call   f0103f85 <print_trapframe>$/;"	l
f0104303	obj/kern/kernel.asm	/^f0104303:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	e9 a3 00 00 00       	jmp    f01043ae <trap+0x1a5>$/;"	l
f010430b	obj/kern/kernel.asm	/^f010430b:	83 f8 28             	cmp    $0x28,%eax$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	75 23                	jne    f0104333 <trap+0x12a>$/;"	l
f0104310	obj/kern/kernel.asm	/^f0104310:	e8 e8 f5 ff ff       	call   f01038fd <rtc_check_status>$/;"	l
f0104315	obj/kern/kernel.asm	/^f0104315:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b:	50                   	push   %eax$/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	e8 38 f7 ff ff       	call   f0103a59 <pic_send_eoi>$/;"	l
f0104321	obj/kern/kernel.asm	/^f0104321:	8b 35 24 80 41 f0    	mov    0xf0418024,%esi$/;"	l
f0104327	obj/kern/kernel.asm	/^f0104327:	e8 cb f2 ff ff       	call   f01035f7 <gettime>$/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	89 06                	mov    %eax,(%esi)$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	e8 98 01 00 00       	call   f01044cb <sched_yield>$/;"	l
f0104333	obj/kern/kernel.asm	/^f0104333:	83 f8 21             	cmp    $0x21,%eax$/;"	l
f0104336	obj/kern/kernel.asm	/^f0104336:	75 1b                	jne    f0104353 <trap+0x14a>$/;"	l
f0104338	obj/kern/kernel.asm	/^f0104338:	e8 c0 f5 ff ff       	call   f01038fd <rtc_check_status>$/;"	l
f010433d	obj/kern/kernel.asm	/^f010433d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104340	obj/kern/kernel.asm	/^f0104340:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	50                   	push   %eax$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	e8 10 f7 ff ff       	call   f0103a59 <pic_send_eoi>$/;"	l
f0104349	obj/kern/kernel.asm	/^f0104349:	e8 b8 c1 ff ff       	call   f0100506 <kbd_intr>$/;"	l
f010434e	obj/kern/kernel.asm	/^f010434e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104351	obj/kern/kernel.asm	/^f0104351:	eb 5b                	jmp    f01043ae <trap+0x1a5>$/;"	l
f0104353	obj/kern/kernel.asm	/^f0104353:	83 f8 24             	cmp    $0x24,%eax$/;"	l
f0104356	obj/kern/kernel.asm	/^f0104356:	75 1b                	jne    f0104373 <trap+0x16a>$/;"	l
f0104358	obj/kern/kernel.asm	/^f0104358:	e8 a0 f5 ff ff       	call   f01038fd <rtc_check_status>$/;"	l
f010435d	obj/kern/kernel.asm	/^f010435d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	50                   	push   %eax$/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	e8 f0 f6 ff ff       	call   f0103a59 <pic_send_eoi>$/;"	l
f0104369	obj/kern/kernel.asm	/^f0104369:	e8 7c c1 ff ff       	call   f01004ea <serial_intr>$/;"	l
f010436e	obj/kern/kernel.asm	/^f010436e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104371	obj/kern/kernel.asm	/^f0104371:	eb 3b                	jmp    f01043ae <trap+0x1a5>$/;"	l
f0104373	obj/kern/kernel.asm	/^f0104373:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	56                   	push   %esi$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	e8 09 fc ff ff       	call   f0103f85 <print_trapframe>$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	75 17                	jne    f010439d <trap+0x194>$/;"	l
f0104386	obj/kern/kernel.asm	/^f0104386:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	68 28 75 10 f0       	push   $0xf0107528$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	68 02 01 00 00       	push   $0x102$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	68 df 74 10 f0       	push   $0xf01074df$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	e8 53 bd ff ff       	call   f01000f0 <_panic>$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043a0	obj/kern/kernel.asm	/^f01043a0:	ff 35 28 23 41 f0    	pushl  0xf0412328$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	e8 76 ed ff ff       	call   f0103121 <env_destroy>$/;"	l
f01043ab	obj/kern/kernel.asm	/^f01043ab:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043ae	obj/kern/kernel.asm	/^f01043ae:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f01043b3	obj/kern/kernel.asm	/^f01043b3:	85 c0                	test   %eax,%eax$/;"	l
f01043b5	obj/kern/kernel.asm	/^f01043b5:	74 0f                	je     f01043c6 <trap+0x1bd>$/;"	l
f01043b7	obj/kern/kernel.asm	/^f01043b7:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	75 09                	jne    f01043c6 <trap+0x1bd>$/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043c0	obj/kern/kernel.asm	/^f01043c0:	50                   	push   %eax$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	e8 c8 ed ff ff       	call   f010318e <env_run>$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	e8 00 01 00 00       	call   f01044cb <sched_yield>$/;"	l
f01043cb	obj/kern/kernel.asm	/^f01043cb:	90                   	nop$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc <DE>:$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	6a 00                	push   $0x0$/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	6a 00                	push   $0x0$/;"	l
f01043d0	obj/kern/kernel.asm	/^f01043d0:	eb 6a                	jmp    f010443c <_alltraps>$/;"	l
f01043d2	obj/kern/kernel.asm	/^f01043d2 <DB>:$/;"	l
f01043d2	obj/kern/kernel.asm	/^f01043d2:	6a 00                	push   $0x0$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	6a 01                	push   $0x1$/;"	l
f01043d6	obj/kern/kernel.asm	/^f01043d6:	eb 64                	jmp    f010443c <_alltraps>$/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8 <NMI>:$/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	6a 00                	push   $0x0$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	6a 02                	push   $0x2$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	eb 5e                	jmp    f010443c <_alltraps>$/;"	l
f01043de	obj/kern/kernel.asm	/^f01043de <BP>:$/;"	l
f01043de	obj/kern/kernel.asm	/^f01043de:	6a 00                	push   $0x0$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	6a 03                	push   $0x3$/;"	l
f01043e2	obj/kern/kernel.asm	/^f01043e2:	eb 58                	jmp    f010443c <_alltraps>$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4 <OF>:$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	6a 00                	push   $0x0$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	6a 04                	push   $0x4$/;"	l
f01043e8	obj/kern/kernel.asm	/^f01043e8:	eb 52                	jmp    f010443c <_alltraps>$/;"	l
f01043ea	obj/kern/kernel.asm	/^f01043ea <BR>:$/;"	l
f01043ea	obj/kern/kernel.asm	/^f01043ea:	6a 00                	push   $0x0$/;"	l
f01043ec	obj/kern/kernel.asm	/^f01043ec:	6a 05                	push   $0x5$/;"	l
f01043ee	obj/kern/kernel.asm	/^f01043ee:	eb 4c                	jmp    f010443c <_alltraps>$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0 <UD>:$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	6a 00                	push   $0x0$/;"	l
f01043f2	obj/kern/kernel.asm	/^f01043f2:	6a 06                	push   $0x6$/;"	l
f01043f4	obj/kern/kernel.asm	/^f01043f4:	eb 46                	jmp    f010443c <_alltraps>$/;"	l
f01043f6	obj/kern/kernel.asm	/^f01043f6 <NM>:$/;"	l
f01043f6	obj/kern/kernel.asm	/^f01043f6:	6a 00                	push   $0x0$/;"	l
f01043f8	obj/kern/kernel.asm	/^f01043f8:	6a 07                	push   $0x7$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	eb 40                	jmp    f010443c <_alltraps>$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc <DF>:$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	6a 08                	push   $0x8$/;"	l
f01043fe	obj/kern/kernel.asm	/^f01043fe:	eb 3c                	jmp    f010443c <_alltraps>$/;"	l
f0104400	obj/kern/kernel.asm	/^f0104400 <TS>:$/;"	l
f0104400	obj/kern/kernel.asm	/^f0104400:	6a 0a                	push   $0xa$/;"	l
f0104402	obj/kern/kernel.asm	/^f0104402:	eb 38                	jmp    f010443c <_alltraps>$/;"	l
f0104404	obj/kern/kernel.asm	/^f0104404 <NP>:$/;"	l
f0104404	obj/kern/kernel.asm	/^f0104404:	6a 0b                	push   $0xb$/;"	l
f0104406	obj/kern/kernel.asm	/^f0104406:	eb 34                	jmp    f010443c <_alltraps>$/;"	l
f0104408	obj/kern/kernel.asm	/^f0104408 <SS>:$/;"	l
f0104408	obj/kern/kernel.asm	/^f0104408:	6a 0c                	push   $0xc$/;"	l
f010440a	obj/kern/kernel.asm	/^f010440a:	eb 30                	jmp    f010443c <_alltraps>$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c <GP>:$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	6a 0d                	push   $0xd$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	eb 2c                	jmp    f010443c <_alltraps>$/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410 <PF>:$/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410:	6a 0e                	push   $0xe$/;"	l
f0104412	obj/kern/kernel.asm	/^f0104412:	eb 28                	jmp    f010443c <_alltraps>$/;"	l
f0104414	obj/kern/kernel.asm	/^f0104414 <MF>:$/;"	l
f0104414	obj/kern/kernel.asm	/^f0104414:	6a 00                	push   $0x0$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	6a 10                	push   $0x10$/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418:	eb 22                	jmp    f010443c <_alltraps>$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a <AC>:$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	6a 11                	push   $0x11$/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	eb 1e                	jmp    f010443c <_alltraps>$/;"	l
f010441e	obj/kern/kernel.asm	/^f010441e <MC>:$/;"	l
f010441e	obj/kern/kernel.asm	/^f010441e:	6a 00                	push   $0x0$/;"	l
f0104420	obj/kern/kernel.asm	/^f0104420:	6a 12                	push   $0x12$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	eb 18                	jmp    f010443c <_alltraps>$/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424 <XM>:$/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424:	6a 00                	push   $0x0$/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	6a 13                	push   $0x13$/;"	l
f0104428	obj/kern/kernel.asm	/^f0104428:	eb 12                	jmp    f010443c <_alltraps>$/;"	l
f010442a	obj/kern/kernel.asm	/^f010442a <SYSCALL>:$/;"	l
f010442a	obj/kern/kernel.asm	/^f010442a:	6a 00                	push   $0x0$/;"	l
f010442c	obj/kern/kernel.asm	/^f010442c:	6a 30                	push   $0x30$/;"	l
f010442e	obj/kern/kernel.asm	/^f010442e:	eb 0c                	jmp    f010443c <_alltraps>$/;"	l
f0104430	obj/kern/kernel.asm	/^f0104430 <KBD>:$/;"	l
f0104430	obj/kern/kernel.asm	/^f0104430:	6a 00                	push   $0x0$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	6a 21                	push   $0x21$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	eb 06                	jmp    f010443c <_alltraps>$/;"	l
f0104436	obj/kern/kernel.asm	/^f0104436 <SERIAL>:$/;"	l
f0104436	obj/kern/kernel.asm	/^f0104436:	6a 00                	push   $0x0$/;"	l
f0104438	obj/kern/kernel.asm	/^f0104438:	6a 24                	push   $0x24$/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	eb 00                	jmp    f010443c <_alltraps>$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c <_alltraps>:$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	1e                   	push   %ds$/;"	l
f010443d	obj/kern/kernel.asm	/^f010443d:	06                   	push   %es$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	60                   	pusha  $/;"	l
f010443f	obj/kern/kernel.asm	/^f010443f:	50                   	push   %eax$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0104445	obj/kern/kernel.asm	/^f0104445:	8e d8                	mov    %eax,%ds$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	8e c0                	mov    %eax,%es$/;"	l
f0104449	obj/kern/kernel.asm	/^f0104449:	58                   	pop    %eax$/;"	l
f010444a	obj/kern/kernel.asm	/^f010444a:	54                   	push   %esp$/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	e8 b9 fd ff ff       	call   f0104209 <trap>$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450 <clock_thdlr>:$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	6a 00                	push   $0x0$/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	6a 28                	push   $0x28$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	eb e6                	jmp    f010443c <_alltraps>$/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456 <sched_halt>:$/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456:	55                   	push   %ebp$/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	89 e5                	mov    %esp,%ebp$/;"	l
f0104459	obj/kern/kernel.asm	/^f0104459:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010445c	obj/kern/kernel.asm	/^f010445c:	a1 2c 23 41 f0       	mov    0xf041232c,%eax$/;"	l
f0104461	obj/kern/kernel.asm	/^f0104461:	8d 50 54             	lea    0x54(%eax),%edx$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104469	obj/kern/kernel.asm	/^f0104469:	8b 02                	mov    (%edx),%eax$/;"	l
f010446b	obj/kern/kernel.asm	/^f010446b:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010446e	obj/kern/kernel.asm	/^f010446e:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104471	obj/kern/kernel.asm	/^f0104471:	76 13                	jbe    f0104486 <sched_halt+0x30>$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104476	obj/kern/kernel.asm	/^f0104476:	81 c2 3c 03 00 00    	add    $0x33c,%edx$/;"	l
f010447c	obj/kern/kernel.asm	/^f010447c:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	75 e5                	jne    f0104469 <sched_halt+0x13>$/;"	l
f0104484	obj/kern/kernel.asm	/^f0104484:	eb 08                	jmp    f010448e <sched_halt+0x38>$/;"	l
f0104486	obj/kern/kernel.asm	/^f0104486:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f010448c	obj/kern/kernel.asm	/^f010448c:	75 1f                	jne    f01044ad <sched_halt+0x57>$/;"	l
f010448e	obj/kern/kernel.asm	/^f010448e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104491	obj/kern/kernel.asm	/^f0104491:	68 10 77 10 f0       	push   $0xf0107710$/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	e8 22 f6 ff ff       	call   f0103abd <cprintf>$/;"	l
f010449b	obj/kern/kernel.asm	/^f010449b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01044a1	obj/kern/kernel.asm	/^f01044a1:	6a 00                	push   $0x0$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	e8 78 c5 ff ff       	call   f0100a20 <monitor>$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044ab	obj/kern/kernel.asm	/^f01044ab:	eb f1                	jmp    f010449e <sched_halt+0x48>$/;"	l
f01044ad	obj/kern/kernel.asm	/^f01044ad:	c7 05 28 23 41 f0 00 	movl   $0x0,0xf0412328$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	00 00 00 $/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7:	a1 64 80 41 f0       	mov    0xf0418064,%eax$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01044c1	obj/kern/kernel.asm	/^f01044c1:	89 c4                	mov    %eax,%esp$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	6a 00                	push   $0x0$/;"	l
f01044c5	obj/kern/kernel.asm	/^f01044c5:	6a 00                	push   $0x0$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	fb                   	sti    $/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	f4                   	hlt    $/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	c9                   	leave  $/;"	l
f01044ca	obj/kern/kernel.asm	/^f01044ca:	c3                   	ret    $/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb <sched_yield>:$/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb:	55                   	push   %ebp$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	89 e5                	mov    %esp,%ebp$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	56                   	push   %esi$/;"	l
f01044cf	obj/kern/kernel.asm	/^f01044cf:	53                   	push   %ebx$/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	8b 15 28 23 41 f0    	mov    0xf0412328,%edx$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	85 d2                	test   %edx,%edx$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	74 1b                	je     f01044f5 <sched_yield+0x2a>$/;"	l
f01044da	obj/kern/kernel.asm	/^f01044da:	89 d0                	mov    %edx,%eax$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	2b 05 2c 23 41 f0    	sub    0xf041232c,%eax$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01044e5	obj/kern/kernel.asm	/^f01044e5:	69 c0 2f 06 15 e1    	imul   $0xe115062f,%eax,%eax$/;"	l
f01044eb	obj/kern/kernel.asm	/^f01044eb:	83 c0 01             	add    $0x1,%eax$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	eb 05                	jmp    f01044fa <sched_yield+0x2f>$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01044fa	obj/kern/kernel.asm	/^f01044fa:	8b 35 2c 23 41 f0    	mov    0xf041232c,%esi$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	bb 00 04 00 00       	mov    $0x400,%ebx$/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	69 c8 3c 03 00 00    	imul   $0x33c,%eax,%ecx$/;"	l
f010450b	obj/kern/kernel.asm	/^f010450b:	01 f1                	add    %esi,%ecx$/;"	l
f010450d	obj/kern/kernel.asm	/^f010450d:	83 79 54 02          	cmpl   $0x2,0x54(%ecx)$/;"	l
f0104511	obj/kern/kernel.asm	/^f0104511:	75 09                	jne    f010451c <sched_yield+0x51>$/;"	l
f0104513	obj/kern/kernel.asm	/^f0104513:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104516	obj/kern/kernel.asm	/^f0104516:	51                   	push   %ecx$/;"	l
f0104517	obj/kern/kernel.asm	/^f0104517:	e8 72 ec ff ff       	call   f010318e <env_run>$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527:	75 dc                	jne    f0104505 <sched_yield+0x3a>$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	85 d2                	test   %edx,%edx$/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	74 0f                	je     f010453c <sched_yield+0x71>$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	83 7a 54 03          	cmpl   $0x3,0x54(%edx)$/;"	l
f0104531	obj/kern/kernel.asm	/^f0104531:	75 09                	jne    f010453c <sched_yield+0x71>$/;"	l
f0104533	obj/kern/kernel.asm	/^f0104533:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104536	obj/kern/kernel.asm	/^f0104536:	52                   	push   %edx$/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	e8 52 ec ff ff       	call   f010318e <env_run>$/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	e8 15 ff ff ff       	call   f0104456 <sched_halt>$/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	5b                   	pop    %ebx$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	5e                   	pop    %esi$/;"	l
f0104546	obj/kern/kernel.asm	/^f0104546:	5d                   	pop    %ebp$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	c3                   	ret    $/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548 <syscall>:$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	55                   	push   %ebp$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	89 e5                	mov    %esp,%ebp$/;"	l
f010454b	obj/kern/kernel.asm	/^f010454b:	57                   	push   %edi$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	56                   	push   %esi$/;"	l
f010454d	obj/kern/kernel.asm	/^f010454d:	53                   	push   %ebx$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	83 f8 11             	cmp    $0x11,%eax$/;"	l
f0104557	obj/kern/kernel.asm	/^f0104557:	0f 87 b3 06 00 00    	ja     f0104c10 <syscall+0x6c8>$/;"	l
f010455d	obj/kern/kernel.asm	/^f010455d:	ff 24 85 74 77 10 f0 	jmp    *-0xfef888c(,%eax,4)$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	6a 00                	push   $0x0$/;"	l
f0104566	obj/kern/kernel.asm	/^f0104566:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010456c	obj/kern/kernel.asm	/^f010456c:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104579	obj/kern/kernel.asm	/^f0104579:	69 c0 3c 03 00 00    	imul   $0x33c,%eax,%eax$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	03 05 2c 23 41 f0    	add    0xf041232c,%eax$/;"	l
f0104585	obj/kern/kernel.asm	/^f0104585:	50                   	push   %eax$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	e8 73 e5 ff ff       	call   f0102afe <user_mem_assert>$/;"	l
f010458b	obj/kern/kernel.asm	/^f010458b:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010458e	obj/kern/kernel.asm	/^f010458e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104591	obj/kern/kernel.asm	/^f0104591:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	68 39 77 10 f0       	push   $0xf0107739$/;"	l
f0104599	obj/kern/kernel.asm	/^f0104599:	e8 1f f5 ff ff       	call   f0103abd <cprintf>$/;"	l
f010459e	obj/kern/kernel.asm	/^f010459e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	e9 71 06 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01045ab	obj/kern/kernel.asm	/^f01045ab:	e8 68 bf ff ff       	call   f0100518 <cons_getc>$/;"	l
f01045b0	obj/kern/kernel.asm	/^f01045b0:	e9 67 06 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01045bd	obj/kern/kernel.asm	/^f01045bd:	e9 5a 06 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01045c2	obj/kern/kernel.asm	/^f01045c2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	6a 01                	push   $0x1$/;"	l
f01045c7	obj/kern/kernel.asm	/^f01045c7:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	50                   	push   %eax$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	e8 fb e5 ff ff       	call   f0102bce <envid2env>$/;"	l
f01045d3	obj/kern/kernel.asm	/^f01045d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	85 c0                	test   %eax,%eax$/;"	l
f01045d8	obj/kern/kernel.asm	/^f01045d8:	0f 88 3e 06 00 00    	js     f0104c1c <syscall+0x6d4>$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	8b 15 28 23 41 f0    	mov    0xf0412328,%edx$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	39 d0                	cmp    %edx,%eax$/;"	l
f01045e9	obj/kern/kernel.asm	/^f01045e9:	75 15                	jne    f0104600 <syscall+0xb8>$/;"	l
f01045eb	obj/kern/kernel.asm	/^f01045eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f01045f1	obj/kern/kernel.asm	/^f01045f1:	68 3e 77 10 f0       	push   $0xf010773e$/;"	l
f01045f6	obj/kern/kernel.asm	/^f01045f6:	e8 c2 f4 ff ff       	call   f0103abd <cprintf>$/;"	l
f01045fb	obj/kern/kernel.asm	/^f01045fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045fe	obj/kern/kernel.asm	/^f01045fe:	eb 16                	jmp    f0104616 <syscall+0xce>$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104603	obj/kern/kernel.asm	/^f0104603:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104606	obj/kern/kernel.asm	/^f0104606:	ff 72 48             	pushl  0x48(%edx)$/;"	l
f0104609	obj/kern/kernel.asm	/^f0104609:	68 59 77 10 f0       	push   $0xf0107759$/;"	l
f010460e	obj/kern/kernel.asm	/^f010460e:	e8 aa f4 ff ff       	call   f0103abd <cprintf>$/;"	l
f0104613	obj/kern/kernel.asm	/^f0104613:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	e8 00 eb ff ff       	call   f0103121 <env_destroy>$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	e9 ee 05 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	6a 01                	push   $0x1$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	50                   	push   %eax$/;"	l
f0104637	obj/kern/kernel.asm	/^f0104637:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010463a	obj/kern/kernel.asm	/^f010463a:	e8 8f e5 ff ff       	call   f0102bce <envid2env>$/;"	l
f010463f	obj/kern/kernel.asm	/^f010463f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	85 c0                	test   %eax,%eax$/;"	l
f0104644	obj/kern/kernel.asm	/^f0104644:	0f 85 d2 05 00 00    	jne    f0104c1c <syscall+0x6d4>$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	81 7d 10 ff ff 7f ee 	cmpl   $0xee7fffff,0x10(%ebp)$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	77 5d                	ja     f01046b0 <syscall+0x168>$/;"	l
f0104653	obj/kern/kernel.asm	/^f0104653:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	75 5e                	jne    f01046ba <syscall+0x172>$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c:	f7 45 14 f8 f1 ff ff 	testl  $0xfffff1f8,0x14(%ebp)$/;"	l
f0104663	obj/kern/kernel.asm	/^f0104663:	75 5f                	jne    f01046c4 <syscall+0x17c>$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	f6 45 14 05          	testb  $0x5,0x14(%ebp)$/;"	l
f0104669	obj/kern/kernel.asm	/^f0104669:	74 63                	je     f01046ce <syscall+0x186>$/;"	l
f010466b	obj/kern/kernel.asm	/^f010466b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	6a 01                	push   $0x1$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	e8 02 c9 ff ff       	call   f0100f77 <page_alloc>$/;"	l
f0104675	obj/kern/kernel.asm	/^f0104675:	89 c6                	mov    %eax,%esi$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	83 c4 10             	add    $0x10,%esp$/;"	l
f010467a	obj/kern/kernel.asm	/^f010467a:	85 c0                	test   %eax,%eax$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	74 5a                	je     f01046d8 <syscall+0x190>$/;"	l
f010467e	obj/kern/kernel.asm	/^f010467e:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104684	obj/kern/kernel.asm	/^f0104684:	50                   	push   %eax$/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688:	ff 70 5c             	pushl  0x5c(%eax)$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	e8 82 cb ff ff       	call   f0101212 <page_insert>$/;"	l
f0104690	obj/kern/kernel.asm	/^f0104690:	89 c3                	mov    %eax,%ebx$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	85 c0                	test   %eax,%eax$/;"	l
f0104697	obj/kern/kernel.asm	/^f0104697:	0f 84 7f 05 00 00    	je     f0104c1c <syscall+0x6d4>$/;"	l
f010469d	obj/kern/kernel.asm	/^f010469d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01046a0	obj/kern/kernel.asm	/^f01046a0:	56                   	push   %esi$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	e8 41 c9 ff ff       	call   f0100fe7 <page_free>$/;"	l
f01046a6	obj/kern/kernel.asm	/^f01046a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046a9	obj/kern/kernel.asm	/^f01046a9:	89 d8                	mov    %ebx,%eax$/;"	l
f01046ab	obj/kern/kernel.asm	/^f01046ab:	e9 6c 05 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01046b0	obj/kern/kernel.asm	/^f01046b0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01046b5	obj/kern/kernel.asm	/^f01046b5:	e9 62 05 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01046bf	obj/kern/kernel.asm	/^f01046bf:	e9 58 05 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01046c4	obj/kern/kernel.asm	/^f01046c4:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	e9 4e 05 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01046d3	obj/kern/kernel.asm	/^f01046d3:	e9 44 05 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01046dd	obj/kern/kernel.asm	/^f01046dd:	e9 3a 05 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01046e2	obj/kern/kernel.asm	/^f01046e2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	6a 01                	push   $0x1$/;"	l
f01046e7	obj/kern/kernel.asm	/^f01046e7:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f01046ea	obj/kern/kernel.asm	/^f01046ea:	50                   	push   %eax$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	e8 db e4 ff ff       	call   f0102bce <envid2env>$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046f6	obj/kern/kernel.asm	/^f01046f6:	85 c0                	test   %eax,%eax$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	0f 85 1e 05 00 00    	jne    f0104c1c <syscall+0x6d4>$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104701	obj/kern/kernel.asm	/^f0104701:	6a 01                	push   $0x1$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	50                   	push   %eax$/;"	l
f0104707	obj/kern/kernel.asm	/^f0104707:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	e8 bf e4 ff ff       	call   f0102bce <envid2env>$/;"	l
f010470f	obj/kern/kernel.asm	/^f010470f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	85 c0                	test   %eax,%eax$/;"	l
f0104714	obj/kern/kernel.asm	/^f0104714:	0f 85 02 05 00 00    	jne    f0104c1c <syscall+0x6d4>$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	81 7d 10 ff ff 7f ee 	cmpl   $0xee7fffff,0x10(%ebp)$/;"	l
f0104721	obj/kern/kernel.asm	/^f0104721:	77 6d                	ja     f0104790 <syscall+0x248>$/;"	l
f0104723	obj/kern/kernel.asm	/^f0104723:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a:	75 6e                	jne    f010479a <syscall+0x252>$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	81 7d 18 ff ff 7f ee 	cmpl   $0xee7fffff,0x18(%ebp)$/;"	l
f0104733	obj/kern/kernel.asm	/^f0104733:	77 65                	ja     f010479a <syscall+0x252>$/;"	l
f0104735	obj/kern/kernel.asm	/^f0104735:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	75 66                	jne    f01047a4 <syscall+0x25c>$/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104741	obj/kern/kernel.asm	/^f0104741:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	50                   	push   %eax$/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010474b	obj/kern/kernel.asm	/^f010474b:	ff 70 5c             	pushl  0x5c(%eax)$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	e8 f8 c9 ff ff       	call   f010114b <page_lookup>$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	85 c0                	test   %eax,%eax$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	74 54                	je     f01047ae <syscall+0x266>$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	8b 55 1c             	mov    0x1c(%ebp),%edx$/;"	l
f010475d	obj/kern/kernel.asm	/^f010475d:	81 e2 fd f1 ff ff    	and    $0xfffff1fd,%edx$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	83 fa 05             	cmp    $0x5,%edx$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	75 50                	jne    f01047b8 <syscall+0x270>$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c:	74 08                	je     f0104776 <syscall+0x22e>$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104771	obj/kern/kernel.asm	/^f0104771:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	74 4c                	je     f01047c2 <syscall+0x27a>$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	ff 75 1c             	pushl  0x1c(%ebp)$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	50                   	push   %eax$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	ff 70 5c             	pushl  0x5c(%eax)$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	e8 8a ca ff ff       	call   f0101212 <page_insert>$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	83 c4 10             	add    $0x10,%esp$/;"	l
f010478b	obj/kern/kernel.asm	/^f010478b:	e9 8c 04 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104790	obj/kern/kernel.asm	/^f0104790:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	e9 82 04 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f010479a	obj/kern/kernel.asm	/^f010479a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f:	e9 78 04 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	e9 6e 04 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01047ae	obj/kern/kernel.asm	/^f01047ae:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	e9 64 04 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	e9 5a 04 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	e9 50 04 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	6a 01                	push   $0x1$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	50                   	push   %eax$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01047d8	obj/kern/kernel.asm	/^f01047d8:	e8 f1 e3 ff ff       	call   f0102bce <envid2env>$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	85 c0                	test   %eax,%eax$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	0f 85 34 04 00 00    	jne    f0104c1c <syscall+0x6d4>$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	81 7d 10 ff ff 7f ee 	cmpl   $0xee7fffff,0x10(%ebp)$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	77 4e                	ja     f010483f <syscall+0x2f7>$/;"	l
f01047f1	obj/kern/kernel.asm	/^f01047f1:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	75 4f                	jne    f0104849 <syscall+0x301>$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	50                   	push   %eax$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104804	obj/kern/kernel.asm	/^f0104804:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104807	obj/kern/kernel.asm	/^f0104807:	ff 70 5c             	pushl  0x5c(%eax)$/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a:	e8 3c c9 ff ff       	call   f010114b <page_lookup>$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	89 c2                	mov    %eax,%edx$/;"	l
f0104811	obj/kern/kernel.asm	/^f0104811:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104814	obj/kern/kernel.asm	/^f0104814:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	85 d2                	test   %edx,%edx$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	0f 84 fb 03 00 00    	je     f0104c1c <syscall+0x6d4>$/;"	l
f0104821	obj/kern/kernel.asm	/^f0104821:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104824	obj/kern/kernel.asm	/^f0104824:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104827	obj/kern/kernel.asm	/^f0104827:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010482a	obj/kern/kernel.asm	/^f010482a:	ff 70 5c             	pushl  0x5c(%eax)$/;"	l
f010482d	obj/kern/kernel.asm	/^f010482d:	e8 9a c9 ff ff       	call   f01011cc <page_remove>$/;"	l
f0104832	obj/kern/kernel.asm	/^f0104832:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010483a	obj/kern/kernel.asm	/^f010483a:	e9 dd 03 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f010483f	obj/kern/kernel.asm	/^f010483f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	e9 d3 03 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104849	obj/kern/kernel.asm	/^f0104849:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010484e	obj/kern/kernel.asm	/^f010484e:	e9 c9 03 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104853	obj/kern/kernel.asm	/^f0104853:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	50                   	push   %eax$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	e8 72 e4 ff ff       	call   f0102cd9 <env_alloc>$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	83 c4 10             	add    $0x10,%esp$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	85 c0                	test   %eax,%eax$/;"	l
f010486c	obj/kern/kernel.asm	/^f010486c:	0f 85 aa 03 00 00    	jne    f0104c1c <syscall+0x6d4>$/;"	l
f0104872	obj/kern/kernel.asm	/^f0104872:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104875	obj/kern/kernel.asm	/^f0104875:	c7 40 54 05 00 00 00 	movl   $0x5,0x54(%eax)$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	8b 35 28 23 41 f0    	mov    0xf0412328,%esi$/;"	l
f0104882	obj/kern/kernel.asm	/^f0104882:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	89 c7                	mov    %eax,%edi$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104895	obj/kern/kernel.asm	/^f0104895:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	68 b8 00 00 00       	push   $0xb8$/;"	l
f010489d	obj/kern/kernel.asm	/^f010489d:	8b 1d 28 23 41 f0    	mov    0xf0412328,%ebx$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	8d 53 78             	lea    0x78(%ebx),%edx$/;"	l
f01048a6	obj/kern/kernel.asm	/^f01048a6:	52                   	push   %edx$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	83 c0 78             	add    $0x78,%eax$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa:	50                   	push   %eax$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	e8 d6 0f 00 00       	call   f0105886 <memcpy>$/;"	l
f01048b0	obj/kern/kernel.asm	/^f01048b0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	c7 80 30 01 00 00 00 	movl   $0x0,0x130(%eax)$/;"	l
f01048ba	obj/kern/kernel.asm	/^f01048ba:	00 00 00 $/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	c7 80 34 03 00 00 00 	movl   $0x0,0x334(%eax)$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	00 00 00 $/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	c7 80 38 03 00 00 00 	movl   $0x0,0x338(%eax)$/;"	l
f01048ce	obj/kern/kernel.asm	/^f01048ce:	00 00 00 $/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	e9 40 03 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f01048dc	obj/kern/kernel.asm	/^f01048dc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	6a 01                	push   $0x1$/;"	l
f01048e1	obj/kern/kernel.asm	/^f01048e1:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	50                   	push   %eax$/;"	l
f01048e5	obj/kern/kernel.asm	/^f01048e5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01048e8	obj/kern/kernel.asm	/^f01048e8:	e8 e1 e2 ff ff       	call   f0102bce <envid2env>$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	85 c0                	test   %eax,%eax$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	0f 85 24 03 00 00    	jne    f0104c1c <syscall+0x6d4>$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8:	83 7d 10 02          	cmpl   $0x2,0x10(%ebp)$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	74 06                	je     f0104904 <syscall+0x3bc>$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	83 7d 10 05          	cmpl   $0x5,0x10(%ebp)$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	75 13                	jne    f0104917 <syscall+0x3cf>$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104907	obj/kern/kernel.asm	/^f0104907:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	89 58 54             	mov    %ebx,0x54(%eax)$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	e9 05 03 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	e9 fb 02 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104927	obj/kern/kernel.asm	/^f0104927:	6a 01                	push   $0x1$/;"	l
f0104929	obj/kern/kernel.asm	/^f0104929:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	50                   	push   %eax$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104930	obj/kern/kernel.asm	/^f0104930:	e8 99 e2 ff ff       	call   f0102bce <envid2env>$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	85 c0                	test   %eax,%eax$/;"	l
f010493a	obj/kern/kernel.asm	/^f010493a:	75 1e                	jne    f010495a <syscall+0x412>$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104941	obj/kern/kernel.asm	/^f0104941:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104944	obj/kern/kernel.asm	/^f0104944:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104949	obj/kern/kernel.asm	/^f0104949:	66 83 4a 34 03       	orw    $0x3,0x34(%edx)$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	81 4a 38 00 02 00 00 	orl    $0x200,0x38(%edx)$/;"	l
f0104955	obj/kern/kernel.asm	/^f0104955:	e9 c2 02 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	e9 b8 02 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104964	obj/kern/kernel.asm	/^f0104964:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104967	obj/kern/kernel.asm	/^f0104967:	6a 01                	push   $0x1$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	50                   	push   %eax$/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	e8 59 e2 ff ff       	call   f0102bce <envid2env>$/;"	l
f0104975	obj/kern/kernel.asm	/^f0104975:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	85 c0                	test   %eax,%eax$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	0f 85 9c 02 00 00    	jne    f0104c1c <syscall+0x6d4>$/;"	l
f0104980	obj/kern/kernel.asm	/^f0104980:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	89 5a 60             	mov    %ebx,0x60(%edx)$/;"	l
f0104989	obj/kern/kernel.asm	/^f0104989:	e9 8e 02 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	e8 38 fb ff ff       	call   f01044cb <sched_yield>$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	6a 00                	push   $0x0$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010499b	obj/kern/kernel.asm	/^f010499b:	50                   	push   %eax$/;"	l
f010499c	obj/kern/kernel.asm	/^f010499c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010499f	obj/kern/kernel.asm	/^f010499f:	e8 2a e2 ff ff       	call   f0102bce <envid2env>$/;"	l
f01049a4	obj/kern/kernel.asm	/^f01049a4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049a7	obj/kern/kernel.asm	/^f01049a7:	85 c0                	test   %eax,%eax$/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	0f 85 6d 02 00 00    	jne    f0104c1c <syscall+0x6d4>$/;"	l
f01049af	obj/kern/kernel.asm	/^f01049af:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2:	80 78 64 00          	cmpb   $0x0,0x64(%eax)$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	0f 84 ab 00 00 00    	je     f0104a67 <syscall+0x51f>$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	81 78 68 ff ff 7f ee 	cmpl   $0xee7fffff,0x68(%eax)$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	77 71                	ja     f0104a3d <syscall+0x4f5>$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	81 7d 14 ff ff 7f ee 	cmpl   $0xee7fffff,0x14(%ebp)$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	77 68                	ja     f0104a3d <syscall+0x4f5>$/;"	l
f01049d5	obj/kern/kernel.asm	/^f01049d5:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f01049dc	obj/kern/kernel.asm	/^f01049dc:	0f 85 8f 00 00 00    	jne    f0104a71 <syscall+0x529>$/;"	l
f01049e2	obj/kern/kernel.asm	/^f01049e2:	f7 45 18 f8 f1 ff ff 	testl  $0xfffff1f8,0x18(%ebp)$/;"	l
f01049e9	obj/kern/kernel.asm	/^f01049e9:	0f 85 8c 00 00 00    	jne    f0104a7b <syscall+0x533>$/;"	l
f01049ef	obj/kern/kernel.asm	/^f01049ef:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	50                   	push   %eax$/;"	l
f01049f6	obj/kern/kernel.asm	/^f01049f6:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	ff 70 5c             	pushl  0x5c(%eax)$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	e8 45 c7 ff ff       	call   f010114b <page_lookup>$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a09	obj/kern/kernel.asm	/^f0104a09:	85 c0                	test   %eax,%eax$/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b:	74 78                	je     f0104a85 <syscall+0x53d>$/;"	l
f0104a0d	obj/kern/kernel.asm	/^f0104a0d:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f0104a11	obj/kern/kernel.asm	/^f0104a11:	74 08                	je     f0104a1b <syscall+0x4d3>$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104a16	obj/kern/kernel.asm	/^f0104a16:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	74 74                	je     f0104a8f <syscall+0x547>$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104a21	obj/kern/kernel.asm	/^f0104a21:	ff 72 68             	pushl  0x68(%edx)$/;"	l
f0104a24	obj/kern/kernel.asm	/^f0104a24:	50                   	push   %eax$/;"	l
f0104a25	obj/kern/kernel.asm	/^f0104a25:	ff 72 5c             	pushl  0x5c(%edx)$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	e8 e5 c7 ff ff       	call   f0101212 <page_insert>$/;"	l
f0104a2d	obj/kern/kernel.asm	/^f0104a2d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	85 c0                	test   %eax,%eax$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	75 65                	jne    f0104a99 <syscall+0x551>$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104a37	obj/kern/kernel.asm	/^f0104a37:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	89 70 74             	mov    %esi,0x74(%eax)$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	8b 15 28 23 41 f0    	mov    0xf0412328,%edx$/;"	l
f0104a46	obj/kern/kernel.asm	/^f0104a46:	8b 52 48             	mov    0x48(%edx),%edx$/;"	l
f0104a49	obj/kern/kernel.asm	/^f0104a49:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	89 58 6c             	mov    %ebx,0x6c(%eax)$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	c6 40 64 00          	movb   $0x0,0x64(%eax)$/;"	l
f0104a56	obj/kern/kernel.asm	/^f0104a56:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	e9 b5 01 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	e9 ab 01 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104a71	obj/kern/kernel.asm	/^f0104a71:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104a76	obj/kern/kernel.asm	/^f0104a76:	e9 a1 01 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104a7b	obj/kern/kernel.asm	/^f0104a7b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	e9 97 01 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	e9 8d 01 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104a8f	obj/kern/kernel.asm	/^f0104a8f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	e9 83 01 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104a99	obj/kern/kernel.asm	/^f0104a99:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	e9 79 01 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	81 7d 0c ff ff 7f ee 	cmpl   $0xee7fffff,0xc(%ebp)$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	77 0d                	ja     f0104ab9 <syscall+0x571>$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f0104ab3	obj/kern/kernel.asm	/^f0104ab3:	0f 85 5e 01 00 00    	jne    f0104c17 <syscall+0x6cf>$/;"	l
f0104ab9	obj/kern/kernel.asm	/^f0104ab9:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	c6 40 64 01          	movb   $0x1,0x64(%eax)$/;"	l
f0104ac2	obj/kern/kernel.asm	/^f0104ac2:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	89 58 68             	mov    %ebx,0x68(%eax)$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	c7 40 54 05 00 00 00 	movl   $0x5,0x54(%eax)$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	e8 f0 f9 ff ff       	call   f01044cb <sched_yield>$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	e8 17 eb ff ff       	call   f01035f7 <gettime>$/;"	l
f0104ae0	obj/kern/kernel.asm	/^f0104ae0:	e9 37 01 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104ae5	obj/kern/kernel.asm	/^f0104ae5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
f0104ae9	obj/kern/kernel.asm	/^f0104ae9:	0f 94 c2             	sete   %dl$/;"	l
f0104aec	obj/kern/kernel.asm	/^f0104aec:	83 7d 10 ff          	cmpl   $0xffffffff,0x10(%ebp)$/;"	l
f0104af0	obj/kern/kernel.asm	/^f0104af0:	0f 94 c0             	sete   %al$/;"	l
f0104af3	obj/kern/kernel.asm	/^f0104af3:	84 c2                	test   %al,%dl$/;"	l
f0104af5	obj/kern/kernel.asm	/^f0104af5:	74 1c                	je     f0104b13 <syscall+0x5cb>$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	75 16                	jne    f0104b13 <syscall+0x5cb>$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f0104b02	obj/kern/kernel.asm	/^f0104b02:	83 a0 34 03 00 00 fe 	andl   $0xfffffffe,0x334(%eax)$/;"	l
f0104b09	obj/kern/kernel.asm	/^f0104b09:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	e9 09 01 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104b13	obj/kern/kernel.asm	/^f0104b13:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104b16	obj/kern/kernel.asm	/^f0104b16:	6a 00                	push   $0x0$/;"	l
f0104b18	obj/kern/kernel.asm	/^f0104b18:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	50                   	push   %eax$/;"	l
f0104b1c	obj/kern/kernel.asm	/^f0104b1c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	e8 aa e0 ff ff       	call   f0102bce <envid2env>$/;"	l
f0104b24	obj/kern/kernel.asm	/^f0104b24:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	85 c0                	test   %eax,%eax$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	0f 85 ed 00 00 00    	jne    f0104c1c <syscall+0x6d4>$/;"	l
f0104b2f	obj/kern/kernel.asm	/^f0104b2f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104b32	obj/kern/kernel.asm	/^f0104b32:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	8b 54 f8 78          	mov    0x78(%eax,%edi,8),%edx$/;"	l
f0104b39	obj/kern/kernel.asm	/^f0104b39:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	0f 84 8e 00 00 00    	je     f0104bd0 <syscall+0x688>$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	85 d2                	test   %edx,%edx$/;"	l
f0104b44	obj/kern/kernel.asm	/^f0104b44:	75 43                	jne    f0104b89 <syscall+0x641>$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	83 ff 12             	cmp    $0x12,%edi$/;"	l
f0104b49	obj/kern/kernel.asm	/^f0104b49:	74 07                	je     f0104b52 <syscall+0x60a>$/;"	l
f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	83 ff 13             	cmp    $0x13,%edi$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	74 0b                	je     f0104b5b <syscall+0x613>$/;"	l
f0104b50	obj/kern/kernel.asm	/^f0104b50:	eb 21                	jmp    f0104b73 <syscall+0x62b>$/;"	l
f0104b52	obj/kern/kernel.asm	/^f0104b52:	83 a0 34 03 00 00 fd 	andl   $0xfffffffd,0x334(%eax)$/;"	l
f0104b59	obj/kern/kernel.asm	/^f0104b59:	eb 55                	jmp    f0104bb0 <syscall+0x668>$/;"	l
f0104b5b	obj/kern/kernel.asm	/^f0104b5b:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62:	83 88 34 03 00 00 02 	orl    $0x2,0x334(%eax)$/;"	l
f0104b69	obj/kern/kernel.asm	/^f0104b69:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b6e	obj/kern/kernel.asm	/^f0104b6e:	e9 a9 00 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104b73	obj/kern/kernel.asm	/^f0104b73:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	50                   	push   %eax$/;"	l
f0104b77	obj/kern/kernel.asm	/^f0104b77:	e8 a5 e5 ff ff       	call   f0103121 <env_destroy>$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b84	obj/kern/kernel.asm	/^f0104b84:	e9 93 00 00 00       	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104b89	obj/kern/kernel.asm	/^f0104b89:	8b 90 30 01 00 00    	mov    0x130(%eax),%edx$/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	83 fa 40             	cmp    $0x40,%edx$/;"	l
f0104b92	obj/kern/kernel.asm	/^f0104b92:	74 43                	je     f0104bd7 <syscall+0x68f>$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0104b97	obj/kern/kernel.asm	/^f0104b97:	89 88 30 01 00 00    	mov    %ecx,0x130(%eax)$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	8d 84 d0 30 01 00 00 	lea    0x130(%eax,%edx,8),%eax$/;"	l
f0104ba4	obj/kern/kernel.asm	/^f0104ba4:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	89 48 04             	mov    %ecx,0x4(%eax)$/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0104bad	obj/kern/kernel.asm	/^f0104bad:	89 78 08             	mov    %edi,0x8(%eax)$/;"	l
f0104bb0	obj/kern/kernel.asm	/^f0104bb0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104bb3	obj/kern/kernel.asm	/^f0104bb3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	83 7a 54 04          	cmpl   $0x4,0x54(%edx)$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	75 5e                	jne    f0104c1c <syscall+0x6d4>$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	f6 82 34 03 00 00 02 	testb  $0x2,0x334(%edx)$/;"	l
f0104bc5	obj/kern/kernel.asm	/^f0104bc5:	75 55                	jne    f0104c1c <syscall+0x6d4>$/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	c7 42 54 02 00 00 00 	movl   $0x2,0x54(%edx)$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	eb 4c                	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	eb 45                	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	eb 3e                	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f0104be3	obj/kern/kernel.asm	/^f0104be3:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0104bea	obj/kern/kernel.asm	/^f0104bea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	eb 2b                	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	8b 08                	mov    (%eax),%ecx$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	a1 28 23 41 f0       	mov    0xf0412328,%eax$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0104c01	obj/kern/kernel.asm	/^f0104c01:	89 4c f8 78          	mov    %ecx,0x78(%eax,%edi,8)$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	89 5c f8 7c          	mov    %ebx,0x7c(%eax,%edi,8)$/;"	l
f0104c09	obj/kern/kernel.asm	/^f0104c09:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	eb 0c                	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	eb 05                	jmp    f0104c1c <syscall+0x6d4>$/;"	l
f0104c17	obj/kern/kernel.asm	/^f0104c17:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104c1f	obj/kern/kernel.asm	/^f0104c1f:	5b                   	pop    %ebx$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	5e                   	pop    %esi$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	5f                   	pop    %edi$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	5d                   	pop    %ebp$/;"	l
f0104c23	obj/kern/kernel.asm	/^f0104c23:	c3                   	ret    $/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24 <stab_binsearch>:$/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24:	55                   	push   %ebp$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c27	obj/kern/kernel.asm	/^f0104c27:	57                   	push   %edi$/;"	l
f0104c28	obj/kern/kernel.asm	/^f0104c28:	56                   	push   %esi$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	53                   	push   %ebx$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104c3d	obj/kern/kernel.asm	/^f0104c3d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	eb 7f                	jmp    f0104cc8 <stab_binsearch+0xa4>$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	01 d8                	add    %ebx,%eax$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	89 c6                	mov    %eax,%esi$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	01 c6                	add    %eax,%esi$/;"	l
f0104c55	obj/kern/kernel.asm	/^f0104c55:	d1 fe                	sar    %esi$/;"	d
f0104c57	obj/kern/kernel.asm	/^f0104c57:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	89 f0                	mov    %esi,%eax$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	eb 03                	jmp    f0104c67 <stab_binsearch+0x43>$/;"	l
f0104c64	obj/kern/kernel.asm	/^f0104c64:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	39 c3                	cmp    %eax,%ebx$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	7f 0d                	jg     f0104c78 <stab_binsearch+0x54>$/;"	l
f0104c6b	obj/kern/kernel.asm	/^f0104c6b:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	39 f9                	cmp    %edi,%ecx$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	75 ee                	jne    f0104c64 <stab_binsearch+0x40>$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	eb 05                	jmp    f0104c7d <stab_binsearch+0x59>$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	eb 4b                	jmp    f0104cc8 <stab_binsearch+0xa4>$/;"	l
f0104c7d	obj/kern/kernel.asm	/^f0104c7d:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	76 11                	jbe    f0104c9d <stab_binsearch+0x79>$/;"	l
f0104c8c	obj/kern/kernel.asm	/^f0104c8c:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104c8f	obj/kern/kernel.asm	/^f0104c8f:	89 03                	mov    %eax,(%ebx)$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b:	eb 2b                	jmp    f0104cc8 <stab_binsearch+0xa4>$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	73 14                	jae    f0104cb6 <stab_binsearch+0x92>$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104cab	obj/kern/kernel.asm	/^f0104cab:	89 06                	mov    %eax,(%esi)$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	eb 12                	jmp    f0104cc8 <stab_binsearch+0xa4>$/;"	l
f0104cb6	obj/kern/kernel.asm	/^f0104cb6:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104cb9	obj/kern/kernel.asm	/^f0104cb9:	89 06                	mov    %eax,(%esi)$/;"	l
f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0104cbf	obj/kern/kernel.asm	/^f0104cbf:	89 c3                	mov    %eax,%ebx$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104cc8	obj/kern/kernel.asm	/^f0104cc8:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	0f 8e 78 ff ff ff    	jle    f0104c49 <stab_binsearch+0x25>$/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	75 0f                	jne    f0104ce6 <stab_binsearch+0xc2>$/;"	l
f0104cd7	obj/kern/kernel.asm	/^f0104cd7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	8b 00                	mov    (%eax),%eax$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	89 06                	mov    %eax,(%esi)$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	eb 2c                	jmp    f0104d12 <stab_binsearch+0xee>$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	8b 00                	mov    (%eax),%eax$/;"	l
f0104ceb	obj/kern/kernel.asm	/^f0104ceb:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	eb 03                	jmp    f0104cfe <stab_binsearch+0xda>$/;"	l
f0104cfb	obj/kern/kernel.asm	/^f0104cfb:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	39 c8                	cmp    %ecx,%eax$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	7e 0b                	jle    f0104d0d <stab_binsearch+0xe9>$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	39 df                	cmp    %ebx,%edi$/;"	l
f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	75 ee                	jne    f0104cfb <stab_binsearch+0xd7>$/;"	l
f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	89 06                	mov    %eax,(%esi)$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104d15	obj/kern/kernel.asm	/^f0104d15:	5b                   	pop    %ebx$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	5e                   	pop    %esi$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	5f                   	pop    %edi$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	5d                   	pop    %ebp$/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	c3                   	ret    $/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a <debuginfo_eip>:$/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	55                   	push   %ebp$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	57                   	push   %edi$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	56                   	push   %esi$/;"	l
f0104d1f	obj/kern/kernel.asm	/^f0104d1f:	53                   	push   %ebx$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104d23	obj/kern/kernel.asm	/^f0104d23:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104d29	obj/kern/kernel.asm	/^f0104d29:	c7 06 bc 77 10 f0    	movl   $0xf01077bc,(%esi)$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	c7 46 08 bc 77 10 f0 	movl   $0xf01077bc,0x8(%esi)$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0104d47	obj/kern/kernel.asm	/^f0104d47:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54:	0f 87 8a 00 00 00    	ja     f0104de4 <debuginfo_eip+0xca>$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	6a 04                	push   $0x4$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	6a 04                	push   $0x4$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	68 00 00 20 00       	push   $0x200000$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	ff 35 28 23 41 f0    	pushl  0xf0412328$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	e8 ef dc ff ff       	call   f0102a5d <user_mem_check>$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	85 c0                	test   %eax,%eax$/;"	l
f0104d73	obj/kern/kernel.asm	/^f0104d73:	0f 85 0a 02 00 00    	jne    f0104f83 <debuginfo_eip+0x269>$/;"	l
f0104d79	obj/kern/kernel.asm	/^f0104d79:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	89 c1                	mov    %eax,%ecx$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	8b 1d 04 00 20 00    	mov    0x200004,%ebx$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	a1 08 00 20 00       	mov    0x200008,%eax$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f0104d91	obj/kern/kernel.asm	/^f0104d91:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f0104d9a	obj/kern/kernel.asm	/^f0104d9a:	6a 04                	push   $0x4$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	89 d8                	mov    %ebx,%eax$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	29 c8                	sub    %ecx,%eax$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0104da9	obj/kern/kernel.asm	/^f0104da9:	50                   	push   %eax$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	51                   	push   %ecx$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	ff 35 28 23 41 f0    	pushl  0xf0412328$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	e8 a7 dc ff ff       	call   f0102a5d <user_mem_check>$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	85 c0                	test   %eax,%eax$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	0f 85 c9 01 00 00    	jne    f0104f8a <debuginfo_eip+0x270>$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	6a 04                	push   $0x4$/;"	l
f0104dc3	obj/kern/kernel.asm	/^f0104dc3:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f0104dc9	obj/kern/kernel.asm	/^f0104dc9:	29 ca                	sub    %ecx,%edx$/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	52                   	push   %edx$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	51                   	push   %ecx$/;"	l
f0104dcd	obj/kern/kernel.asm	/^f0104dcd:	ff 35 28 23 41 f0    	pushl  0xf0412328$/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	e8 85 dc ff ff       	call   f0102a5d <user_mem_check>$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ddb	obj/kern/kernel.asm	/^f0104ddb:	85 c0                	test   %eax,%eax$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	74 1f                	je     f0104dfe <debuginfo_eip+0xe4>$/;"	l
f0104ddf	obj/kern/kernel.asm	/^f0104ddf:	e9 ad 01 00 00       	jmp    f0104f91 <debuginfo_eip+0x277>$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	c7 45 c0 68 62 11 f0 	movl   $0xf0116268,-0x40(%ebp)$/;"	l
f0104deb	obj/kern/kernel.asm	/^f0104deb:	c7 45 bc c9 26 11 f0 	movl   $0xf01126c9,-0x44(%ebp)$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	bb c8 26 11 f0       	mov    $0xf01126c8,%ebx$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	c7 45 c4 8c 7b 10 f0 	movl   $0xf0107b8c,-0x3c(%ebp)$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0104e01	obj/kern/kernel.asm	/^f0104e01:	39 45 bc             	cmp    %eax,-0x44(%ebp)$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	0f 83 8e 01 00 00    	jae    f0104f98 <debuginfo_eip+0x27e>$/;"	l
f0104e0a	obj/kern/kernel.asm	/^f0104e0a:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	0f 85 8b 01 00 00    	jne    f0104f9f <debuginfo_eip+0x285>$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104e1b	obj/kern/kernel.asm	/^f0104e1b:	2b 5d c4             	sub    -0x3c(%ebp),%ebx$/;"	l
f0104e1e	obj/kern/kernel.asm	/^f0104e1e:	c1 fb 02             	sar    $0x2,%ebx$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	69 c3 ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%eax$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30:	57                   	push   %edi$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	6a 64                	push   $0x64$/;"	l
f0104e33	obj/kern/kernel.asm	/^f0104e33:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	89 d1                	mov    %edx,%ecx$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104e3b	obj/kern/kernel.asm	/^f0104e3b:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e:	89 d8                	mov    %ebx,%eax$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	e8 df fd ff ff       	call   f0104c24 <stab_binsearch>$/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e4b	obj/kern/kernel.asm	/^f0104e4b:	85 c0                	test   %eax,%eax$/;"	l
f0104e4d	obj/kern/kernel.asm	/^f0104e4d:	0f 84 53 01 00 00    	je     f0104fa6 <debuginfo_eip+0x28c>$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104e59	obj/kern/kernel.asm	/^f0104e59:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104e5f	obj/kern/kernel.asm	/^f0104e5f:	57                   	push   %edi$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	6a 24                	push   $0x24$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	89 d1                	mov    %edx,%ecx$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	89 5d c4             	mov    %ebx,-0x3c(%ebp)$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	89 d8                	mov    %ebx,%eax$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	e8 b0 fd ff ff       	call   f0104c24 <stab_binsearch>$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0104e77	obj/kern/kernel.asm	/^f0104e77:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
f0104e7d	obj/kern/kernel.asm	/^f0104e7d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e80	obj/kern/kernel.asm	/^f0104e80:	39 d3                	cmp    %edx,%ebx$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	7f 25                	jg     f0104ea9 <debuginfo_eip+0x18f>$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104e87	obj/kern/kernel.asm	/^f0104e87:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0104e8a	obj/kern/kernel.asm	/^f0104e8a:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	8b 02                	mov    (%edx),%eax$/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	2b 4d bc             	sub    -0x44(%ebp),%ecx$/;"	l
f0104e95	obj/kern/kernel.asm	/^f0104e95:	39 c8                	cmp    %ecx,%eax$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	73 06                	jae    f0104e9f <debuginfo_eip+0x185>$/;"	l
f0104e99	obj/kern/kernel.asm	/^f0104e99:	03 45 bc             	add    -0x44(%ebp),%eax$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	89 46 08             	mov    %eax,0x8(%esi)$/;"	l
f0104e9f	obj/kern/kernel.asm	/^f0104e9f:	8b 42 08             	mov    0x8(%edx),%eax$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	89 46 10             	mov    %eax,0x10(%esi)$/;"	l
f0104ea5	obj/kern/kernel.asm	/^f0104ea5:	29 c7                	sub    %eax,%edi$/;"	l
f0104ea7	obj/kern/kernel.asm	/^f0104ea7:	eb 0c                	jmp    f0104eb5 <debuginfo_eip+0x19b>$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104eaf	obj/kern/kernel.asm	/^f0104eaf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104eb2	obj/kern/kernel.asm	/^f0104eb2:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	6a 3a                	push   $0x3a$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	e8 f3 08 00 00       	call   f01057b5 <strfind>$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f0104ec5	obj/kern/kernel.asm	/^f0104ec5:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
f0104ecb	obj/kern/kernel.asm	/^f0104ecb:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	57                   	push   %edi$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	6a 44                	push   $0x44$/;"	l
f0104ed7	obj/kern/kernel.asm	/^f0104ed7:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	89 f8                	mov    %edi,%eax$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2:	e8 3d fd ff ff       	call   f0104c24 <stab_binsearch>$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0104eea	obj/kern/kernel.asm	/^f0104eea:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0104ef0	obj/kern/kernel.asm	/^f0104ef0:	7f 0d                	jg     f0104eff <debuginfo_eip+0x1e5>$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	0f b7 44 87 06       	movzwl 0x6(%edi,%eax,4),%eax$/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa:	89 46 04             	mov    %eax,0x4(%esi)$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	eb 07                	jmp    f0104f06 <debuginfo_eip+0x1ec>$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	c7 46 04 ff ff ff ff 	movl   $0xffffffff,0x4(%esi)$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	eb 06                	jmp    f0104f1a <debuginfo_eip+0x200>$/;"	l
f0104f14	obj/kern/kernel.asm	/^f0104f14:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104f17	obj/kern/kernel.asm	/^f0104f17:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	39 fb                	cmp    %edi,%ebx$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	7c 2d                	jl     f0104f4b <debuginfo_eip+0x231>$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	0f b6 50 04          	movzbl 0x4(%eax),%edx$/;"	l
f0104f22	obj/kern/kernel.asm	/^f0104f22:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	74 0b                	je     f0104f32 <debuginfo_eip+0x218>$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	75 e8                	jne    f0104f14 <debuginfo_eip+0x1fa>$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	83 78 08 00          	cmpl   $0x0,0x8(%eax)$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30:	74 e2                	je     f0104f14 <debuginfo_eip+0x1fa>$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0104f3b	obj/kern/kernel.asm	/^f0104f3b:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	29 f8                	sub    %edi,%eax$/;"	l
f0104f43	obj/kern/kernel.asm	/^f0104f43:	39 c2                	cmp    %eax,%edx$/;"	l
f0104f45	obj/kern/kernel.asm	/^f0104f45:	73 04                	jae    f0104f4b <debuginfo_eip+0x231>$/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	01 fa                	add    %edi,%edx$/;"	l
f0104f49	obj/kern/kernel.asm	/^f0104f49:	89 16                	mov    %edx,(%esi)$/;"	l
f0104f4b	obj/kern/kernel.asm	/^f0104f4b:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0104f51	obj/kern/kernel.asm	/^f0104f51:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	7d 58                	jge    f0104fb2 <debuginfo_eip+0x298>$/;"	l
f0104f5a	obj/kern/kernel.asm	/^f0104f5a:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f0104f5d	obj/kern/kernel.asm	/^f0104f5d:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f0104f66	obj/kern/kernel.asm	/^f0104f66:	eb 07                	jmp    f0104f6f <debuginfo_eip+0x255>$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	83 46 14 01          	addl   $0x1,0x14(%esi)$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	39 ca                	cmp    %ecx,%edx$/;"	l
f0104f71	obj/kern/kernel.asm	/^f0104f71:	74 3a                	je     f0104fad <debuginfo_eip+0x293>$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	80 78 04 a0          	cmpb   $0xa0,0x4(%eax)$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	74 ec                	je     f0104f68 <debuginfo_eip+0x24e>$/;"	l
f0104f7c	obj/kern/kernel.asm	/^f0104f7c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	eb 2f                	jmp    f0104fb2 <debuginfo_eip+0x298>$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	eb 28                	jmp    f0104fb2 <debuginfo_eip+0x298>$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104f8f	obj/kern/kernel.asm	/^f0104f8f:	eb 21                	jmp    f0104fb2 <debuginfo_eip+0x298>$/;"	l
f0104f91	obj/kern/kernel.asm	/^f0104f91:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104f96	obj/kern/kernel.asm	/^f0104f96:	eb 1a                	jmp    f0104fb2 <debuginfo_eip+0x298>$/;"	l
f0104f98	obj/kern/kernel.asm	/^f0104f98:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104f9d	obj/kern/kernel.asm	/^f0104f9d:	eb 13                	jmp    f0104fb2 <debuginfo_eip+0x298>$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	eb 0c                	jmp    f0104fb2 <debuginfo_eip+0x298>$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104fab	obj/kern/kernel.asm	/^f0104fab:	eb 05                	jmp    f0104fb2 <debuginfo_eip+0x298>$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104fb5	obj/kern/kernel.asm	/^f0104fb5:	5b                   	pop    %ebx$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	5e                   	pop    %esi$/;"	l
f0104fb7	obj/kern/kernel.asm	/^f0104fb7:	5f                   	pop    %edi$/;"	l
f0104fb8	obj/kern/kernel.asm	/^f0104fb8:	5d                   	pop    %ebp$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	c3                   	ret    $/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba <find_function>:$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba:	55                   	push   %ebp$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	89 e5                	mov    %esp,%ebp$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	57                   	push   %edi$/;"	l
f0104fbe	obj/kern/kernel.asm	/^f0104fbe:	56                   	push   %esi$/;"	l
f0104fbf	obj/kern/kernel.asm	/^f0104fbf:	53                   	push   %ebx$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	bb 8c 7b 10 f0       	mov    $0xf0107b8c,%ebx$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	eb 4b                	jmp    f0105015 <find_function+0x5b>$/;"	l
f0104fca	obj/kern/kernel.asm	/^f0104fca:	80 7b 04 24          	cmpb   $0x24,0x4(%ebx)$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	75 42                	jne    f0105012 <find_function+0x58>$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	8b 03                	mov    (%ebx),%eax$/;"	l
f0104fd2	obj/kern/kernel.asm	/^f0104fd2:	8d b0 c9 26 11 f0    	lea    -0xfeed937(%eax),%esi$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	6a 3a                	push   $0x3a$/;"	l
f0104fdd	obj/kern/kernel.asm	/^f0104fdd:	56                   	push   %esi$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	e8 d2 07 00 00       	call   f01057b5 <strfind>$/;"	l
f0104fe3	obj/kern/kernel.asm	/^f0104fe3:	29 f0                	sub    %esi,%eax$/;"	l
f0104fe5	obj/kern/kernel.asm	/^f0104fe5:	89 c7                	mov    %eax,%edi$/;"	l
f0104fe7	obj/kern/kernel.asm	/^f0104fe7:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104fea	obj/kern/kernel.asm	/^f0104fea:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104fed	obj/kern/kernel.asm	/^f0104fed:	e8 61 06 00 00       	call   f0105653 <strlen>$/;"	l
f0104ff2	obj/kern/kernel.asm	/^f0104ff2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ff5	obj/kern/kernel.asm	/^f0104ff5:	39 c7                	cmp    %eax,%edi$/;"	l
f0104ff7	obj/kern/kernel.asm	/^f0104ff7:	75 19                	jne    f0105012 <find_function+0x58>$/;"	l
f0104ff9	obj/kern/kernel.asm	/^f0104ff9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104ffc	obj/kern/kernel.asm	/^f0104ffc:	57                   	push   %edi$/;"	l
f0104ffd	obj/kern/kernel.asm	/^f0104ffd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	56                   	push   %esi$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	e8 56 07 00 00       	call   f010575c <strncmp>$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	85 c0                	test   %eax,%eax$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	75 05                	jne    f0105012 <find_function+0x58>$/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	eb 10                	jmp    f0105022 <find_function+0x68>$/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0105015	obj/kern/kernel.asm	/^f0105015:	81 fb c8 26 11 f0    	cmp    $0xf01126c8,%ebx$/;"	l
f010501b	obj/kern/kernel.asm	/^f010501b:	75 ad                	jne    f0104fca <find_function+0x10>$/;"	l
f010501d	obj/kern/kernel.asm	/^f010501d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105022	obj/kern/kernel.asm	/^f0105022:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105025	obj/kern/kernel.asm	/^f0105025:	5b                   	pop    %ebx$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	5e                   	pop    %esi$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	5f                   	pop    %edi$/;"	l
f0105028	obj/kern/kernel.asm	/^f0105028:	5d                   	pop    %ebp$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	c3                   	ret    $/;"	l
f010502a	obj/kern/kernel.asm	/^f010502a <printnum>:$/;"	l
f010502a	obj/kern/kernel.asm	/^f010502a:	55                   	push   %ebp$/;"	l
f010502b	obj/kern/kernel.asm	/^f010502b:	89 e5                	mov    %esp,%ebp$/;"	l
f010502d	obj/kern/kernel.asm	/^f010502d:	57                   	push   %edi$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	56                   	push   %esi$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	53                   	push   %ebx$/;"	l
f0105030	obj/kern/kernel.asm	/^f0105030:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105033	obj/kern/kernel.asm	/^f0105033:	89 c7                	mov    %eax,%edi$/;"	l
f0105035	obj/kern/kernel.asm	/^f0105035:	89 d6                	mov    %edx,%esi$/;"	l
f0105037	obj/kern/kernel.asm	/^f0105037:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010503a	obj/kern/kernel.asm	/^f010503a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010503d	obj/kern/kernel.asm	/^f010503d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105040	obj/kern/kernel.asm	/^f0105040:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0105043	obj/kern/kernel.asm	/^f0105043:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	39 d3                	cmp    %edx,%ebx$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	72 05                	jb     f010505a <printnum+0x30>$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	77 45                	ja     f010509f <printnum+0x75>$/;"	l
f010505a	obj/kern/kernel.asm	/^f010505a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010505d	obj/kern/kernel.asm	/^f010505d:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0105060	obj/kern/kernel.asm	/^f0105060:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066:	53                   	push   %ebx$/;"	l
f0105067	obj/kern/kernel.asm	/^f0105067:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010506a	obj/kern/kernel.asm	/^f010506a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105070	obj/kern/kernel.asm	/^f0105070:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105076	obj/kern/kernel.asm	/^f0105076:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	e8 e2 0d 00 00       	call   f0105e60 <__udivdi3>$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e:	83 c4 18             	add    $0x18,%esp$/;"	l
f0105081	obj/kern/kernel.asm	/^f0105081:	52                   	push   %edx$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	50                   	push   %eax$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	89 f2                	mov    %esi,%edx$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	89 f8                	mov    %edi,%eax$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	e8 9e ff ff ff       	call   f010502a <printnum>$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	83 c4 20             	add    $0x20,%esp$/;"	l
f010508f	obj/kern/kernel.asm	/^f010508f:	eb 18                	jmp    f01050a9 <printnum+0x7f>$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105094	obj/kern/kernel.asm	/^f0105094:	56                   	push   %esi$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	ff d7                	call   *%edi$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	eb 03                	jmp    f01050a2 <printnum+0x78>$/;"	l
f010509f	obj/kern/kernel.asm	/^f010509f:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	85 db                	test   %ebx,%ebx$/;"	l
f01050a7	obj/kern/kernel.asm	/^f01050a7:	7f e8                	jg     f0105091 <printnum+0x67>$/;"	l
f01050a9	obj/kern/kernel.asm	/^f01050a9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	56                   	push   %esi$/;"	l
f01050ad	obj/kern/kernel.asm	/^f01050ad:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01050b3	obj/kern/kernel.asm	/^f01050b3:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01050bc	obj/kern/kernel.asm	/^f01050bc:	e8 cf 0e 00 00       	call   f0105f90 <__umoddi3>$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	83 c4 14             	add    $0x14,%esp$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	0f be 80 c6 77 10 f0 	movsbl -0xfef883a(%eax),%eax$/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	50                   	push   %eax$/;"	l
f01050cc	obj/kern/kernel.asm	/^f01050cc:	ff d7                	call   *%edi$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050d1	obj/kern/kernel.asm	/^f01050d1:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	5b                   	pop    %ebx$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	5e                   	pop    %esi$/;"	l
f01050d6	obj/kern/kernel.asm	/^f01050d6:	5f                   	pop    %edi$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	5d                   	pop    %ebp$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	c3                   	ret    $/;"	l
f01050d9	obj/kern/kernel.asm	/^f01050d9 <getuint>:$/;"	l
f01050d9	obj/kern/kernel.asm	/^f01050d9:	55                   	push   %ebp$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da:	89 e5                	mov    %esp,%ebp$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01050df	obj/kern/kernel.asm	/^f01050df:	7e 0e                	jle    f01050ef <getuint+0x16>$/;"	l
f01050e1	obj/kern/kernel.asm	/^f01050e1:	8b 10                	mov    (%eax),%edx$/;"	l
f01050e3	obj/kern/kernel.asm	/^f01050e3:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	89 08                	mov    %ecx,(%eax)$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8:	8b 02                	mov    (%edx),%eax$/;"	l
f01050ea	obj/kern/kernel.asm	/^f01050ea:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	eb 22                	jmp    f0105111 <getuint+0x38>$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	85 d2                	test   %edx,%edx$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	74 10                	je     f0105103 <getuint+0x2a>$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	8b 10                	mov    (%eax),%edx$/;"	l
f01050f5	obj/kern/kernel.asm	/^f01050f5:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f01050f8	obj/kern/kernel.asm	/^f01050f8:	89 08                	mov    %ecx,(%eax)$/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa:	8b 02                	mov    (%edx),%eax$/;"	l
f01050fc	obj/kern/kernel.asm	/^f01050fc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105101	obj/kern/kernel.asm	/^f0105101:	eb 0e                	jmp    f0105111 <getuint+0x38>$/;"	l
f0105103	obj/kern/kernel.asm	/^f0105103:	8b 10                	mov    (%eax),%edx$/;"	l
f0105105	obj/kern/kernel.asm	/^f0105105:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108:	89 08                	mov    %ecx,(%eax)$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	8b 02                	mov    (%edx),%eax$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	5d                   	pop    %ebp$/;"	l
f0105112	obj/kern/kernel.asm	/^f0105112:	c3                   	ret    $/;"	l
f0105113	obj/kern/kernel.asm	/^f0105113 <sprintputch>:$/;"	l
f0105113	obj/kern/kernel.asm	/^f0105113:	55                   	push   %ebp$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	89 e5                	mov    %esp,%ebp$/;"	l
f0105116	obj/kern/kernel.asm	/^f0105116:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f010511d	obj/kern/kernel.asm	/^f010511d:	8b 10                	mov    (%eax),%edx$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105122	obj/kern/kernel.asm	/^f0105122:	73 0a                	jae    f010512e <sprintputch+0x1b>$/;"	l
f0105124	obj/kern/kernel.asm	/^f0105124:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0105127	obj/kern/kernel.asm	/^f0105127:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010512c	obj/kern/kernel.asm	/^f010512c:	88 02                	mov    %al,(%edx)$/;"	l
f010512e	obj/kern/kernel.asm	/^f010512e:	5d                   	pop    %ebp$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	c3                   	ret    $/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130 <printfmt>:$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	55                   	push   %ebp$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	89 e5                	mov    %esp,%ebp$/;"	l
f0105133	obj/kern/kernel.asm	/^f0105133:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	50                   	push   %eax$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010513d	obj/kern/kernel.asm	/^f010513d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	e8 05 00 00 00       	call   f010514d <vprintfmt>$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	83 c4 10             	add    $0x10,%esp$/;"	l
f010514b	obj/kern/kernel.asm	/^f010514b:	c9                   	leave  $/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	c3                   	ret    $/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d <vprintfmt>:$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	55                   	push   %ebp$/;"	l
f010514e	obj/kern/kernel.asm	/^f010514e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	57                   	push   %edi$/;"	l
f0105151	obj/kern/kernel.asm	/^f0105151:	56                   	push   %esi$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	53                   	push   %ebx$/;"	l
f0105153	obj/kern/kernel.asm	/^f0105153:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105159	obj/kern/kernel.asm	/^f0105159:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010515c	obj/kern/kernel.asm	/^f010515c:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010515f	obj/kern/kernel.asm	/^f010515f:	eb 12                	jmp    f0105173 <vprintfmt+0x26>$/;"	l
f0105161	obj/kern/kernel.asm	/^f0105161:	85 c0                	test   %eax,%eax$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	0f 84 89 03 00 00    	je     f01054f2 <vprintfmt+0x3a5>$/;"	l
f0105169	obj/kern/kernel.asm	/^f0105169:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	53                   	push   %ebx$/;"	l
f010516d	obj/kern/kernel.asm	/^f010516d:	50                   	push   %eax$/;"	l
f010516e	obj/kern/kernel.asm	/^f010516e:	ff d6                	call   *%esi$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105173	obj/kern/kernel.asm	/^f0105173:	83 c7 01             	add    $0x1,%edi$/;"	l
f0105176	obj/kern/kernel.asm	/^f0105176:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f010517d	obj/kern/kernel.asm	/^f010517d:	75 e2                	jne    f0105161 <vprintfmt+0x14>$/;"	l
f010517f	obj/kern/kernel.asm	/^f010517f:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f0105183	obj/kern/kernel.asm	/^f0105183:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010519d	obj/kern/kernel.asm	/^f010519d:	eb 07                	jmp    f01051a6 <vprintfmt+0x59>$/;"	l
f010519f	obj/kern/kernel.asm	/^f010519f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01051a2	obj/kern/kernel.asm	/^f01051a2:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f01051a9	obj/kern/kernel.asm	/^f01051a9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f01051af	obj/kern/kernel.asm	/^f01051af:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	83 e8 23             	sub    $0x23,%eax$/;"	l
f01051b5	obj/kern/kernel.asm	/^f01051b5:	3c 55                	cmp    $0x55,%al$/;"	l
f01051b7	obj/kern/kernel.asm	/^f01051b7:	0f 87 1a 03 00 00    	ja     f01054d7 <vprintfmt+0x38a>$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	ff 24 85 00 79 10 f0 	jmp    *-0xfef8700(,%eax,4)$/;"	l
f01051c7	obj/kern/kernel.asm	/^f01051c7:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	eb d6                	jmp    f01051a6 <vprintfmt+0x59>$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01051d3	obj/kern/kernel.asm	/^f01051d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01051db	obj/kern/kernel.asm	/^f01051db:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de:	8d 44 41 d0          	lea    -0x30(%ecx,%eax,2),%eax$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	0f be 0f             	movsbl (%edi),%ecx$/;"	l
f01051e5	obj/kern/kernel.asm	/^f01051e5:	8d 51 d0             	lea    -0x30(%ecx),%edx$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f01051eb	obj/kern/kernel.asm	/^f01051eb:	77 39                	ja     f0105226 <vprintfmt+0xd9>$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	83 c7 01             	add    $0x1,%edi$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	eb e9                	jmp    f01051db <vprintfmt+0x8e>$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051f5	obj/kern/kernel.asm	/^f01051f5:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f01051f8	obj/kern/kernel.asm	/^f01051f8:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	8b 00                	mov    (%eax),%eax$/;"	l
f01051fd	obj/kern/kernel.asm	/^f01051fd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105203	obj/kern/kernel.asm	/^f0105203:	eb 27                	jmp    f010522c <vprintfmt+0xdf>$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	85 c0                	test   %eax,%eax$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010520f	obj/kern/kernel.asm	/^f010520f:	0f 49 c8             	cmovns %eax,%ecx$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105218	obj/kern/kernel.asm	/^f0105218:	eb 8c                	jmp    f01051a6 <vprintfmt+0x59>$/;"	l
f010521a	obj/kern/kernel.asm	/^f010521a:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224:	eb 80                	jmp    f01051a6 <vprintfmt+0x59>$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105229	obj/kern/kernel.asm	/^f0105229:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	0f 89 70 ff ff ff    	jns    f01051a6 <vprintfmt+0x59>$/;"	l
f0105236	obj/kern/kernel.asm	/^f0105236:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010523c	obj/kern/kernel.asm	/^f010523c:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	e9 5e ff ff ff       	jmp    f01051a6 <vprintfmt+0x59>$/;"	l
f0105248	obj/kern/kernel.asm	/^f0105248:	83 c2 01             	add    $0x1,%edx$/;"	l
f010524b	obj/kern/kernel.asm	/^f010524b:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	e9 53 ff ff ff       	jmp    f01051a6 <vprintfmt+0x59>$/;"	l
f0105253	obj/kern/kernel.asm	/^f0105253:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105256	obj/kern/kernel.asm	/^f0105256:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010525c	obj/kern/kernel.asm	/^f010525c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010525f	obj/kern/kernel.asm	/^f010525f:	53                   	push   %ebx$/;"	l
f0105260	obj/kern/kernel.asm	/^f0105260:	ff 30                	pushl  (%eax)$/;"	l
f0105262	obj/kern/kernel.asm	/^f0105262:	ff d6                	call   *%esi$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105267	obj/kern/kernel.asm	/^f0105267:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	e9 04 ff ff ff       	jmp    f0105173 <vprintfmt+0x26>$/;"	l
f010526f	obj/kern/kernel.asm	/^f010526f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	8b 00                	mov    (%eax),%eax$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	99                   	cltd   $/;"	l
f010527b	obj/kern/kernel.asm	/^f010527b:	31 d0                	xor    %edx,%eax$/;"	l
f010527d	obj/kern/kernel.asm	/^f010527d:	29 d0                	sub    %edx,%eax$/;"	l
f010527f	obj/kern/kernel.asm	/^f010527f:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	7f 0b                	jg     f010528f <vprintfmt+0x142>$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	8b 14 85 60 7a 10 f0 	mov    -0xfef85a0(,%eax,4),%edx$/;"	l
f010528b	obj/kern/kernel.asm	/^f010528b:	85 d2                	test   %edx,%edx$/;"	l
f010528d	obj/kern/kernel.asm	/^f010528d:	75 18                	jne    f01052a7 <vprintfmt+0x15a>$/;"	l
f010528f	obj/kern/kernel.asm	/^f010528f:	50                   	push   %eax$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	68 de 77 10 f0       	push   $0xf01077de$/;"	l
f0105295	obj/kern/kernel.asm	/^f0105295:	53                   	push   %ebx$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	56                   	push   %esi$/;"	l
f0105297	obj/kern/kernel.asm	/^f0105297:	e8 94 fe ff ff       	call   f0105130 <printfmt>$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010529f	obj/kern/kernel.asm	/^f010529f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	e9 cc fe ff ff       	jmp    f0105173 <vprintfmt+0x26>$/;"	l
f01052a7	obj/kern/kernel.asm	/^f01052a7:	52                   	push   %edx$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	68 a0 67 10 f0       	push   $0xf01067a0$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	53                   	push   %ebx$/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae:	56                   	push   %esi$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	e8 7c fe ff ff       	call   f0105130 <printfmt>$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01052b7	obj/kern/kernel.asm	/^f01052b7:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01052ba	obj/kern/kernel.asm	/^f01052ba:	e9 b4 fe ff ff       	jmp    f0105173 <vprintfmt+0x26>$/;"	l
f01052bf	obj/kern/kernel.asm	/^f01052bf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	8b 38                	mov    (%eax),%edi$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	85 ff                	test   %edi,%edi$/;"	l
f01052cc	obj/kern/kernel.asm	/^f01052cc:	b8 d7 77 10 f0       	mov    $0xf01077d7,%eax$/;"	l
f01052d1	obj/kern/kernel.asm	/^f01052d1:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01052d4	obj/kern/kernel.asm	/^f01052d4:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	0f 8e 94 00 00 00    	jle    f0105372 <vprintfmt+0x225>$/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2:	0f 84 98 00 00 00    	je     f0105380 <vprintfmt+0x233>$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01052eb	obj/kern/kernel.asm	/^f01052eb:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01052ee	obj/kern/kernel.asm	/^f01052ee:	57                   	push   %edi$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	e8 77 03 00 00       	call   f010566b <strnlen>$/;"	l
f01052f4	obj/kern/kernel.asm	/^f01052f4:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	29 c1                	sub    %eax,%ecx$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f01052fc	obj/kern/kernel.asm	/^f01052fc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01052ff	obj/kern/kernel.asm	/^f01052ff:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f0105303	obj/kern/kernel.asm	/^f0105303:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105306	obj/kern/kernel.asm	/^f0105306:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0105309	obj/kern/kernel.asm	/^f0105309:	89 cf                	mov    %ecx,%edi$/;"	l
f010530b	obj/kern/kernel.asm	/^f010530b:	eb 0f                	jmp    f010531c <vprintfmt+0x1cf>$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	53                   	push   %ebx$/;"	l
f0105311	obj/kern/kernel.asm	/^f0105311:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	ff d6                	call   *%esi$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105319	obj/kern/kernel.asm	/^f0105319:	83 c4 10             	add    $0x10,%esp$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	85 ff                	test   %edi,%edi$/;"	l
f010531e	obj/kern/kernel.asm	/^f010531e:	7f ed                	jg     f010530d <vprintfmt+0x1c0>$/;"	l
f0105320	obj/kern/kernel.asm	/^f0105320:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0105323	obj/kern/kernel.asm	/^f0105323:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326:	85 c9                	test   %ecx,%ecx$/;"	l
f0105328	obj/kern/kernel.asm	/^f0105328:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010532d	obj/kern/kernel.asm	/^f010532d:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	29 c1                	sub    %eax,%ecx$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0105335	obj/kern/kernel.asm	/^f0105335:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0105338	obj/kern/kernel.asm	/^f0105338:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f010533b	obj/kern/kernel.asm	/^f010533b:	89 cb                	mov    %ecx,%ebx$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	eb 4d                	jmp    f010538c <vprintfmt+0x23f>$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	74 1b                	je     f0105360 <vprintfmt+0x213>$/;"	l
f0105345	obj/kern/kernel.asm	/^f0105345:	0f be c0             	movsbl %al,%eax$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	83 e8 20             	sub    $0x20,%eax$/;"	l
f010534b	obj/kern/kernel.asm	/^f010534b:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	76 10                	jbe    f0105360 <vprintfmt+0x213>$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105356	obj/kern/kernel.asm	/^f0105356:	6a 3f                	push   $0x3f$/;"	l
f0105358	obj/kern/kernel.asm	/^f0105358:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010535b	obj/kern/kernel.asm	/^f010535b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010535e	obj/kern/kernel.asm	/^f010535e:	eb 0d                	jmp    f010536d <vprintfmt+0x220>$/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105366	obj/kern/kernel.asm	/^f0105366:	52                   	push   %edx$/;"	l
f0105367	obj/kern/kernel.asm	/^f0105367:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010536a	obj/kern/kernel.asm	/^f010536a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	eb 1a                	jmp    f010538c <vprintfmt+0x23f>$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0105378	obj/kern/kernel.asm	/^f0105378:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f010537b	obj/kern/kernel.asm	/^f010537b:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e:	eb 0c                	jmp    f010538c <vprintfmt+0x23f>$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0105386	obj/kern/kernel.asm	/^f0105386:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0105389	obj/kern/kernel.asm	/^f0105389:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	83 c7 01             	add    $0x1,%edi$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	0f be d0             	movsbl %al,%edx$/;"	l
f0105396	obj/kern/kernel.asm	/^f0105396:	85 d2                	test   %edx,%edx$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	74 23                	je     f01053bd <vprintfmt+0x270>$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	85 f6                	test   %esi,%esi$/;"	l
f010539c	obj/kern/kernel.asm	/^f010539c:	78 a1                	js     f010533f <vprintfmt+0x1f2>$/;"	l
f010539e	obj/kern/kernel.asm	/^f010539e:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01053a1	obj/kern/kernel.asm	/^f01053a1:	79 9c                	jns    f010533f <vprintfmt+0x1f2>$/;"	l
f01053a3	obj/kern/kernel.asm	/^f01053a3:	89 df                	mov    %ebx,%edi$/;"	l
f01053a5	obj/kern/kernel.asm	/^f01053a5:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01053ab	obj/kern/kernel.asm	/^f01053ab:	eb 18                	jmp    f01053c5 <vprintfmt+0x278>$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	53                   	push   %ebx$/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1:	6a 20                	push   $0x20$/;"	l
f01053b3	obj/kern/kernel.asm	/^f01053b3:	ff d6                	call   *%esi$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01053b8	obj/kern/kernel.asm	/^f01053b8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01053bb	obj/kern/kernel.asm	/^f01053bb:	eb 08                	jmp    f01053c5 <vprintfmt+0x278>$/;"	l
f01053bd	obj/kern/kernel.asm	/^f01053bd:	89 df                	mov    %ebx,%edi$/;"	l
f01053bf	obj/kern/kernel.asm	/^f01053bf:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01053c2	obj/kern/kernel.asm	/^f01053c2:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01053c5	obj/kern/kernel.asm	/^f01053c5:	85 ff                	test   %edi,%edi$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	7f e4                	jg     f01053ad <vprintfmt+0x260>$/;"	l
f01053c9	obj/kern/kernel.asm	/^f01053c9:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	e9 a2 fd ff ff       	jmp    f0105173 <vprintfmt+0x26>$/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01053d4	obj/kern/kernel.asm	/^f01053d4:	7e 16                	jle    f01053ec <vprintfmt+0x29f>$/;"	l
f01053d6	obj/kern/kernel.asm	/^f01053d6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01053d9	obj/kern/kernel.asm	/^f01053d9:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f01053dc	obj/kern/kernel.asm	/^f01053dc:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01053df	obj/kern/kernel.asm	/^f01053df:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01053e2	obj/kern/kernel.asm	/^f01053e2:	8b 00                	mov    (%eax),%eax$/;"	l
f01053e4	obj/kern/kernel.asm	/^f01053e4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01053ea	obj/kern/kernel.asm	/^f01053ea:	eb 32                	jmp    f010541e <vprintfmt+0x2d1>$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	85 d2                	test   %edx,%edx$/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee:	74 18                	je     f0105408 <vprintfmt+0x2bb>$/;"	l
f01053f0	obj/kern/kernel.asm	/^f01053f0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	8b 00                	mov    (%eax),%eax$/;"	l
f01053fb	obj/kern/kernel.asm	/^f01053fb:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe:	89 c1                	mov    %eax,%ecx$/;"	l
f0105400	obj/kern/kernel.asm	/^f0105400:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	eb 16                	jmp    f010541e <vprintfmt+0x2d1>$/;"	l
f0105408	obj/kern/kernel.asm	/^f0105408:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010540e	obj/kern/kernel.asm	/^f010540e:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105411	obj/kern/kernel.asm	/^f0105411:	8b 00                	mov    (%eax),%eax$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	89 c1                	mov    %eax,%ecx$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f010541b	obj/kern/kernel.asm	/^f010541b:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105421	obj/kern/kernel.asm	/^f0105421:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105424	obj/kern/kernel.asm	/^f0105424:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105429	obj/kern/kernel.asm	/^f0105429:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	79 74                	jns    f01054a3 <vprintfmt+0x356>$/;"	l
f010542f	obj/kern/kernel.asm	/^f010542f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432:	53                   	push   %ebx$/;"	l
f0105433	obj/kern/kernel.asm	/^f0105433:	6a 2d                	push   $0x2d$/;"	l
f0105435	obj/kern/kernel.asm	/^f0105435:	ff d6                	call   *%esi$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010543a	obj/kern/kernel.asm	/^f010543a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010543d	obj/kern/kernel.asm	/^f010543d:	f7 d8                	neg    %eax$/;"	l
f010543f	obj/kern/kernel.asm	/^f010543f:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0105442	obj/kern/kernel.asm	/^f0105442:	f7 da                	neg    %edx$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105447	obj/kern/kernel.asm	/^f0105447:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f010544c	obj/kern/kernel.asm	/^f010544c:	eb 55                	jmp    f01054a3 <vprintfmt+0x356>$/;"	l
f010544e	obj/kern/kernel.asm	/^f010544e:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	e8 83 fc ff ff       	call   f01050d9 <getuint>$/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f010545b	obj/kern/kernel.asm	/^f010545b:	eb 46                	jmp    f01054a3 <vprintfmt+0x356>$/;"	l
f010545d	obj/kern/kernel.asm	/^f010545d:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460:	e8 74 fc ff ff       	call   f01050d9 <getuint>$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f010546a	obj/kern/kernel.asm	/^f010546a:	eb 37                	jmp    f01054a3 <vprintfmt+0x356>$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	53                   	push   %ebx$/;"	l
f0105470	obj/kern/kernel.asm	/^f0105470:	6a 30                	push   $0x30$/;"	l
f0105472	obj/kern/kernel.asm	/^f0105472:	ff d6                	call   *%esi$/;"	l
f0105474	obj/kern/kernel.asm	/^f0105474:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105477	obj/kern/kernel.asm	/^f0105477:	53                   	push   %ebx$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	6a 78                	push   $0x78$/;"	l
f010547a	obj/kern/kernel.asm	/^f010547a:	ff d6                	call   *%esi$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010547f	obj/kern/kernel.asm	/^f010547f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105485	obj/kern/kernel.asm	/^f0105485:	8b 00                	mov    (%eax),%eax$/;"	l
f0105487	obj/kern/kernel.asm	/^f0105487:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010548f	obj/kern/kernel.asm	/^f010548f:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0105494	obj/kern/kernel.asm	/^f0105494:	eb 0d                	jmp    f01054a3 <vprintfmt+0x356>$/;"	l
f0105496	obj/kern/kernel.asm	/^f0105496:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	e8 3b fc ff ff       	call   f01050d9 <getuint>$/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f01054a3	obj/kern/kernel.asm	/^f01054a3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f01054aa	obj/kern/kernel.asm	/^f01054aa:	57                   	push   %edi$/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	51                   	push   %ecx$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	52                   	push   %edx$/;"	l
f01054b0	obj/kern/kernel.asm	/^f01054b0:	50                   	push   %eax$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	89 da                	mov    %ebx,%edx$/;"	l
f01054b3	obj/kern/kernel.asm	/^f01054b3:	89 f0                	mov    %esi,%eax$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	e8 70 fb ff ff       	call   f010502a <printnum>$/;"	l
f01054ba	obj/kern/kernel.asm	/^f01054ba:	83 c4 20             	add    $0x20,%esp$/;"	l
f01054bd	obj/kern/kernel.asm	/^f01054bd:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	e9 ae fc ff ff       	jmp    f0105173 <vprintfmt+0x26>$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	53                   	push   %ebx$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	51                   	push   %ecx$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	ff d6                	call   *%esi$/;"	l
f01054cc	obj/kern/kernel.asm	/^f01054cc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054cf	obj/kern/kernel.asm	/^f01054cf:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01054d2	obj/kern/kernel.asm	/^f01054d2:	e9 9c fc ff ff       	jmp    f0105173 <vprintfmt+0x26>$/;"	l
f01054d7	obj/kern/kernel.asm	/^f01054d7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01054da	obj/kern/kernel.asm	/^f01054da:	53                   	push   %ebx$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	6a 25                	push   $0x25$/;"	l
f01054dd	obj/kern/kernel.asm	/^f01054dd:	ff d6                	call   *%esi$/;"	l
f01054df	obj/kern/kernel.asm	/^f01054df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2:	eb 03                	jmp    f01054e7 <vprintfmt+0x39a>$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	80 7f ff 25          	cmpb   $0x25,-0x1(%edi)$/;"	l
f01054eb	obj/kern/kernel.asm	/^f01054eb:	75 f7                	jne    f01054e4 <vprintfmt+0x397>$/;"	l
f01054ed	obj/kern/kernel.asm	/^f01054ed:	e9 81 fc ff ff       	jmp    f0105173 <vprintfmt+0x26>$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	5b                   	pop    %ebx$/;"	l
f01054f6	obj/kern/kernel.asm	/^f01054f6:	5e                   	pop    %esi$/;"	l
f01054f7	obj/kern/kernel.asm	/^f01054f7:	5f                   	pop    %edi$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	5d                   	pop    %ebp$/;"	l
f01054f9	obj/kern/kernel.asm	/^f01054f9:	c3                   	ret    $/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa <vsnprintf>:$/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa:	55                   	push   %ebp$/;"	l
f01054fb	obj/kern/kernel.asm	/^f01054fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105500	obj/kern/kernel.asm	/^f0105500:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105509	obj/kern/kernel.asm	/^f0105509:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f010550d	obj/kern/kernel.asm	/^f010550d:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105517	obj/kern/kernel.asm	/^f0105517:	85 c0                	test   %eax,%eax$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	74 26                	je     f0105541 <vsnprintf+0x47>$/;"	l
f010551b	obj/kern/kernel.asm	/^f010551b:	85 d2                	test   %edx,%edx$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	7e 22                	jle    f0105541 <vsnprintf+0x47>$/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105525	obj/kern/kernel.asm	/^f0105525:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105528	obj/kern/kernel.asm	/^f0105528:	50                   	push   %eax$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	68 13 51 10 f0       	push   $0xf0105113$/;"	l
f010552e	obj/kern/kernel.asm	/^f010552e:	e8 1a fc ff ff       	call   f010514d <vprintfmt>$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010553c	obj/kern/kernel.asm	/^f010553c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010553f	obj/kern/kernel.asm	/^f010553f:	eb 05                	jmp    f0105546 <vsnprintf+0x4c>$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	c9                   	leave  $/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	c3                   	ret    $/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548 <snprintf>:$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	55                   	push   %ebp$/;"	l
f0105549	obj/kern/kernel.asm	/^f0105549:	89 e5                	mov    %esp,%ebp$/;"	l
f010554b	obj/kern/kernel.asm	/^f010554b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	50                   	push   %eax$/;"	l
f0105552	obj/kern/kernel.asm	/^f0105552:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105558	obj/kern/kernel.asm	/^f0105558:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	e8 9a ff ff ff       	call   f01054fa <vsnprintf>$/;"	l
f0105560	obj/kern/kernel.asm	/^f0105560:	c9                   	leave  $/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	c3                   	ret    $/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562 <readline>:$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	55                   	push   %ebp$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	89 e5                	mov    %esp,%ebp$/;"	l
f0105565	obj/kern/kernel.asm	/^f0105565:	57                   	push   %edi$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566:	56                   	push   %esi$/;"	l
f0105567	obj/kern/kernel.asm	/^f0105567:	53                   	push   %ebx$/;"	l
f0105568	obj/kern/kernel.asm	/^f0105568:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010556b	obj/kern/kernel.asm	/^f010556b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010556e	obj/kern/kernel.asm	/^f010556e:	85 c0                	test   %eax,%eax$/;"	l
f0105570	obj/kern/kernel.asm	/^f0105570:	74 11                	je     f0105583 <readline+0x21>$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	50                   	push   %eax$/;"	l
f0105576	obj/kern/kernel.asm	/^f0105576:	68 a0 67 10 f0       	push   $0xf01067a0$/;"	l
f010557b	obj/kern/kernel.asm	/^f010557b:	e8 3d e5 ff ff       	call   f0103abd <cprintf>$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105586	obj/kern/kernel.asm	/^f0105586:	6a 00                	push   $0x0$/;"	l
f0105588	obj/kern/kernel.asm	/^f0105588:	e8 3c b1 ff ff       	call   f01006c9 <iscons>$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	89 c7                	mov    %eax,%edi$/;"	l
f010558f	obj/kern/kernel.asm	/^f010558f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105592	obj/kern/kernel.asm	/^f0105592:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105597	obj/kern/kernel.asm	/^f0105597:	e8 1c b1 ff ff       	call   f01006b8 <getchar>$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	89 c3                	mov    %eax,%ebx$/;"	l
f010559e	obj/kern/kernel.asm	/^f010559e:	85 c0                	test   %eax,%eax$/;"	l
f01055a0	obj/kern/kernel.asm	/^f01055a0:	79 29                	jns    f01055cb <readline+0x69>$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	0f 84 9b 00 00 00    	je     f010564b <readline+0xe9>$/;"	l
f01055b0	obj/kern/kernel.asm	/^f01055b0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01055b3	obj/kern/kernel.asm	/^f01055b3:	53                   	push   %ebx$/;"	l
f01055b4	obj/kern/kernel.asm	/^f01055b4:	68 bf 7a 10 f0       	push   $0xf0107abf$/;"	l
f01055b9	obj/kern/kernel.asm	/^f01055b9:	e8 ff e4 ff ff       	call   f0103abd <cprintf>$/;"	l
f01055be	obj/kern/kernel.asm	/^f01055be:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055c1	obj/kern/kernel.asm	/^f01055c1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	e9 80 00 00 00       	jmp    f010564b <readline+0xe9>$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	0f 94 c2             	sete   %dl$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	0f 94 c0             	sete   %al$/;"	l
f01055d7	obj/kern/kernel.asm	/^f01055d7:	08 c2                	or     %al,%dl$/;"	l
f01055d9	obj/kern/kernel.asm	/^f01055d9:	74 1a                	je     f01055f5 <readline+0x93>$/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	85 f6                	test   %esi,%esi$/;"	l
f01055dd	obj/kern/kernel.asm	/^f01055dd:	7e 16                	jle    f01055f5 <readline+0x93>$/;"	l
f01055df	obj/kern/kernel.asm	/^f01055df:	85 ff                	test   %edi,%edi$/;"	l
f01055e1	obj/kern/kernel.asm	/^f01055e1:	74 0d                	je     f01055f0 <readline+0x8e>$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	6a 08                	push   $0x8$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	e8 bb b0 ff ff       	call   f01006a8 <cputchar>$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01055f3	obj/kern/kernel.asm	/^f01055f3:	eb a2                	jmp    f0105597 <readline+0x35>$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	7e 26                	jle    f0105620 <readline+0xbe>$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	7f 1e                	jg     f0105620 <readline+0xbe>$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	85 ff                	test   %edi,%edi$/;"	l
f0105604	obj/kern/kernel.asm	/^f0105604:	74 0c                	je     f0105612 <readline+0xb0>$/;"	l
f0105606	obj/kern/kernel.asm	/^f0105606:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	53                   	push   %ebx$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	e8 99 b0 ff ff       	call   f01006a8 <cputchar>$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105612	obj/kern/kernel.asm	/^f0105612:	88 9e e0 2b 41 f0    	mov    %bl,-0xfbed420(%esi)$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f010561b	obj/kern/kernel.asm	/^f010561b:	e9 77 ff ff ff       	jmp    f0105597 <readline+0x35>$/;"	l
f0105620	obj/kern/kernel.asm	/^f0105620:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105623	obj/kern/kernel.asm	/^f0105623:	74 09                	je     f010562e <readline+0xcc>$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105628	obj/kern/kernel.asm	/^f0105628:	0f 85 69 ff ff ff    	jne    f0105597 <readline+0x35>$/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	85 ff                	test   %edi,%edi$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	74 0d                	je     f010563f <readline+0xdd>$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105635	obj/kern/kernel.asm	/^f0105635:	6a 0a                	push   $0xa$/;"	l
f0105637	obj/kern/kernel.asm	/^f0105637:	e8 6c b0 ff ff       	call   f01006a8 <cputchar>$/;"	l
f010563c	obj/kern/kernel.asm	/^f010563c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010563f	obj/kern/kernel.asm	/^f010563f:	c6 86 e0 2b 41 f0 00 	movb   $0x0,-0xfbed420(%esi)$/;"	l
f0105646	obj/kern/kernel.asm	/^f0105646:	b8 e0 2b 41 f0       	mov    $0xf0412be0,%eax$/;"	l
f010564b	obj/kern/kernel.asm	/^f010564b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010564e	obj/kern/kernel.asm	/^f010564e:	5b                   	pop    %ebx$/;"	l
f010564f	obj/kern/kernel.asm	/^f010564f:	5e                   	pop    %esi$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	5f                   	pop    %edi$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	5d                   	pop    %ebp$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	c3                   	ret    $/;"	l
f0105653	obj/kern/kernel.asm	/^f0105653 <strlen>:$/;"	l
f0105653	obj/kern/kernel.asm	/^f0105653:	55                   	push   %ebp$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	89 e5                	mov    %esp,%ebp$/;"	l
f0105656	obj/kern/kernel.asm	/^f0105656:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105659	obj/kern/kernel.asm	/^f0105659:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010565e	obj/kern/kernel.asm	/^f010565e:	eb 03                	jmp    f0105663 <strlen+0x10>$/;"	l
f0105660	obj/kern/kernel.asm	/^f0105660:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105663	obj/kern/kernel.asm	/^f0105663:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105667	obj/kern/kernel.asm	/^f0105667:	75 f7                	jne    f0105660 <strlen+0xd>$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	5d                   	pop    %ebp$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	c3                   	ret    $/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b <strnlen>:$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	55                   	push   %ebp$/;"	l
f010566c	obj/kern/kernel.asm	/^f010566c:	89 e5                	mov    %esp,%ebp$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105671	obj/kern/kernel.asm	/^f0105671:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105674	obj/kern/kernel.asm	/^f0105674:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105679	obj/kern/kernel.asm	/^f0105679:	eb 03                	jmp    f010567e <strnlen+0x13>$/;"	l
f010567b	obj/kern/kernel.asm	/^f010567b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	39 c2                	cmp    %eax,%edx$/;"	l
f0105680	obj/kern/kernel.asm	/^f0105680:	74 08                	je     f010568a <strnlen+0x1f>$/;"	l
f0105682	obj/kern/kernel.asm	/^f0105682:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0105686	obj/kern/kernel.asm	/^f0105686:	75 f3                	jne    f010567b <strnlen+0x10>$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	89 d0                	mov    %edx,%eax$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	5d                   	pop    %ebp$/;"	l
f010568b	obj/kern/kernel.asm	/^f010568b:	c3                   	ret    $/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c <strcpy>:$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	55                   	push   %ebp$/;"	l
f010568d	obj/kern/kernel.asm	/^f010568d:	89 e5                	mov    %esp,%ebp$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	53                   	push   %ebx$/;"	l
f0105690	obj/kern/kernel.asm	/^f0105690:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105693	obj/kern/kernel.asm	/^f0105693:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105696	obj/kern/kernel.asm	/^f0105696:	89 c2                	mov    %eax,%edx$/;"	l
f0105698	obj/kern/kernel.asm	/^f0105698:	83 c2 01             	add    $0x1,%edx$/;"	l
f010569b	obj/kern/kernel.asm	/^f010569b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f01056a2	obj/kern/kernel.asm	/^f01056a2:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	84 db                	test   %bl,%bl$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	75 ef                	jne    f0105698 <strcpy+0xc>$/;"	l
f01056a9	obj/kern/kernel.asm	/^f01056a9:	5b                   	pop    %ebx$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	5d                   	pop    %ebp$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	c3                   	ret    $/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac <strcat>:$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	55                   	push   %ebp$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	53                   	push   %ebx$/;"	l
f01056b0	obj/kern/kernel.asm	/^f01056b0:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01056b3	obj/kern/kernel.asm	/^f01056b3:	53                   	push   %ebx$/;"	l
f01056b4	obj/kern/kernel.asm	/^f01056b4:	e8 9a ff ff ff       	call   f0105653 <strlen>$/;"	l
f01056b9	obj/kern/kernel.asm	/^f01056b9:	83 c4 04             	add    $0x4,%esp$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	01 d8                	add    %ebx,%eax$/;"	l
f01056c1	obj/kern/kernel.asm	/^f01056c1:	50                   	push   %eax$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	e8 c5 ff ff ff       	call   f010568c <strcpy>$/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7:	89 d8                	mov    %ebx,%eax$/;"	l
f01056c9	obj/kern/kernel.asm	/^f01056c9:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	c9                   	leave  $/;"	l
f01056cd	obj/kern/kernel.asm	/^f01056cd:	c3                   	ret    $/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce <strncpy>:$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	55                   	push   %ebp$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01056d1	obj/kern/kernel.asm	/^f01056d1:	56                   	push   %esi$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	53                   	push   %ebx$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01056d9	obj/kern/kernel.asm	/^f01056d9:	89 f3                	mov    %esi,%ebx$/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	89 f2                	mov    %esi,%edx$/;"	l
f01056e0	obj/kern/kernel.asm	/^f01056e0:	eb 0f                	jmp    f01056f1 <strncpy+0x23>$/;"	l
f01056e2	obj/kern/kernel.asm	/^f01056e2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01056e8	obj/kern/kernel.asm	/^f01056e8:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01056eb	obj/kern/kernel.asm	/^f01056eb:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f01056ee	obj/kern/kernel.asm	/^f01056ee:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	39 da                	cmp    %ebx,%edx$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	75 ed                	jne    f01056e2 <strncpy+0x14>$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	89 f0                	mov    %esi,%eax$/;"	l
f01056f7	obj/kern/kernel.asm	/^f01056f7:	5b                   	pop    %ebx$/;"	l
f01056f8	obj/kern/kernel.asm	/^f01056f8:	5e                   	pop    %esi$/;"	l
f01056f9	obj/kern/kernel.asm	/^f01056f9:	5d                   	pop    %ebp$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	c3                   	ret    $/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb <strlcpy>:$/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	55                   	push   %ebp$/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01056fe	obj/kern/kernel.asm	/^f01056fe:	56                   	push   %esi$/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	53                   	push   %ebx$/;"	l
f0105700	obj/kern/kernel.asm	/^f0105700:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105703	obj/kern/kernel.asm	/^f0105703:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105706	obj/kern/kernel.asm	/^f0105706:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105709	obj/kern/kernel.asm	/^f0105709:	89 f0                	mov    %esi,%eax$/;"	l
f010570b	obj/kern/kernel.asm	/^f010570b:	85 d2                	test   %edx,%edx$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	74 21                	je     f0105730 <strlcpy+0x35>$/;"	l
f010570f	obj/kern/kernel.asm	/^f010570f:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	89 f2                	mov    %esi,%edx$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	eb 09                	jmp    f0105720 <strlcpy+0x25>$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	83 c2 01             	add    $0x1,%edx$/;"	l
f010571a	obj/kern/kernel.asm	/^f010571a:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010571d	obj/kern/kernel.asm	/^f010571d:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105720	obj/kern/kernel.asm	/^f0105720:	39 c2                	cmp    %eax,%edx$/;"	l
f0105722	obj/kern/kernel.asm	/^f0105722:	74 09                	je     f010572d <strlcpy+0x32>$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0105727	obj/kern/kernel.asm	/^f0105727:	84 db                	test   %bl,%bl$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	75 ec                	jne    f0105717 <strlcpy+0x1c>$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	89 d0                	mov    %edx,%eax$/;"	l
f010572d	obj/kern/kernel.asm	/^f010572d:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730:	29 f0                	sub    %esi,%eax$/;"	l
f0105732	obj/kern/kernel.asm	/^f0105732:	5b                   	pop    %ebx$/;"	l
f0105733	obj/kern/kernel.asm	/^f0105733:	5e                   	pop    %esi$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	5d                   	pop    %ebp$/;"	l
f0105735	obj/kern/kernel.asm	/^f0105735:	c3                   	ret    $/;"	l
f0105736	obj/kern/kernel.asm	/^f0105736 <strcmp>:$/;"	l
f0105736	obj/kern/kernel.asm	/^f0105736:	55                   	push   %ebp$/;"	l
f0105737	obj/kern/kernel.asm	/^f0105737:	89 e5                	mov    %esp,%ebp$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010573c	obj/kern/kernel.asm	/^f010573c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010573f	obj/kern/kernel.asm	/^f010573f:	eb 06                	jmp    f0105747 <strcmp+0x11>$/;"	l
f0105741	obj/kern/kernel.asm	/^f0105741:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010574a	obj/kern/kernel.asm	/^f010574a:	84 c0                	test   %al,%al$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	74 04                	je     f0105752 <strcmp+0x1c>$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	3a 02                	cmp    (%edx),%al$/;"	l
f0105750	obj/kern/kernel.asm	/^f0105750:	74 ef                	je     f0105741 <strcmp+0xb>$/;"	l
f0105752	obj/kern/kernel.asm	/^f0105752:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	29 d0                	sub    %edx,%eax$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	5d                   	pop    %ebp$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	c3                   	ret    $/;"	l
f010575c	obj/kern/kernel.asm	/^f010575c <strncmp>:$/;"	l
f010575c	obj/kern/kernel.asm	/^f010575c:	55                   	push   %ebp$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	89 e5                	mov    %esp,%ebp$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	53                   	push   %ebx$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105763	obj/kern/kernel.asm	/^f0105763:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105766	obj/kern/kernel.asm	/^f0105766:	89 c3                	mov    %eax,%ebx$/;"	l
f0105768	obj/kern/kernel.asm	/^f0105768:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	eb 06                	jmp    f0105773 <strncmp+0x17>$/;"	l
f010576d	obj/kern/kernel.asm	/^f010576d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	74 15                	je     f010578c <strncmp+0x30>$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f010577a	obj/kern/kernel.asm	/^f010577a:	84 c9                	test   %cl,%cl$/;"	l
f010577c	obj/kern/kernel.asm	/^f010577c:	74 04                	je     f0105782 <strncmp+0x26>$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	74 eb                	je     f010576d <strncmp+0x11>$/;"	l
f0105782	obj/kern/kernel.asm	/^f0105782:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105785	obj/kern/kernel.asm	/^f0105785:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	29 d0                	sub    %edx,%eax$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	eb 05                	jmp    f0105791 <strncmp+0x35>$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	5b                   	pop    %ebx$/;"	l
f0105792	obj/kern/kernel.asm	/^f0105792:	5d                   	pop    %ebp$/;"	l
f0105793	obj/kern/kernel.asm	/^f0105793:	c3                   	ret    $/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794 <strchr>:$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	55                   	push   %ebp$/;"	l
f0105795	obj/kern/kernel.asm	/^f0105795:	89 e5                	mov    %esp,%ebp$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010579a	obj/kern/kernel.asm	/^f010579a:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f010579e	obj/kern/kernel.asm	/^f010579e:	eb 07                	jmp    f01057a7 <strchr+0x13>$/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0:	38 ca                	cmp    %cl,%dl$/;"	l
f01057a2	obj/kern/kernel.asm	/^f01057a2:	74 0f                	je     f01057b3 <strchr+0x1f>$/;"	l
f01057a4	obj/kern/kernel.asm	/^f01057a4:	83 c0 01             	add    $0x1,%eax$/;"	l
f01057a7	obj/kern/kernel.asm	/^f01057a7:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01057aa	obj/kern/kernel.asm	/^f01057aa:	84 d2                	test   %dl,%dl$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	75 f2                	jne    f01057a0 <strchr+0xc>$/;"	l
f01057ae	obj/kern/kernel.asm	/^f01057ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057b3	obj/kern/kernel.asm	/^f01057b3:	5d                   	pop    %ebp$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	c3                   	ret    $/;"	l
f01057b5	obj/kern/kernel.asm	/^f01057b5 <strfind>:$/;"	l
f01057b5	obj/kern/kernel.asm	/^f01057b5:	55                   	push   %ebp$/;"	l
f01057b6	obj/kern/kernel.asm	/^f01057b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01057b8	obj/kern/kernel.asm	/^f01057b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01057bb	obj/kern/kernel.asm	/^f01057bb:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01057bf	obj/kern/kernel.asm	/^f01057bf:	eb 03                	jmp    f01057c4 <strfind+0xf>$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	38 ca                	cmp    %cl,%dl$/;"	l
f01057c9	obj/kern/kernel.asm	/^f01057c9:	74 04                	je     f01057cf <strfind+0x1a>$/;"	l
f01057cb	obj/kern/kernel.asm	/^f01057cb:	84 d2                	test   %dl,%dl$/;"	l
f01057cd	obj/kern/kernel.asm	/^f01057cd:	75 f2                	jne    f01057c1 <strfind+0xc>$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	5d                   	pop    %ebp$/;"	l
f01057d0	obj/kern/kernel.asm	/^f01057d0:	c3                   	ret    $/;"	l
f01057d1	obj/kern/kernel.asm	/^f01057d1 <memset>:$/;"	l
f01057d1	obj/kern/kernel.asm	/^f01057d1:	55                   	push   %ebp$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	57                   	push   %edi$/;"	l
f01057d5	obj/kern/kernel.asm	/^f01057d5:	56                   	push   %esi$/;"	l
f01057d6	obj/kern/kernel.asm	/^f01057d6:	53                   	push   %ebx$/;"	l
f01057d7	obj/kern/kernel.asm	/^f01057d7:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01057dd	obj/kern/kernel.asm	/^f01057dd:	85 c9                	test   %ecx,%ecx$/;"	l
f01057df	obj/kern/kernel.asm	/^f01057df:	74 36                	je     f0105817 <memset+0x46>$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	75 28                	jne    f0105811 <memset+0x40>$/;"	l
f01057e9	obj/kern/kernel.asm	/^f01057e9:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01057ec	obj/kern/kernel.asm	/^f01057ec:	75 23                	jne    f0105811 <memset+0x40>$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2:	89 d3                	mov    %edx,%ebx$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01057f7	obj/kern/kernel.asm	/^f01057f7:	89 d6                	mov    %edx,%esi$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc:	89 d0                	mov    %edx,%eax$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0105801	obj/kern/kernel.asm	/^f0105801:	09 f0                	or     %esi,%eax$/;"	l
f0105803	obj/kern/kernel.asm	/^f0105803:	09 c2                	or     %eax,%edx$/;"	l
f0105805	obj/kern/kernel.asm	/^f0105805:	89 d8                	mov    %ebx,%eax$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	09 d0                	or     %edx,%eax$/;"	l
f0105809	obj/kern/kernel.asm	/^f0105809:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010580c	obj/kern/kernel.asm	/^f010580c:	fc                   	cld    $/;"	l
f010580d	obj/kern/kernel.asm	/^f010580d:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	eb 06                	jmp    f0105817 <memset+0x46>$/;"	l
f0105811	obj/kern/kernel.asm	/^f0105811:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	fc                   	cld    $/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817:	89 f8                	mov    %edi,%eax$/;"	l
f0105819	obj/kern/kernel.asm	/^f0105819:	5b                   	pop    %ebx$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	5e                   	pop    %esi$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	5f                   	pop    %edi$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	5d                   	pop    %ebp$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	c3                   	ret    $/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e <memmove>:$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	55                   	push   %ebp$/;"	l
f010581f	obj/kern/kernel.asm	/^f010581f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	57                   	push   %edi$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	56                   	push   %esi$/;"	l
f0105823	obj/kern/kernel.asm	/^f0105823:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	39 c6                	cmp    %eax,%esi$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	73 35                	jae    f0105865 <memmove+0x47>$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	39 d0                	cmp    %edx,%eax$/;"	l
f0105835	obj/kern/kernel.asm	/^f0105835:	73 2e                	jae    f0105865 <memmove+0x47>$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	89 d6                	mov    %edx,%esi$/;"	l
f010583c	obj/kern/kernel.asm	/^f010583c:	09 fe                	or     %edi,%esi$/;"	l
f010583e	obj/kern/kernel.asm	/^f010583e:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	75 13                	jne    f0105859 <memmove+0x3b>$/;"	l
f0105846	obj/kern/kernel.asm	/^f0105846:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105849	obj/kern/kernel.asm	/^f0105849:	75 0e                	jne    f0105859 <memmove+0x3b>$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	83 ef 04             	sub    $0x4,%edi$/;"	l
f010584e	obj/kern/kernel.asm	/^f010584e:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0105851	obj/kern/kernel.asm	/^f0105851:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105854	obj/kern/kernel.asm	/^f0105854:	fd                   	std    $/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	eb 09                	jmp    f0105862 <memmove+0x44>$/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f010585f	obj/kern/kernel.asm	/^f010585f:	fd                   	std    $/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	fc                   	cld    $/;"	l
f0105863	obj/kern/kernel.asm	/^f0105863:	eb 1d                	jmp    f0105882 <memmove+0x64>$/;"	l
f0105865	obj/kern/kernel.asm	/^f0105865:	89 f2                	mov    %esi,%edx$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	09 c2                	or     %eax,%edx$/;"	l
f0105869	obj/kern/kernel.asm	/^f0105869:	f6 c2 03             	test   $0x3,%dl$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	75 0f                	jne    f010587d <memmove+0x5f>$/;"	l
f010586e	obj/kern/kernel.asm	/^f010586e:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	75 0a                	jne    f010587d <memmove+0x5f>$/;"	l
f0105873	obj/kern/kernel.asm	/^f0105873:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105876	obj/kern/kernel.asm	/^f0105876:	89 c7                	mov    %eax,%edi$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	fc                   	cld    $/;"	l
f0105879	obj/kern/kernel.asm	/^f0105879:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	eb 05                	jmp    f0105882 <memmove+0x64>$/;"	l
f010587d	obj/kern/kernel.asm	/^f010587d:	89 c7                	mov    %eax,%edi$/;"	l
f010587f	obj/kern/kernel.asm	/^f010587f:	fc                   	cld    $/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	5e                   	pop    %esi$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	5f                   	pop    %edi$/;"	l
f0105884	obj/kern/kernel.asm	/^f0105884:	5d                   	pop    %ebp$/;"	l
f0105885	obj/kern/kernel.asm	/^f0105885:	c3                   	ret    $/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886 <memcpy>:$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	55                   	push   %ebp$/;"	l
f0105887	obj/kern/kernel.asm	/^f0105887:	89 e5                	mov    %esp,%ebp$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010588f	obj/kern/kernel.asm	/^f010588f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892:	e8 87 ff ff ff       	call   f010581e <memmove>$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	c9                   	leave  $/;"	l
f0105898	obj/kern/kernel.asm	/^f0105898:	c3                   	ret    $/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899 <memcmp>:$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	55                   	push   %ebp$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	89 e5                	mov    %esp,%ebp$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	56                   	push   %esi$/;"	l
f010589d	obj/kern/kernel.asm	/^f010589d:	53                   	push   %ebx$/;"	l
f010589e	obj/kern/kernel.asm	/^f010589e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01058a4	obj/kern/kernel.asm	/^f01058a4:	89 c6                	mov    %eax,%esi$/;"	l
f01058a6	obj/kern/kernel.asm	/^f01058a6:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	eb 1a                	jmp    f01058c5 <memcmp+0x2c>$/;"	l
f01058ab	obj/kern/kernel.asm	/^f01058ab:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01058ae	obj/kern/kernel.asm	/^f01058ae:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	38 d9                	cmp    %bl,%cl$/;"	l
f01058b3	obj/kern/kernel.asm	/^f01058b3:	74 0a                	je     f01058bf <memcmp+0x26>$/;"	l
f01058b5	obj/kern/kernel.asm	/^f01058b5:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f01058b8	obj/kern/kernel.asm	/^f01058b8:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f01058bb	obj/kern/kernel.asm	/^f01058bb:	29 d8                	sub    %ebx,%eax$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	eb 0f                	jmp    f01058ce <memcmp+0x35>$/;"	l
f01058bf	obj/kern/kernel.asm	/^f01058bf:	83 c0 01             	add    $0x1,%eax$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01058c5	obj/kern/kernel.asm	/^f01058c5:	39 f0                	cmp    %esi,%eax$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	75 e2                	jne    f01058ab <memcmp+0x12>$/;"	l
f01058c9	obj/kern/kernel.asm	/^f01058c9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	5b                   	pop    %ebx$/;"	l
f01058cf	obj/kern/kernel.asm	/^f01058cf:	5e                   	pop    %esi$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	5d                   	pop    %ebp$/;"	l
f01058d1	obj/kern/kernel.asm	/^f01058d1:	c3                   	ret    $/;"	l
f01058d2	obj/kern/kernel.asm	/^f01058d2 <memfind>:$/;"	l
f01058d2	obj/kern/kernel.asm	/^f01058d2:	55                   	push   %ebp$/;"	l
f01058d3	obj/kern/kernel.asm	/^f01058d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01058d5	obj/kern/kernel.asm	/^f01058d5:	53                   	push   %ebx$/;"	l
f01058d6	obj/kern/kernel.asm	/^f01058d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01058d9	obj/kern/kernel.asm	/^f01058d9:	89 c1                	mov    %eax,%ecx$/;"	l
f01058db	obj/kern/kernel.asm	/^f01058db:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f01058de	obj/kern/kernel.asm	/^f01058de:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	eb 0a                	jmp    f01058ee <memfind+0x1c>$/;"	l
f01058e4	obj/kern/kernel.asm	/^f01058e4:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	39 da                	cmp    %ebx,%edx$/;"	l
f01058e9	obj/kern/kernel.asm	/^f01058e9:	74 07                	je     f01058f2 <memfind+0x20>$/;"	l
f01058eb	obj/kern/kernel.asm	/^f01058eb:	83 c0 01             	add    $0x1,%eax$/;"	l
f01058ee	obj/kern/kernel.asm	/^f01058ee:	39 c8                	cmp    %ecx,%eax$/;"	l
f01058f0	obj/kern/kernel.asm	/^f01058f0:	72 f2                	jb     f01058e4 <memfind+0x12>$/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2:	5b                   	pop    %ebx$/;"	l
f01058f3	obj/kern/kernel.asm	/^f01058f3:	5d                   	pop    %ebp$/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	c3                   	ret    $/;"	l
f01058f5	obj/kern/kernel.asm	/^f01058f5 <strtol>:$/;"	l
f01058f5	obj/kern/kernel.asm	/^f01058f5:	55                   	push   %ebp$/;"	l
f01058f6	obj/kern/kernel.asm	/^f01058f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01058f8	obj/kern/kernel.asm	/^f01058f8:	57                   	push   %edi$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	56                   	push   %esi$/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	53                   	push   %ebx$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105901	obj/kern/kernel.asm	/^f0105901:	eb 03                	jmp    f0105906 <strtol+0x11>$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105906	obj/kern/kernel.asm	/^f0105906:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909:	3c 20                	cmp    $0x20,%al$/;"	l
f010590b	obj/kern/kernel.asm	/^f010590b:	74 f6                	je     f0105903 <strtol+0xe>$/;"	l
f010590d	obj/kern/kernel.asm	/^f010590d:	3c 09                	cmp    $0x9,%al$/;"	l
f010590f	obj/kern/kernel.asm	/^f010590f:	74 f2                	je     f0105903 <strtol+0xe>$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	75 0a                	jne    f010591f <strtol+0x2a>$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105918	obj/kern/kernel.asm	/^f0105918:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010591d	obj/kern/kernel.asm	/^f010591d:	eb 11                	jmp    f0105930 <strtol+0x3b>$/;"	l
f010591f	obj/kern/kernel.asm	/^f010591f:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	75 08                	jne    f0105930 <strtol+0x3b>$/;"	l
f0105928	obj/kern/kernel.asm	/^f0105928:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010592b	obj/kern/kernel.asm	/^f010592b:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0105930	obj/kern/kernel.asm	/^f0105930:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	75 15                	jne    f010594d <strtol+0x58>$/;"	l
f0105938	obj/kern/kernel.asm	/^f0105938:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	75 10                	jne    f010594d <strtol+0x58>$/;"	l
f010593d	obj/kern/kernel.asm	/^f010593d:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0105941	obj/kern/kernel.asm	/^f0105941:	75 7c                	jne    f01059bf <strtol+0xca>$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0105946	obj/kern/kernel.asm	/^f0105946:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	eb 16                	jmp    f0105963 <strtol+0x6e>$/;"	l
f010594d	obj/kern/kernel.asm	/^f010594d:	85 db                	test   %ebx,%ebx$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	75 12                	jne    f0105963 <strtol+0x6e>$/;"	l
f0105951	obj/kern/kernel.asm	/^f0105951:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0105956	obj/kern/kernel.asm	/^f0105956:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105959	obj/kern/kernel.asm	/^f0105959:	75 08                	jne    f0105963 <strtol+0x6e>$/;"	l
f010595b	obj/kern/kernel.asm	/^f010595b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0105963	obj/kern/kernel.asm	/^f0105963:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105968	obj/kern/kernel.asm	/^f0105968:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f010596b	obj/kern/kernel.asm	/^f010596b:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f010596e	obj/kern/kernel.asm	/^f010596e:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	89 f3                	mov    %esi,%ebx$/;"	l
f0105973	obj/kern/kernel.asm	/^f0105973:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0105976	obj/kern/kernel.asm	/^f0105976:	77 08                	ja     f0105980 <strtol+0x8b>$/;"	l
f0105978	obj/kern/kernel.asm	/^f0105978:	0f be d2             	movsbl %dl,%edx$/;"	l
f010597b	obj/kern/kernel.asm	/^f010597b:	83 ea 30             	sub    $0x30,%edx$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	eb 22                	jmp    f01059a2 <strtol+0xad>$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	89 f3                	mov    %esi,%ebx$/;"	l
f0105985	obj/kern/kernel.asm	/^f0105985:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	77 08                	ja     f0105992 <strtol+0x9d>$/;"	l
f010598a	obj/kern/kernel.asm	/^f010598a:	0f be d2             	movsbl %dl,%edx$/;"	l
f010598d	obj/kern/kernel.asm	/^f010598d:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	eb 10                	jmp    f01059a2 <strtol+0xad>$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	89 f3                	mov    %esi,%ebx$/;"	l
f0105997	obj/kern/kernel.asm	/^f0105997:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	77 16                	ja     f01059b2 <strtol+0xbd>$/;"	l
f010599c	obj/kern/kernel.asm	/^f010599c:	0f be d2             	movsbl %dl,%edx$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	83 ea 37             	sub    $0x37,%edx$/;"	l
f01059a2	obj/kern/kernel.asm	/^f01059a2:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f01059a5	obj/kern/kernel.asm	/^f01059a5:	7d 0b                	jge    f01059b2 <strtol+0xbd>$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01059aa	obj/kern/kernel.asm	/^f01059aa:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f01059ae	obj/kern/kernel.asm	/^f01059ae:	01 d0                	add    %edx,%eax$/;"	l
f01059b0	obj/kern/kernel.asm	/^f01059b0:	eb b9                	jmp    f010596b <strtol+0x76>$/;"	l
f01059b2	obj/kern/kernel.asm	/^f01059b2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01059b6	obj/kern/kernel.asm	/^f01059b6:	74 0d                	je     f01059c5 <strtol+0xd0>$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01059bb	obj/kern/kernel.asm	/^f01059bb:	89 0e                	mov    %ecx,(%esi)$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	eb 06                	jmp    f01059c5 <strtol+0xd0>$/;"	l
f01059bf	obj/kern/kernel.asm	/^f01059bf:	85 db                	test   %ebx,%ebx$/;"	l
f01059c1	obj/kern/kernel.asm	/^f01059c1:	74 98                	je     f010595b <strtol+0x66>$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	eb 9e                	jmp    f0105963 <strtol+0x6e>$/;"	l
f01059c5	obj/kern/kernel.asm	/^f01059c5:	89 c2                	mov    %eax,%edx$/;"	l
f01059c7	obj/kern/kernel.asm	/^f01059c7:	f7 da                	neg    %edx$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	85 ff                	test   %edi,%edi$/;"	l
f01059cb	obj/kern/kernel.asm	/^f01059cb:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f01059ce	obj/kern/kernel.asm	/^f01059ce:	5b                   	pop    %ebx$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	5e                   	pop    %esi$/;"	l
f01059d0	obj/kern/kernel.asm	/^f01059d0:	5f                   	pop    %edi$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	5d                   	pop    %ebp$/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2:	c3                   	ret    $/;"	l
f01059d3	obj/kern/kernel.asm	/^f01059d3 <tsc_calibrate>:$/;"	l
f01059d3	obj/kern/kernel.asm	/^f01059d3:	55                   	push   %ebp$/;"	l
f01059d4	obj/kern/kernel.asm	/^f01059d4:	89 e5                	mov    %esp,%ebp$/;"	l
f01059d6	obj/kern/kernel.asm	/^f01059d6:	57                   	push   %edi$/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	56                   	push   %esi$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	53                   	push   %ebx$/;"	l
f01059d9	obj/kern/kernel.asm	/^f01059d9:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	bb 42 00 00 00       	mov    $0x42,%ebx$/;"	l
f01059e8	obj/kern/kernel.asm	/^f01059e8:	ba 61 00 00 00       	mov    $0x61,%edx$/;"	l
f01059ed	obj/kern/kernel.asm	/^f01059ed:	ec                   	in     (%dx),%al$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f01059f1	obj/kern/kernel.asm	/^f01059f1:	83 c8 01             	or     $0x1,%eax$/;"	l
f01059f4	obj/kern/kernel.asm	/^f01059f4:	ee                   	out    %al,(%dx)$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	b8 b0 ff ff ff       	mov    $0xffffffb0,%eax$/;"	l
f01059fa	obj/kern/kernel.asm	/^f01059fa:	ba 43 00 00 00       	mov    $0x43,%edx$/;"	l
f01059ff	obj/kern/kernel.asm	/^f01059ff:	ee                   	out    %al,(%dx)$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105a05	obj/kern/kernel.asm	/^f0105a05:	89 da                	mov    %ebx,%edx$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	ee                   	out    %al,(%dx)$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	ee                   	out    %al,(%dx)$/;"	l
f0105a09	obj/kern/kernel.asm	/^f0105a09:	ec                   	in     (%dx),%al$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	ec                   	in     (%dx),%al$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105a15	obj/kern/kernel.asm	/^f0105a15:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105a1a	obj/kern/kernel.asm	/^f0105a1a:	89 da                	mov    %ebx,%edx$/;"	l
f0105a1c	obj/kern/kernel.asm	/^f0105a1c:	ec                   	in     (%dx),%al$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	ec                   	in     (%dx),%al$/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	3c ff                	cmp    $0xff,%al$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	75 11                	jne    f0105a33 <tsc_calibrate+0x60>$/;"	l
f0105a22	obj/kern/kernel.asm	/^f0105a22:	0f 31                	rdtsc  $/;"	l
f0105a24	obj/kern/kernel.asm	/^f0105a24:	89 c6                	mov    %eax,%esi$/;"	l
f0105a26	obj/kern/kernel.asm	/^f0105a26:	89 d7                	mov    %edx,%edi$/;"	l
f0105a28	obj/kern/kernel.asm	/^f0105a28:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105a2b	obj/kern/kernel.asm	/^f0105a2b:	81 f9 50 c3 00 00    	cmp    $0xc350,%ecx$/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	75 e7                	jne    f0105a1a <tsc_calibrate+0x47>$/;"	l
f0105a33	obj/kern/kernel.asm	/^f0105a33:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0105a36	obj/kern/kernel.asm	/^f0105a36:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0105a39	obj/kern/kernel.asm	/^f0105a39:	0f 31                	rdtsc  $/;"	l
f0105a3b	obj/kern/kernel.asm	/^f0105a3b:	83 f9 05             	cmp    $0x5,%ecx$/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	0f 8e fc 00 00 00    	jle    f0105b40 <tsc_calibrate+0x16d>$/;"	l
f0105a44	obj/kern/kernel.asm	/^f0105a44:	29 f0                	sub    %esi,%eax$/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0105a49	obj/kern/kernel.asm	/^f0105a49:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx$/;"	l
f0105a4e	obj/kern/kernel.asm	/^f0105a4e:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	0f b6 45 dc          	movzbl -0x24(%ebp),%eax$/;"	l
f0105a59	obj/kern/kernel.asm	/^f0105a59:	88 45 cb             	mov    %al,-0x35(%ebp)$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105a6f	obj/kern/kernel.asm	/^f0105a6f:	89 da                	mov    %ebx,%edx$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	ec                   	in     (%dx),%al$/;"	l
f0105a72	obj/kern/kernel.asm	/^f0105a72:	ec                   	in     (%dx),%al$/;"	l
f0105a73	obj/kern/kernel.asm	/^f0105a73:	38 c8                	cmp    %cl,%al$/;"	l
f0105a75	obj/kern/kernel.asm	/^f0105a75:	75 13                	jne    f0105a8a <tsc_calibrate+0xb7>$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	0f 31                	rdtsc  $/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105a7c	obj/kern/kernel.asm	/^f0105a7c:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105a82	obj/kern/kernel.asm	/^f0105a82:	81 fe 50 c3 00 00    	cmp    $0xc350,%esi$/;"	l
f0105a88	obj/kern/kernel.asm	/^f0105a88:	75 e5                	jne    f0105a6f <tsc_calibrate+0x9c>$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	0f 31                	rdtsc  $/;"	l
f0105a8c	obj/kern/kernel.asm	/^f0105a8c:	89 c7                	mov    %eax,%edi$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105a91	obj/kern/kernel.asm	/^f0105a91:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105a94	obj/kern/kernel.asm	/^f0105a94:	29 c7                	sub    %eax,%edi$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	83 fe 05             	cmp    $0x5,%esi$/;"	l
f0105a99	obj/kern/kernel.asm	/^f0105a99:	0f 8e a1 00 00 00    	jle    f0105b40 <tsc_calibrate+0x16d>$/;"	l
f0105a9f	obj/kern/kernel.asm	/^f0105a9f:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0105aa2	obj/kern/kernel.asm	/^f0105aa2:	1b 55 d4             	sbb    -0x2c(%ebp),%edx$/;"	l
f0105aa5	obj/kern/kernel.asm	/^f0105aa5:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0105aa8	obj/kern/kernel.asm	/^f0105aa8:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f0105aab	obj/kern/kernel.asm	/^f0105aab:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0105aae	obj/kern/kernel.asm	/^f0105aae:	01 fe                	add    %edi,%esi$/;"	l
f0105ab0	obj/kern/kernel.asm	/^f0105ab0:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105aba	obj/kern/kernel.asm	/^f0105aba:	0f ac d0 0b          	shrd   $0xb,%edx,%eax$/;"	l
f0105abe	obj/kern/kernel.asm	/^f0105abe:	c1 ea 0b             	shr    $0xb,%edx$/;"	l
f0105ac1	obj/kern/kernel.asm	/^f0105ac1:	39 55 e4             	cmp    %edx,-0x1c(%ebp)$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	72 19                	jb     f0105adf <tsc_calibrate+0x10c>$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6:	39 c6                	cmp    %eax,%esi$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	72 15                	jb     f0105adf <tsc_calibrate+0x10c>$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
f0105ace	obj/kern/kernel.asm	/^f0105ace:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105ad1	obj/kern/kernel.asm	/^f0105ad1:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0105ad4	obj/kern/kernel.asm	/^f0105ad4:	83 f8 75             	cmp    $0x75,%eax$/;"	l
f0105ad7	obj/kern/kernel.asm	/^f0105ad7:	0f 85 78 ff ff ff    	jne    f0105a55 <tsc_calibrate+0x82>$/;"	l
f0105add	obj/kern/kernel.asm	/^f0105add:	eb 61                	jmp    f0105b40 <tsc_calibrate+0x16d>$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	89 da                	mov    %ebx,%edx$/;"	l
f0105ae1	obj/kern/kernel.asm	/^f0105ae1:	ec                   	in     (%dx),%al$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	ec                   	in     (%dx),%al$/;"	l
f0105ae3	obj/kern/kernel.asm	/^f0105ae3:	ba fe ff ff ff       	mov    $0xfffffffe,%edx$/;"	l
f0105ae8	obj/kern/kernel.asm	/^f0105ae8:	2a 55 cb             	sub    -0x35(%ebp),%dl$/;"	l
f0105aeb	obj/kern/kernel.asm	/^f0105aeb:	38 c2                	cmp    %al,%dl$/;"	l
f0105aed	obj/kern/kernel.asm	/^f0105aed:	75 51                	jne    f0105b40 <tsc_calibrate+0x16d>$/;"	l
f0105aef	obj/kern/kernel.asm	/^f0105aef:	89 f8                	mov    %edi,%eax$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	89 c6                	mov    %eax,%esi$/;"	l
f0105af6	obj/kern/kernel.asm	/^f0105af6:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f0105af9	obj/kern/kernel.asm	/^f0105af9:	01 c6                	add    %eax,%esi$/;"	l
f0105afb	obj/kern/kernel.asm	/^f0105afb:	d1 fe                	sar    %esi$/;"	d
f0105afd	obj/kern/kernel.asm	/^f0105afd:	89 f7                	mov    %esi,%edi$/;"	l
f0105aff	obj/kern/kernel.asm	/^f0105aff:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	03 75 c0             	add    -0x40(%ebp),%esi$/;"	l
f0105b05	obj/kern/kernel.asm	/^f0105b05:	13 7d c4             	adc    -0x3c(%ebp),%edi$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	69 cf de 34 12 00    	imul   $0x1234de,%edi,%ecx$/;"	l
f0105b0e	obj/kern/kernel.asm	/^f0105b0e:	b8 de 34 12 00       	mov    $0x1234de,%eax$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	f7 e6                	mul    %esi$/;"	l
f0105b15	obj/kern/kernel.asm	/^f0105b15:	89 c6                	mov    %eax,%esi$/;"	l
f0105b17	obj/kern/kernel.asm	/^f0105b17:	89 d7                	mov    %edx,%edi$/;"	l
f0105b19	obj/kern/kernel.asm	/^f0105b19:	01 cf                	add    %ecx,%edi$/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	69 45 dc 00 e8 03 00 	imul   $0x3e800,-0x24(%ebp),%eax$/;"	l
f0105b22	obj/kern/kernel.asm	/^f0105b22:	99                   	cltd   $/;"	l
f0105b23	obj/kern/kernel.asm	/^f0105b23:	52                   	push   %edx$/;"	l
f0105b24	obj/kern/kernel.asm	/^f0105b24:	50                   	push   %eax$/;"	l
f0105b25	obj/kern/kernel.asm	/^f0105b25:	57                   	push   %edi$/;"	l
f0105b26	obj/kern/kernel.asm	/^f0105b26:	56                   	push   %esi$/;"	l
f0105b27	obj/kern/kernel.asm	/^f0105b27:	e8 34 03 00 00       	call   f0105e60 <__udivdi3>$/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	85 c0                	test   %eax,%eax$/;"	l
f0105b31	obj/kern/kernel.asm	/^f0105b31:	74 0d                	je     f0105b40 <tsc_calibrate+0x16d>$/;"	l
f0105b33	obj/kern/kernel.asm	/^f0105b33:	a3 c8 80 41 f0       	mov    %eax,0xf04180c8$/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38:	83 7d d8 64          	cmpl   $0x64,-0x28(%ebp)$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	75 2c                	jne    f0105b6a <tsc_calibrate+0x197>$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	eb 10                	jmp    f0105b50 <tsc_calibrate+0x17d>$/;"	l
f0105b40	obj/kern/kernel.asm	/^f0105b40:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)$/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	83 f8 64             	cmp    $0x64,%eax$/;"	l
f0105b4a	obj/kern/kernel.asm	/^f0105b4a:	0f 85 98 fe ff ff    	jne    f01059e8 <tsc_calibrate+0x15>$/;"	l
f0105b50	obj/kern/kernel.asm	/^f0105b50:	c7 05 c8 80 41 f0 a0 	movl   $0x2625a0,0xf04180c8$/;"	l
f0105b57	obj/kern/kernel.asm	/^f0105b57:	25 26 00 $/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	68 d0 7a 10 f0       	push   $0xf0107ad0$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	e8 56 df ff ff       	call   f0103abd <cprintf>$/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a:	8b 0d c8 80 41 f0    	mov    0xf04180c8,%ecx$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	ba d3 4d 62 10       	mov    $0x10624dd3,%edx$/;"	l
f0105b78	obj/kern/kernel.asm	/^f0105b78:	89 c8                	mov    %ecx,%eax$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	f7 e2                	mul    %edx$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	c1 ea 06             	shr    $0x6,%edx$/;"	l
f0105b7f	obj/kern/kernel.asm	/^f0105b7f:	69 c2 e8 03 00 00    	imul   $0x3e8,%edx,%eax$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	29 c1                	sub    %eax,%ecx$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	51                   	push   %ecx$/;"	l
f0105b88	obj/kern/kernel.asm	/^f0105b88:	52                   	push   %edx$/;"	l
f0105b89	obj/kern/kernel.asm	/^f0105b89:	68 04 7b 10 f0       	push   $0xf0107b04$/;"	l
f0105b8e	obj/kern/kernel.asm	/^f0105b8e:	e8 2a df ff ff       	call   f0103abd <cprintf>$/;"	l
f0105b93	obj/kern/kernel.asm	/^f0105b93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	5b                   	pop    %ebx$/;"	l
f0105b9a	obj/kern/kernel.asm	/^f0105b9a:	5e                   	pop    %esi$/;"	l
f0105b9b	obj/kern/kernel.asm	/^f0105b9b:	5f                   	pop    %edi$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	5d                   	pop    %ebp$/;"	l
f0105b9d	obj/kern/kernel.asm	/^f0105b9d:	c3                   	ret    $/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e <print_time>:$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	55                   	push   %ebp$/;"	l
f0105b9f	obj/kern/kernel.asm	/^f0105b9f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	68 28 7b 10 f0       	push   $0xf0107b28$/;"	l
f0105bac	obj/kern/kernel.asm	/^f0105bac:	e8 0c df ff ff       	call   f0103abd <cprintf>$/;"	l
f0105bb1	obj/kern/kernel.asm	/^f0105bb1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105bb4	obj/kern/kernel.asm	/^f0105bb4:	c9                   	leave  $/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	c3                   	ret    $/;"	l
f0105bb6	obj/kern/kernel.asm	/^f0105bb6 <print_timer_error>:$/;"	l
f0105bb6	obj/kern/kernel.asm	/^f0105bb6:	55                   	push   %ebp$/;"	l
f0105bb7	obj/kern/kernel.asm	/^f0105bb7:	89 e5                	mov    %esp,%ebp$/;"	l
f0105bb9	obj/kern/kernel.asm	/^f0105bb9:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	68 2c 7b 10 f0       	push   $0xf0107b2c$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	e8 f7 de ff ff       	call   f0103abd <cprintf>$/;"	l
f0105bc6	obj/kern/kernel.asm	/^f0105bc6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105bc9	obj/kern/kernel.asm	/^f0105bc9:	c9                   	leave  $/;"	l
f0105bca	obj/kern/kernel.asm	/^f0105bca:	c3                   	ret    $/;"	l
f0105bcb	obj/kern/kernel.asm	/^f0105bcb <timer_start>:$/;"	l
f0105bcb	obj/kern/kernel.asm	/^f0105bcb:	55                   	push   %ebp$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc:	89 e5                	mov    %esp,%ebp$/;"	l
f0105bce	obj/kern/kernel.asm	/^f0105bce:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105bd1	obj/kern/kernel.asm	/^f0105bd1:	e8 fd fd ff ff       	call   f01059d3 <tsc_calibrate>$/;"	l
f0105bd6	obj/kern/kernel.asm	/^f0105bd6:	0f 31                	rdtsc  $/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	a3 e0 2f 41 f0       	mov    %eax,0xf0412fe0$/;"	l
f0105bdd	obj/kern/kernel.asm	/^f0105bdd:	89 15 e4 2f 41 f0    	mov    %edx,0xf0412fe4$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	c9                   	leave  $/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	c3                   	ret    $/;"	l
f0105be5	obj/kern/kernel.asm	/^f0105be5 <timer_stop>:$/;"	l
f0105be5	obj/kern/kernel.asm	/^f0105be5:	55                   	push   %ebp$/;"	l
f0105be6	obj/kern/kernel.asm	/^f0105be6:	89 e5                	mov    %esp,%ebp$/;"	l
f0105be8	obj/kern/kernel.asm	/^f0105be8:	53                   	push   %ebx$/;"	l
f0105be9	obj/kern/kernel.asm	/^f0105be9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105bec	obj/kern/kernel.asm	/^f0105bec:	8b 0d e0 2f 41 f0    	mov    0xf0412fe0,%ecx$/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2:	8b 1d e4 2f 41 f0    	mov    0xf0412fe4,%ebx$/;"	l
f0105bf8	obj/kern/kernel.asm	/^f0105bf8:	89 d8                	mov    %ebx,%eax$/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa:	09 c8                	or     %ecx,%eax$/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc:	75 12                	jne    f0105c10 <timer_stop+0x2b>$/;"	l
f0105bfe	obj/kern/kernel.asm	/^f0105bfe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c01	obj/kern/kernel.asm	/^f0105c01:	68 39 7b 10 f0       	push   $0xf0107b39$/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06:	e8 b2 de ff ff       	call   f0103abd <cprintf>$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	eb 54                	jmp    f0105c64 <timer_stop+0x7f>$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	0f 31                	rdtsc  $/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	29 c8                	sub    %ecx,%eax$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	19 da                	sbb    %ebx,%edx$/;"	l
f0105c19	obj/kern/kernel.asm	/^f0105c19:	8b 0d c8 80 41 f0    	mov    0xf04180c8,%ecx$/;"	l
f0105c1f	obj/kern/kernel.asm	/^f0105c1f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	53                   	push   %ebx$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	51                   	push   %ecx$/;"	l
f0105c26	obj/kern/kernel.asm	/^f0105c26:	52                   	push   %edx$/;"	l
f0105c27	obj/kern/kernel.asm	/^f0105c27:	50                   	push   %eax$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	e8 33 02 00 00       	call   f0105e60 <__udivdi3>$/;"	l
f0105c2d	obj/kern/kernel.asm	/^f0105c2d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	6a 00                	push   $0x0$/;"	l
f0105c32	obj/kern/kernel.asm	/^f0105c32:	68 e8 03 00 00       	push   $0x3e8$/;"	l
f0105c37	obj/kern/kernel.asm	/^f0105c37:	52                   	push   %edx$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	50                   	push   %eax$/;"	l
f0105c39	obj/kern/kernel.asm	/^f0105c39:	e8 22 02 00 00       	call   f0105e60 <__udivdi3>$/;"	l
f0105c3e	obj/kern/kernel.asm	/^f0105c3e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105c41	obj/kern/kernel.asm	/^f0105c41:	52                   	push   %edx$/;"	l
f0105c42	obj/kern/kernel.asm	/^f0105c42:	50                   	push   %eax$/;"	l
f0105c43	obj/kern/kernel.asm	/^f0105c43:	68 55 7b 10 f0       	push   $0xf0107b55$/;"	l
f0105c48	obj/kern/kernel.asm	/^f0105c48:	e8 70 de ff ff       	call   f0103abd <cprintf>$/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	c7 05 e0 2f 41 f0 00 	movl   $0x0,0xf0412fe0$/;"	l
f0105c54	obj/kern/kernel.asm	/^f0105c54:	00 00 00 $/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	c7 05 e4 2f 41 f0 00 	movl   $0x0,0xf0412fe4$/;"	l
f0105c5e	obj/kern/kernel.asm	/^f0105c5e:	00 00 00 $/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0105c67	obj/kern/kernel.asm	/^f0105c67:	c9                   	leave  $/;"	l
f0105c68	obj/kern/kernel.asm	/^f0105c68:	c3                   	ret    $/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69 <__spin_initlock>:$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	55                   	push   %ebp$/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c6f	obj/kern/kernel.asm	/^f0105c6f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	5d                   	pop    %ebp$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	c3                   	ret    $/;"	l
f0105c77	obj/kern/kernel.asm	/^f0105c77 <spin_lock>:$/;"	l
f0105c77	obj/kern/kernel.asm	/^f0105c77:	55                   	push   %ebp$/;"	l
f0105c78	obj/kern/kernel.asm	/^f0105c78:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c7a	obj/kern/kernel.asm	/^f0105c7a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	eb 02                	jmp    f0105c86 <spin_lock+0xf>$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	f3 90                	pause  $/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	89 c8                	mov    %ecx,%eax$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0105c8b	obj/kern/kernel.asm	/^f0105c8b:	85 c0                	test   %eax,%eax$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	75 f5                	jne    f0105c84 <spin_lock+0xd>$/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	5d                   	pop    %ebp$/;"	l
f0105c90	obj/kern/kernel.asm	/^f0105c90:	c3                   	ret    $/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91 <spin_unlock>:$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	55                   	push   %ebp$/;"	l
f0105c92	obj/kern/kernel.asm	/^f0105c92:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	5d                   	pop    %ebp$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	c3                   	ret    $/;"	l
f0105ca1	obj/kern/kernel.asm	/^f0105ca1 <check_list>:$/;"	l
f0105ca1	obj/kern/kernel.asm	/^f0105ca1:	fa                   	cli    $/;"	l
f0105ca2	obj/kern/kernel.asm	/^f0105ca2:	8b 0d 04 30 41 f0    	mov    0xf0413004,%ecx$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105caa	obj/kern/kernel.asm	/^f0105caa:	89 ca                	mov    %ecx,%edx$/;"	l
f0105cac	obj/kern/kernel.asm	/^f0105cac:	eb 20                	jmp    f0105cce <check_list+0x2d>$/;"	l
f0105cae	obj/kern/kernel.asm	/^f0105cae:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	74 17                	je     f0105cca <check_list+0x29>$/;"	l
f0105cb3	obj/kern/kernel.asm	/^f0105cb3:	55                   	push   %ebp$/;"	l
f0105cb4	obj/kern/kernel.asm	/^f0105cb4:	89 e5                	mov    %esp,%ebp$/;"	l
f0105cb6	obj/kern/kernel.asm	/^f0105cb6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	68 6b 7b 10 f0       	push   $0xf0107b6b$/;"	l
f0105cbe	obj/kern/kernel.asm	/^f0105cbe:	6a 17                	push   $0x17$/;"	l
f0105cc0	obj/kern/kernel.asm	/^f0105cc0:	68 7c 7b 10 f0       	push   $0xf0107b7c$/;"	l
f0105cc5	obj/kern/kernel.asm	/^f0105cc5:	e8 26 a4 ff ff       	call   f01000f0 <_panic>$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	89 c2                	mov    %eax,%edx$/;"	l
f0105ccc	obj/kern/kernel.asm	/^f0105ccc:	8b 00                	mov    (%eax),%eax$/;"	l
f0105cce	obj/kern/kernel.asm	/^f0105cce:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	75 dc                	jne    f0105cae <check_list+0xd>$/;"	l
f0105cd2	obj/kern/kernel.asm	/^f0105cd2:	fb                   	sti    $/;"	l
f0105cd3	obj/kern/kernel.asm	/^f0105cd3:	c3                   	ret    $/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4 <test_alloc>:$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	55                   	push   %ebp$/;"	l
f0105cd5	obj/kern/kernel.asm	/^f0105cd5:	89 e5                	mov    %esp,%ebp$/;"	l
f0105cd7	obj/kern/kernel.asm	/^f0105cd7:	56                   	push   %esi$/;"	l
f0105cd8	obj/kern/kernel.asm	/^f0105cd8:	53                   	push   %ebx$/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	0f b6 55 08          	movzbl 0x8(%ebp),%edx$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	8d 72 0b             	lea    0xb(%edx),%esi$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	ba ab aa aa aa       	mov    $0xaaaaaaab,%edx$/;"	l
f0105ce5	obj/kern/kernel.asm	/^f0105ce5:	89 f0                	mov    %esi,%eax$/;"	l
f0105ce7	obj/kern/kernel.asm	/^f0105ce7:	f7 e2                	mul    %edx$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	c1 ea 03             	shr    $0x3,%edx$/;"	l
f0105cec	obj/kern/kernel.asm	/^f0105cec:	8d 72 01             	lea    0x1(%edx),%esi$/;"	l
f0105cef	obj/kern/kernel.asm	/^f0105cef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	68 00 30 41 f0       	push   $0xf0413000$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	e8 7b ff ff ff       	call   f0105c77 <spin_lock>$/;"	l
f0105cfc	obj/kern/kernel.asm	/^f0105cfc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105cff	obj/kern/kernel.asm	/^f0105cff:	83 3d 04 30 41 f0 00 	cmpl   $0x0,0xf0413004$/;"	l
f0105d06	obj/kern/kernel.asm	/^f0105d06:	75 28                	jne    f0105d30 <test_alloc+0x5c>$/;"	l
f0105d08	obj/kern/kernel.asm	/^f0105d08:	c7 05 20 30 41 f0 5c 	movl   $0xf012235c,0xf0413020$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	23 12 f0 $/;"	l
f0105d12	obj/kern/kernel.asm	/^f0105d12:	c7 05 24 30 41 f0 5c 	movl   $0xf012235c,0xf0413024$/;"	l
f0105d19	obj/kern/kernel.asm	/^f0105d19:	23 12 f0 $/;"	l
f0105d1c	obj/kern/kernel.asm	/^f0105d1c:	c7 05 28 30 41 f0 a9 	movl   $0x6a9,0xf0413028$/;"	l
f0105d23	obj/kern/kernel.asm	/^f0105d23:	06 00 00 $/;"	l
f0105d26	obj/kern/kernel.asm	/^f0105d26:	c7 05 04 30 41 f0 5c 	movl   $0xf012235c,0xf0413004$/;"	l
f0105d2d	obj/kern/kernel.asm	/^f0105d2d:	23 12 f0 $/;"	l
f0105d30	obj/kern/kernel.asm	/^f0105d30:	e8 6c ff ff ff       	call   f0105ca1 <check_list>$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	8b 15 04 30 41 f0    	mov    0xf0413004,%edx$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0105d40	obj/kern/kernel.asm	/^f0105d40:	39 c6                	cmp    %eax,%esi$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	77 3e                	ja     f0105d82 <test_alloc+0xae>$/;"	l
f0105d44	obj/kern/kernel.asm	/^f0105d44:	8b 53 04             	mov    0x4(%ebx),%edx$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	89 15 04 30 41 f0    	mov    %edx,0xf0413004$/;"	l
f0105d4d	obj/kern/kernel.asm	/^f0105d4d:	39 c6                	cmp    %eax,%esi$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	75 0e                	jne    f0105d5f <test_alloc+0x8b>$/;"	l
f0105d51	obj/kern/kernel.asm	/^f0105d51:	8b 03                	mov    (%ebx),%eax$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	89 02                	mov    %eax,(%edx)$/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55:	8b 03                	mov    (%ebx),%eax$/;"	l
f0105d57	obj/kern/kernel.asm	/^f0105d57:	8b 53 04             	mov    0x4(%ebx),%edx$/;"	l
f0105d5a	obj/kern/kernel.asm	/^f0105d5a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	eb 0e                	jmp    f0105d6d <test_alloc+0x99>$/;"	l
f0105d5f	obj/kern/kernel.asm	/^f0105d5f:	29 f0                	sub    %esi,%eax$/;"	l
f0105d61	obj/kern/kernel.asm	/^f0105d61:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0105d64	obj/kern/kernel.asm	/^f0105d64:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67:	8d 1c 83             	lea    (%ebx,%eax,4),%ebx$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	89 73 08             	mov    %esi,0x8(%ebx)$/;"	l
f0105d6d	obj/kern/kernel.asm	/^f0105d6d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105d70	obj/kern/kernel.asm	/^f0105d70:	68 00 30 41 f0       	push   $0xf0413000$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	e8 17 ff ff ff       	call   f0105c91 <spin_unlock>$/;"	l
f0105d7a	obj/kern/kernel.asm	/^f0105d7a:	8d 43 0c             	lea    0xc(%ebx),%eax$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	eb 1f                	jmp    f0105da1 <test_alloc+0xcd>$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	39 d3                	cmp    %edx,%ebx$/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	75 17                	jne    f0105d9d <test_alloc+0xc9>$/;"	l
f0105d86	obj/kern/kernel.asm	/^f0105d86:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105d89	obj/kern/kernel.asm	/^f0105d89:	68 00 30 41 f0       	push   $0xf0413000$/;"	l
f0105d8e	obj/kern/kernel.asm	/^f0105d8e:	e8 fe fe ff ff       	call   f0105c91 <spin_unlock>$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d96	obj/kern/kernel.asm	/^f0105d96:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d9b	obj/kern/kernel.asm	/^f0105d9b:	eb 04                	jmp    f0105da1 <test_alloc+0xcd>$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	eb 9c                	jmp    f0105d3d <test_alloc+0x69>$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0105da4	obj/kern/kernel.asm	/^f0105da4:	5b                   	pop    %ebx$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	5e                   	pop    %esi$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	5d                   	pop    %ebp$/;"	l
f0105da7	obj/kern/kernel.asm	/^f0105da7:	c3                   	ret    $/;"	l
f0105da8	obj/kern/kernel.asm	/^f0105da8 <test_free>:$/;"	l
f0105da8	obj/kern/kernel.asm	/^f0105da8:	55                   	push   %ebp$/;"	l
f0105da9	obj/kern/kernel.asm	/^f0105da9:	89 e5                	mov    %esp,%ebp$/;"	l
f0105dab	obj/kern/kernel.asm	/^f0105dab:	57                   	push   %edi$/;"	l
f0105dac	obj/kern/kernel.asm	/^f0105dac:	56                   	push   %esi$/;"	l
f0105dad	obj/kern/kernel.asm	/^f0105dad:	53                   	push   %ebx$/;"	l
f0105dae	obj/kern/kernel.asm	/^f0105dae:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	68 00 30 41 f0       	push   $0xf0413000$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	e8 b9 fe ff ff       	call   f0105c77 <spin_lock>$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	8d 53 f4             	lea    -0xc(%ebx),%edx$/;"	l
f0105dc1	obj/kern/kernel.asm	/^f0105dc1:	a1 04 30 41 f0       	mov    0xf0413004,%eax$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	eb 0c                	jmp    f0105dd7 <test_free+0x2f>$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	8b 08                	mov    (%eax),%ecx$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	72 04                	jb     f0105dd5 <test_free+0x2d>$/;"	l
f0105dd1	obj/kern/kernel.asm	/^f0105dd1:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	72 0c                	jb     f0105de1 <test_free+0x39>$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	89 c8                	mov    %ecx,%eax$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	39 d0                	cmp    %edx,%eax$/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9:	73 f0                	jae    f0105dcb <test_free+0x23>$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	8b 08                	mov    (%eax),%ecx$/;"	l
f0105ddd	obj/kern/kernel.asm	/^f0105ddd:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	73 66                	jae    f0105e47 <test_free+0x9f>$/;"	l
f0105de1	obj/kern/kernel.asm	/^f0105de1:	8b 4b fc             	mov    -0x4(%ebx),%ecx$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	8d 34 49             	lea    (%ecx,%ecx,2),%esi$/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	8d 34 b2             	lea    (%edx,%esi,4),%esi$/;"	l
f0105dea	obj/kern/kernel.asm	/^f0105dea:	8b 38                	mov    (%eax),%edi$/;"	l
f0105dec	obj/kern/kernel.asm	/^f0105dec:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0105def	obj/kern/kernel.asm	/^f0105def:	39 fe                	cmp    %edi,%esi$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	75 17                	jne    f0105e0a <test_free+0x62>$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	03 4e 08             	add    0x8(%esi),%ecx$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	89 4b fc             	mov    %ecx,-0x4(%ebx)$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	8b 10                	mov    (%eax),%edx$/;"	l
f0105dfb	obj/kern/kernel.asm	/^f0105dfb:	8b 12                	mov    (%edx),%edx$/;"	l
f0105dfd	obj/kern/kernel.asm	/^f0105dfd:	89 53 f4             	mov    %edx,-0xc(%ebx)$/;"	l
f0105e00	obj/kern/kernel.asm	/^f0105e00:	8b 10                	mov    (%eax),%edx$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105e05	obj/kern/kernel.asm	/^f0105e05:	89 53 f8             	mov    %edx,-0x8(%ebx)$/;"	l
f0105e08	obj/kern/kernel.asm	/^f0105e08:	eb 24                	jmp    f0105e2e <test_free+0x86>$/;"	l
f0105e0a	obj/kern/kernel.asm	/^f0105e0a:	8b 70 08             	mov    0x8(%eax),%esi$/;"	l
f0105e0d	obj/kern/kernel.asm	/^f0105e0d:	8d 3c 76             	lea    (%esi,%esi,2),%edi$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	8d 3c b8             	lea    (%eax,%edi,4),%edi$/;"	l
f0105e13	obj/kern/kernel.asm	/^f0105e13:	39 fa                	cmp    %edi,%edx$/;"	l
f0105e15	obj/kern/kernel.asm	/^f0105e15:	75 07                	jne    f0105e1e <test_free+0x76>$/;"	l
f0105e17	obj/kern/kernel.asm	/^f0105e17:	01 f1                	add    %esi,%ecx$/;"	l
f0105e19	obj/kern/kernel.asm	/^f0105e19:	89 48 08             	mov    %ecx,0x8(%eax)$/;"	l
f0105e1c	obj/kern/kernel.asm	/^f0105e1c:	eb 10                	jmp    f0105e2e <test_free+0x86>$/;"	l
f0105e1e	obj/kern/kernel.asm	/^f0105e1e:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0105e21	obj/kern/kernel.asm	/^f0105e21:	89 73 f4             	mov    %esi,-0xc(%ebx)$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	89 43 f8             	mov    %eax,-0x8(%ebx)$/;"	l
f0105e27	obj/kern/kernel.asm	/^f0105e27:	8b 08                	mov    (%eax),%ecx$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	89 51 04             	mov    %edx,0x4(%ecx)$/;"	l
f0105e2c	obj/kern/kernel.asm	/^f0105e2c:	89 10                	mov    %edx,(%eax)$/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	a3 04 30 41 f0       	mov    %eax,0xf0413004$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	e8 69 fe ff ff       	call   f0105ca1 <check_list>$/;"	l
f0105e38	obj/kern/kernel.asm	/^f0105e38:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105e3b	obj/kern/kernel.asm	/^f0105e3b:	68 00 30 41 f0       	push   $0xf0413000$/;"	l
f0105e40	obj/kern/kernel.asm	/^f0105e40:	e8 4c fe ff ff       	call   f0105c91 <spin_unlock>$/;"	l
f0105e45	obj/kern/kernel.asm	/^f0105e45:	eb 06                	jmp    f0105e4d <test_free+0xa5>$/;"	l
f0105e47	obj/kern/kernel.asm	/^f0105e47:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105e49	obj/kern/kernel.asm	/^f0105e49:	72 8a                	jb     f0105dd5 <test_free+0x2d>$/;"	l
f0105e4b	obj/kern/kernel.asm	/^f0105e4b:	eb 94                	jmp    f0105de1 <test_free+0x39>$/;"	l
f0105e4d	obj/kern/kernel.asm	/^f0105e4d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	5b                   	pop    %ebx$/;"	l
f0105e51	obj/kern/kernel.asm	/^f0105e51:	5e                   	pop    %esi$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	5f                   	pop    %edi$/;"	l
f0105e53	obj/kern/kernel.asm	/^f0105e53:	5d                   	pop    %ebp$/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54:	c3                   	ret    $/;"	l
f0105e55	obj/kern/kernel.asm	/^f0105e55:	66 90                	xchg   %ax,%ax$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	66 90                	xchg   %ax,%ax$/;"	l
f0105e59	obj/kern/kernel.asm	/^f0105e59:	66 90                	xchg   %ax,%ax$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	66 90                	xchg   %ax,%ax$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	66 90                	xchg   %ax,%ax$/;"	l
f0105e5f	obj/kern/kernel.asm	/^f0105e5f:	90                   	nop$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60 <__udivdi3>:$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	55                   	push   %ebp$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	57                   	push   %edi$/;"	l
f0105e62	obj/kern/kernel.asm	/^f0105e62:	56                   	push   %esi$/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	53                   	push   %ebx$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105e67	obj/kern/kernel.asm	/^f0105e67:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f0105e6b	obj/kern/kernel.asm	/^f0105e6b:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f0105e73	obj/kern/kernel.asm	/^f0105e73:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0105e77	obj/kern/kernel.asm	/^f0105e77:	85 f6                	test   %esi,%esi$/;"	l
f0105e79	obj/kern/kernel.asm	/^f0105e79:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105e7d	obj/kern/kernel.asm	/^f0105e7d:	89 ca                	mov    %ecx,%edx$/;"	l
f0105e7f	obj/kern/kernel.asm	/^f0105e7f:	89 f8                	mov    %edi,%eax$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	75 3d                	jne    f0105ec0 <__udivdi3+0x60>$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	39 cf                	cmp    %ecx,%edi$/;"	l
f0105e85	obj/kern/kernel.asm	/^f0105e85:	0f 87 c5 00 00 00    	ja     f0105f50 <__udivdi3+0xf0>$/;"	l
f0105e8b	obj/kern/kernel.asm	/^f0105e8b:	85 ff                	test   %edi,%edi$/;"	l
f0105e8d	obj/kern/kernel.asm	/^f0105e8d:	89 fd                	mov    %edi,%ebp$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	75 0b                	jne    f0105e9c <__udivdi3+0x3c>$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0105e96	obj/kern/kernel.asm	/^f0105e96:	31 d2                	xor    %edx,%edx$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	f7 f7                	div    %edi$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	89 c5                	mov    %eax,%ebp$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	89 c8                	mov    %ecx,%eax$/;"	l
f0105e9e	obj/kern/kernel.asm	/^f0105e9e:	31 d2                	xor    %edx,%edx$/;"	l
f0105ea0	obj/kern/kernel.asm	/^f0105ea0:	f7 f5                	div    %ebp$/;"	l
f0105ea2	obj/kern/kernel.asm	/^f0105ea2:	89 c1                	mov    %eax,%ecx$/;"	l
f0105ea4	obj/kern/kernel.asm	/^f0105ea4:	89 d8                	mov    %ebx,%eax$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	89 cf                	mov    %ecx,%edi$/;"	l
f0105ea8	obj/kern/kernel.asm	/^f0105ea8:	f7 f5                	div    %ebp$/;"	l
f0105eaa	obj/kern/kernel.asm	/^f0105eaa:	89 c3                	mov    %eax,%ebx$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	89 d8                	mov    %ebx,%eax$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	89 fa                	mov    %edi,%edx$/;"	l
f0105eb0	obj/kern/kernel.asm	/^f0105eb0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	5b                   	pop    %ebx$/;"	l
f0105eb4	obj/kern/kernel.asm	/^f0105eb4:	5e                   	pop    %esi$/;"	l
f0105eb5	obj/kern/kernel.asm	/^f0105eb5:	5f                   	pop    %edi$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	5d                   	pop    %ebp$/;"	l
f0105eb7	obj/kern/kernel.asm	/^f0105eb7:	c3                   	ret    $/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	90                   	nop$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	39 ce                	cmp    %ecx,%esi$/;"	l
f0105ec2	obj/kern/kernel.asm	/^f0105ec2:	77 74                	ja     f0105f38 <__udivdi3+0xd8>$/;"	l
f0105ec4	obj/kern/kernel.asm	/^f0105ec4:	0f bd fe             	bsr    %esi,%edi$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0105eca	obj/kern/kernel.asm	/^f0105eca:	0f 84 98 00 00 00    	je     f0105f68 <__udivdi3+0x108>$/;"	l
f0105ed0	obj/kern/kernel.asm	/^f0105ed0:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0105ed5	obj/kern/kernel.asm	/^f0105ed5:	89 f9                	mov    %edi,%ecx$/;"	l
f0105ed7	obj/kern/kernel.asm	/^f0105ed7:	89 c5                	mov    %eax,%ebp$/;"	l
f0105ed9	obj/kern/kernel.asm	/^f0105ed9:	29 fb                	sub    %edi,%ebx$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	d3 e6                	shl    %cl,%esi$/;"	d
f0105edd	obj/kern/kernel.asm	/^f0105edd:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	d3 ed                	shr    %cl,%ebp$/;"	d
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	89 f9                	mov    %edi,%ecx$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	d3 e0                	shl    %cl,%eax$/;"	d
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	09 ee                	or     %ebp,%esi$/;"	l
f0105ee7	obj/kern/kernel.asm	/^f0105ee7:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105ee9	obj/kern/kernel.asm	/^f0105ee9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105eed	obj/kern/kernel.asm	/^f0105eed:	89 d5                	mov    %edx,%ebp$/;"	l
f0105eef	obj/kern/kernel.asm	/^f0105eef:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0105ef3	obj/kern/kernel.asm	/^f0105ef3:	d3 ed                	shr    %cl,%ebp$/;"	d
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	89 f9                	mov    %edi,%ecx$/;"	l
f0105ef7	obj/kern/kernel.asm	/^f0105ef7:	d3 e2                	shl    %cl,%edx$/;"	d
f0105ef9	obj/kern/kernel.asm	/^f0105ef9:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	d3 e8                	shr    %cl,%eax$/;"	d
f0105efd	obj/kern/kernel.asm	/^f0105efd:	09 c2                	or     %eax,%edx$/;"	l
f0105eff	obj/kern/kernel.asm	/^f0105eff:	89 d0                	mov    %edx,%eax$/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	89 ea                	mov    %ebp,%edx$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	f7 f6                	div    %esi$/;"	l
f0105f05	obj/kern/kernel.asm	/^f0105f05:	89 d5                	mov    %edx,%ebp$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	89 c3                	mov    %eax,%ebx$/;"	l
f0105f09	obj/kern/kernel.asm	/^f0105f09:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0105f0d	obj/kern/kernel.asm	/^f0105f0d:	39 d5                	cmp    %edx,%ebp$/;"	l
f0105f0f	obj/kern/kernel.asm	/^f0105f0f:	72 10                	jb     f0105f21 <__udivdi3+0xc1>$/;"	l
f0105f11	obj/kern/kernel.asm	/^f0105f11:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0105f15	obj/kern/kernel.asm	/^f0105f15:	89 f9                	mov    %edi,%ecx$/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	d3 e6                	shl    %cl,%esi$/;"	d
f0105f19	obj/kern/kernel.asm	/^f0105f19:	39 c6                	cmp    %eax,%esi$/;"	l
f0105f1b	obj/kern/kernel.asm	/^f0105f1b:	73 07                	jae    f0105f24 <__udivdi3+0xc4>$/;"	l
f0105f1d	obj/kern/kernel.asm	/^f0105f1d:	39 d5                	cmp    %edx,%ebp$/;"	l
f0105f1f	obj/kern/kernel.asm	/^f0105f1f:	75 03                	jne    f0105f24 <__udivdi3+0xc4>$/;"	l
f0105f21	obj/kern/kernel.asm	/^f0105f21:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105f24	obj/kern/kernel.asm	/^f0105f24:	31 ff                	xor    %edi,%edi$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	89 d8                	mov    %ebx,%eax$/;"	l
f0105f28	obj/kern/kernel.asm	/^f0105f28:	89 fa                	mov    %edi,%edx$/;"	l
f0105f2a	obj/kern/kernel.asm	/^f0105f2a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	5b                   	pop    %ebx$/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	5e                   	pop    %esi$/;"	l
f0105f2f	obj/kern/kernel.asm	/^f0105f2f:	5f                   	pop    %edi$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	5d                   	pop    %ebp$/;"	l
f0105f31	obj/kern/kernel.asm	/^f0105f31:	c3                   	ret    $/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	31 ff                	xor    %edi,%edi$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	31 db                	xor    %ebx,%ebx$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	89 d8                	mov    %ebx,%eax$/;"	l
f0105f3e	obj/kern/kernel.asm	/^f0105f3e:	89 fa                	mov    %edi,%edx$/;"	l
f0105f40	obj/kern/kernel.asm	/^f0105f40:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	5b                   	pop    %ebx$/;"	l
f0105f44	obj/kern/kernel.asm	/^f0105f44:	5e                   	pop    %esi$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	5f                   	pop    %edi$/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	5d                   	pop    %ebp$/;"	l
f0105f47	obj/kern/kernel.asm	/^f0105f47:	c3                   	ret    $/;"	l
f0105f48	obj/kern/kernel.asm	/^f0105f48:	90                   	nop$/;"	l
f0105f49	obj/kern/kernel.asm	/^f0105f49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105f50	obj/kern/kernel.asm	/^f0105f50:	89 d8                	mov    %ebx,%eax$/;"	l
f0105f52	obj/kern/kernel.asm	/^f0105f52:	f7 f7                	div    %edi$/;"	l
f0105f54	obj/kern/kernel.asm	/^f0105f54:	31 ff                	xor    %edi,%edi$/;"	l
f0105f56	obj/kern/kernel.asm	/^f0105f56:	89 c3                	mov    %eax,%ebx$/;"	l
f0105f58	obj/kern/kernel.asm	/^f0105f58:	89 d8                	mov    %ebx,%eax$/;"	l
f0105f5a	obj/kern/kernel.asm	/^f0105f5a:	89 fa                	mov    %edi,%edx$/;"	l
f0105f5c	obj/kern/kernel.asm	/^f0105f5c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105f5f	obj/kern/kernel.asm	/^f0105f5f:	5b                   	pop    %ebx$/;"	l
f0105f60	obj/kern/kernel.asm	/^f0105f60:	5e                   	pop    %esi$/;"	l
f0105f61	obj/kern/kernel.asm	/^f0105f61:	5f                   	pop    %edi$/;"	l
f0105f62	obj/kern/kernel.asm	/^f0105f62:	5d                   	pop    %ebp$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	c3                   	ret    $/;"	l
f0105f64	obj/kern/kernel.asm	/^f0105f64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105f68	obj/kern/kernel.asm	/^f0105f68:	39 ce                	cmp    %ecx,%esi$/;"	l
f0105f6a	obj/kern/kernel.asm	/^f0105f6a:	72 0c                	jb     f0105f78 <__udivdi3+0x118>$/;"	l
f0105f6c	obj/kern/kernel.asm	/^f0105f6c:	31 db                	xor    %ebx,%ebx$/;"	l
f0105f6e	obj/kern/kernel.asm	/^f0105f6e:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	0f 87 34 ff ff ff    	ja     f0105eac <__udivdi3+0x4c>$/;"	l
f0105f78	obj/kern/kernel.asm	/^f0105f78:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	e9 2a ff ff ff       	jmp    f0105eac <__udivdi3+0x4c>$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	66 90                	xchg   %ax,%ax$/;"	l
f0105f84	obj/kern/kernel.asm	/^f0105f84:	66 90                	xchg   %ax,%ax$/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	66 90                	xchg   %ax,%ax$/;"	l
f0105f88	obj/kern/kernel.asm	/^f0105f88:	66 90                	xchg   %ax,%ax$/;"	l
f0105f8a	obj/kern/kernel.asm	/^f0105f8a:	66 90                	xchg   %ax,%ax$/;"	l
f0105f8c	obj/kern/kernel.asm	/^f0105f8c:	66 90                	xchg   %ax,%ax$/;"	l
f0105f8e	obj/kern/kernel.asm	/^f0105f8e:	66 90                	xchg   %ax,%ax$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90 <__umoddi3>:$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	55                   	push   %ebp$/;"	l
f0105f91	obj/kern/kernel.asm	/^f0105f91:	57                   	push   %edi$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	56                   	push   %esi$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	53                   	push   %ebx$/;"	l
f0105f94	obj/kern/kernel.asm	/^f0105f94:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105f97	obj/kern/kernel.asm	/^f0105f97:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f0105f9b	obj/kern/kernel.asm	/^f0105f9b:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f0105f9f	obj/kern/kernel.asm	/^f0105f9f:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0105fa3	obj/kern/kernel.asm	/^f0105fa3:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0105fa7	obj/kern/kernel.asm	/^f0105fa7:	85 d2                	test   %edx,%edx$/;"	l
f0105fa9	obj/kern/kernel.asm	/^f0105fa9:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	89 f3                	mov    %esi,%ebx$/;"	l
f0105fb3	obj/kern/kernel.asm	/^f0105fb3:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105fb6	obj/kern/kernel.asm	/^f0105fb6:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	75 1c                	jne    f0105fd8 <__umoddi3+0x48>$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	39 f7                	cmp    %esi,%edi$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	76 50                	jbe    f0106010 <__umoddi3+0x80>$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0:	89 c8                	mov    %ecx,%eax$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	89 f2                	mov    %esi,%edx$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	f7 f7                	div    %edi$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	89 d0                	mov    %edx,%eax$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	31 d2                	xor    %edx,%edx$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	5b                   	pop    %ebx$/;"	l
f0105fce	obj/kern/kernel.asm	/^f0105fce:	5e                   	pop    %esi$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	5f                   	pop    %edi$/;"	l
f0105fd0	obj/kern/kernel.asm	/^f0105fd0:	5d                   	pop    %ebp$/;"	l
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	c3                   	ret    $/;"	l
f0105fd2	obj/kern/kernel.asm	/^f0105fd2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8:	39 f2                	cmp    %esi,%edx$/;"	l
f0105fda	obj/kern/kernel.asm	/^f0105fda:	89 d0                	mov    %edx,%eax$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	77 52                	ja     f0106030 <__umoddi3+0xa0>$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0105fe4	obj/kern/kernel.asm	/^f0105fe4:	75 5a                	jne    f0106040 <__umoddi3+0xb0>$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f0105fea	obj/kern/kernel.asm	/^f0105fea:	0f 82 e0 00 00 00    	jb     f01060d0 <__umoddi3+0x140>$/;"	l
f0105ff0	obj/kern/kernel.asm	/^f0105ff0:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	0f 86 d7 00 00 00    	jbe    f01060d0 <__umoddi3+0x140>$/;"	l
f0105ff9	obj/kern/kernel.asm	/^f0105ff9:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0105ffd	obj/kern/kernel.asm	/^f0105ffd:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0106001	obj/kern/kernel.asm	/^f0106001:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	5b                   	pop    %ebx$/;"	l
f0106005	obj/kern/kernel.asm	/^f0106005:	5e                   	pop    %esi$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	5f                   	pop    %edi$/;"	l
f0106007	obj/kern/kernel.asm	/^f0106007:	5d                   	pop    %ebp$/;"	l
f0106008	obj/kern/kernel.asm	/^f0106008:	c3                   	ret    $/;"	l
f0106009	obj/kern/kernel.asm	/^f0106009:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	85 ff                	test   %edi,%edi$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	89 fd                	mov    %edi,%ebp$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	75 0b                	jne    f0106021 <__umoddi3+0x91>$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b:	31 d2                	xor    %edx,%edx$/;"	l
f010601d	obj/kern/kernel.asm	/^f010601d:	f7 f7                	div    %edi$/;"	l
f010601f	obj/kern/kernel.asm	/^f010601f:	89 c5                	mov    %eax,%ebp$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	89 f0                	mov    %esi,%eax$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	31 d2                	xor    %edx,%edx$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	f7 f5                	div    %ebp$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	89 c8                	mov    %ecx,%eax$/;"	l
f0106029	obj/kern/kernel.asm	/^f0106029:	f7 f5                	div    %ebp$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	89 d0                	mov    %edx,%eax$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	eb 99                	jmp    f0105fc8 <__umoddi3+0x38>$/;"	l
f010602f	obj/kern/kernel.asm	/^f010602f:	90                   	nop$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	89 c8                	mov    %ecx,%eax$/;"	l
f0106032	obj/kern/kernel.asm	/^f0106032:	89 f2                	mov    %esi,%edx$/;"	l
f0106034	obj/kern/kernel.asm	/^f0106034:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106037	obj/kern/kernel.asm	/^f0106037:	5b                   	pop    %ebx$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038:	5e                   	pop    %esi$/;"	l
f0106039	obj/kern/kernel.asm	/^f0106039:	5f                   	pop    %edi$/;"	l
f010603a	obj/kern/kernel.asm	/^f010603a:	5d                   	pop    %ebp$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	c3                   	ret    $/;"	l
f010603c	obj/kern/kernel.asm	/^f010603c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0106048	obj/kern/kernel.asm	/^f0106048:	89 e9                	mov    %ebp,%ecx$/;"	l
f010604a	obj/kern/kernel.asm	/^f010604a:	29 ef                	sub    %ebp,%edi$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	d3 e0                	shl    %cl,%eax$/;"	d
f010604e	obj/kern/kernel.asm	/^f010604e:	89 f9                	mov    %edi,%ecx$/;"	l
f0106050	obj/kern/kernel.asm	/^f0106050:	89 f2                	mov    %esi,%edx$/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052:	d3 ea                	shr    %cl,%edx$/;"	d
f0106054	obj/kern/kernel.asm	/^f0106054:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106056	obj/kern/kernel.asm	/^f0106056:	09 c2                	or     %eax,%edx$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	89 d8                	mov    %ebx,%eax$/;"	l
f010605a	obj/kern/kernel.asm	/^f010605a:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	89 f2                	mov    %esi,%edx$/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f:	d3 e2                	shl    %cl,%edx$/;"	d
f0106061	obj/kern/kernel.asm	/^f0106061:	89 f9                	mov    %edi,%ecx$/;"	l
f0106063	obj/kern/kernel.asm	/^f0106063:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f010606b	obj/kern/kernel.asm	/^f010606b:	d3 e8                	shr    %cl,%eax$/;"	d
f010606d	obj/kern/kernel.asm	/^f010606d:	89 e9                	mov    %ebp,%ecx$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	89 c6                	mov    %eax,%esi$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106073	obj/kern/kernel.asm	/^f0106073:	89 f9                	mov    %edi,%ecx$/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	89 d0                	mov    %edx,%eax$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	d3 e8                	shr    %cl,%eax$/;"	d
f0106079	obj/kern/kernel.asm	/^f0106079:	89 e9                	mov    %ebp,%ecx$/;"	l
f010607b	obj/kern/kernel.asm	/^f010607b:	09 d8                	or     %ebx,%eax$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	89 d3                	mov    %edx,%ebx$/;"	l
f010607f	obj/kern/kernel.asm	/^f010607f:	89 f2                	mov    %esi,%edx$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	f7 34 24             	divl   (%esp)$/;"	l
f0106084	obj/kern/kernel.asm	/^f0106084:	89 d6                	mov    %edx,%esi$/;"	l
f0106086	obj/kern/kernel.asm	/^f0106086:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106088	obj/kern/kernel.asm	/^f0106088:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f010608c	obj/kern/kernel.asm	/^f010608c:	39 d6                	cmp    %edx,%esi$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	89 d1                	mov    %edx,%ecx$/;"	l
f0106094	obj/kern/kernel.asm	/^f0106094:	89 c3                	mov    %eax,%ebx$/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	72 08                	jb     f01060a0 <__umoddi3+0x110>$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	75 11                	jne    f01060ab <__umoddi3+0x11b>$/;"	l
f010609a	obj/kern/kernel.asm	/^f010609a:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f010609e	obj/kern/kernel.asm	/^f010609e:	73 0b                	jae    f01060ab <__umoddi3+0x11b>$/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f01060a4	obj/kern/kernel.asm	/^f01060a4:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	89 d1                	mov    %edx,%ecx$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	89 c3                	mov    %eax,%ebx$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f01060af	obj/kern/kernel.asm	/^f01060af:	29 da                	sub    %ebx,%edx$/;"	l
f01060b1	obj/kern/kernel.asm	/^f01060b1:	19 ce                	sbb    %ecx,%esi$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	89 f9                	mov    %edi,%ecx$/;"	l
f01060b5	obj/kern/kernel.asm	/^f01060b5:	89 f0                	mov    %esi,%eax$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	d3 e0                	shl    %cl,%eax$/;"	d
f01060b9	obj/kern/kernel.asm	/^f01060b9:	89 e9                	mov    %ebp,%ecx$/;"	l
f01060bb	obj/kern/kernel.asm	/^f01060bb:	d3 ea                	shr    %cl,%edx$/;"	d
f01060bd	obj/kern/kernel.asm	/^f01060bd:	89 e9                	mov    %ebp,%ecx$/;"	l
f01060bf	obj/kern/kernel.asm	/^f01060bf:	d3 ee                	shr    %cl,%esi$/;"	d
f01060c1	obj/kern/kernel.asm	/^f01060c1:	09 d0                	or     %edx,%eax$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	89 f2                	mov    %esi,%edx$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	5b                   	pop    %ebx$/;"	l
f01060c9	obj/kern/kernel.asm	/^f01060c9:	5e                   	pop    %esi$/;"	l
f01060ca	obj/kern/kernel.asm	/^f01060ca:	5f                   	pop    %edi$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	5d                   	pop    %ebp$/;"	l
f01060cc	obj/kern/kernel.asm	/^f01060cc:	c3                   	ret    $/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	29 f9                	sub    %edi,%ecx$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	19 d6                	sbb    %edx,%esi$/;"	l
f01060d4	obj/kern/kernel.asm	/^f01060d4:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01060dc	obj/kern/kernel.asm	/^f01060dc:	e9 18 ff ff ff       	jmp    f0105ff9 <__umoddi3+0x69>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon9
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/date.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/date.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = -1;$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/memlayout.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/memlayout.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = -1;$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/sigcount.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sigcount.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sigfact.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sigfact.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sigpingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sigpingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = -1;$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = -1;$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/testsignal.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testsignal.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/vdate.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/vdate.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon7	typeref:struct:Fd::__anon7::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
ffail	grade-lab3	/^ffail  = generate_function_name()$/;"	v
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
find_function	kern/kdebug.c	/^find_function(const char * const fname)$/;"	f
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
fname	grade-lab3	/^fname  = generate_function_name()$/;"	v
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
freep	kern/alloc.c	/^static Header *freep = NULL; \/* start of free list *\/$/;"	v	file:
freep	obj/kern/kernel.asm	/^			freep = p->s.prev;$/;"	d
freep	obj/kern/kernel.asm	/^		freep = &base;$/;"	d
freep	obj/kern/kernel.asm	/^	freep = p;$/;"	d
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/date.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/memlayout.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sigcount.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sigfact.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sigpingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testsignal.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/vdate.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gen_primes	grade-lab11	/^def gen_primes(n):$/;"	f
generate_function_name	grade-lab3	/^def generate_function_name():$/;"	f
generate_postfix	grade-lab3	/^def generate_postfix():$/;"	f
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
get_symbol_address	gradelib.py	/^def get_symbol_address(s):$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
gettime	kern/kclock.c	/^int gettime(void)$/;"	f
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/sigcount.c	/^handler(int val)$/;"	f
handler	user/sigfact.c	/^handler(int val)$/;"	f
handler	user/sigpingpong.c	/^handler(int val)$/;"	f
handler	user/testsignal.c	/^handler(int val)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
header	kern/alloc.h	/^union header { \/* block header *\/$/;"	u
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
hour	obj/kern/kernel.asm	/^          hour = mc146818_read(0x04);$/;"	d
hour	obj/kern/kernel.asm	/^    hour = ( (hour & 0x0F) + (((hour & 0x70) \/ 16) * 10) ) | (hour & 0x80);$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/sigpingpong.asm	/^    i = val;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i	user/sigpingpong.c	/^int i;$/;"	v
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
in_clock_interrupt	kern/cpu.h	/^in_clock_interrupt( void )$/;"	f
in_interrupt	kern/cpu.h	/^in_interrupt( void )$/;"	f
inb	inc/x86.h	/^inb(int port)$/;"	f
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int sys_gettime(void)$/;"	l
int	obj/fs/fs.asm	/^int vsys_gettime(void)$/;"	l
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int d_to_s(int d)$/;"	l
int	obj/kern/kernel.asm	/^int gettime(void)$/;"	l
int	obj/kern/kernel.asm	/^int timestamp(struct tm *time)$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/badsegment.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/breakpoint.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/buggyhello.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/buggyhello2.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/cat.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/date.asm	/^int d_to_s(int d)$/;"	l
int	obj/user/date.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/date.asm	/^int timestamp(struct tm *time)$/;"	l
int	obj/user/date.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/date.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/divzero.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/dumbfork.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/echo.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/evilhello.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/fairness.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/faultalloc.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/faultallocbad.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/faultbadhandler.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/faultdie.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/faultevilhandler.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/faultnostack.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/faultread.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/faultreadkernel.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/faultregs.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/faultwrite.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/faultwritekernel.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/forktree.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/hello.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/icode.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/idle.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/init.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/ls.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/lsfd.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/memlayout.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/memlayout.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/memlayout.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/num.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/pingpong.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/pingpongs.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/primes.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/primespipe.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/sh.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/sigcount.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/sigcount.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/sigcount.asm	/^int$/;"	l
int	obj/user/sigfact.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/sigfact.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/sigfact.asm	/^int$/;"	l
int	obj/user/sigpingpong.asm	/^int i;$/;"	l
int	obj/user/sigpingpong.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/sigpingpong.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/sigpingpong.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/softint.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/spawnhello.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/spin.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/stresssched.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/testbss.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/testfdsharing.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/testfile.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/testkbd.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/testpipe.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/testpiperace.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/testpiperace2.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/testpteshare.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/testshell.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/testsignal.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/testsignal.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/testsignal.asm	/^int$/;"	l
int	obj/user/vdate.asm	/^int d_to_s(int d)$/;"	l
int	obj/user/vdate.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/vdate.asm	/^int timestamp(struct tm *time)$/;"	l
int	obj/user/vdate.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/vdate.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int sys_gettime(void)$/;"	l
int	obj/user/yield.asm	/^int vsys_gettime(void)$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/date.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/memlayout.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/sigcount.asm	/^int32_t$/;"	l
int32_t	obj/user/sigfact.asm	/^int32_t$/;"	l
int32_t	obj/user/sigpingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/testsignal.asm	/^int32_t$/;"	l
int32_t	obj/user/vdate.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
is_hex	grade-lab3	/^def is_hex(s):$/;"	f
is_hex	grade-lab4	/^def is_hex(s):$/;"	f
is_leap_year	inc/time.h	/^bool is_leap_year(int year)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
last_day	obj/kern/kernel.asm	/^          last_day = day;$/;"	d
last_hour	obj/kern/kernel.asm	/^          last_hour = hour;$/;"	d
last_month	obj/kern/kernel.asm	/^          last_month = month;$/;"	d
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
last_year	obj/kern/kernel.asm	/^          last_year = year;$/;"	d
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/date.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/memlayout.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sigcount.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sigfact.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sigpingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testsignal.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/vdate.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	user/num.c	/^int line = 0;$/;"	v
lk	kern/alloc.c	/^static struct spinlock lk = {0};$/;"	v	typeref:struct:spinlock	file:
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:
load_icode_bytes	grade-lab3	/^load_icode_bytes = []$/;"	v
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/date.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/memlayout.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/sigcount.asm	/^long$/;"	l
long	obj/user/sigfact.asm	/^long$/;"	l
long	obj/user/sigpingpong.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/testsignal.asm	/^long$/;"	l
long	obj/user/vdate.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/date.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/date.asm	/^		m = n - tot;$/;"	d
m	obj/user/date.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/memlayout.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/memlayout.asm	/^		m = n - tot;$/;"	d
m	obj/user/memlayout.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sigcount.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sigcount.asm	/^		m = n - tot;$/;"	d
m	obj/user/sigcount.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sigfact.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sigfact.asm	/^		m = n - tot;$/;"	d
m	obj/user/sigfact.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sigpingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sigpingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/sigpingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testsignal.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testsignal.asm	/^		m = n - tot;$/;"	d
m	obj/user/testsignal.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/vdate.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/vdate.asm	/^		m = n - tot;$/;"	d
m	obj/user/vdate.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
matchtest	grade-lab10	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
measure_time	grade-lab4	/^def measure_time(out):$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memlayout	user/memlayout.c	/^memlayout(void)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
minute	obj/kern/kernel.asm	/^    minute = (minute & 0x0F) + ((minute \/ 16) * 10);$/;"	d
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mktime	inc/time.h	/^void mktime(int time, struct tm *tm)$/;"	f
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_echo	kern/monitor.c	/^mon_echo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_exit	kern/monitor.c	/^mon_exit(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kill	kern/monitor.c	/^mon_kill(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_list_pages	kern/monitor.c	/^mon_list_pages(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_timer_start	kern/monitor.c	/^mon_timer_start(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_timer_stop	kern/monitor.c	/^mon_timer_stop(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
month	obj/kern/kernel.asm	/^          month = mc146818_read(0x08);$/;"	d
month	obj/kern/kernel.asm	/^    month = (month & 0x0F) + ((month \/ 16) * 10);$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon12	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon12	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/fs/fs.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/badsegment.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/date.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/date.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/evilhello.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/icode.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/memlayout.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/memlayout.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/sigcount.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sigcount.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/sigfact.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sigfact.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/sigpingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sigpingpong.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/testsignal.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testsignal.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/vdate.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/vdate.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^    n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf) : n;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/date.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/memlayout.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sigcount.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sigfact.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sigpingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testsignal.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/vdate.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
next	kern/alloc.h	/^		union header *next; \/* next block if on free list *\/$/;"	m	struct:header::__anon3	typeref:union:header::__anon3::header
next	lib/random.c	/^static unsigned int next = 1;$/;"	v	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^    nextfree = ROUNDUP(nextfree + n, PGSIZE);$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nmi_disable	inc/x86.h	/^nmi_disable(void)$/;"	f
nmi_enable	inc/x86.h	/^nmi_enable(void)$/;"	f
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/date.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/memlayout.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sigcount.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sigfact.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sigpingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testsignal.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/vdate.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
nsa	obj/kern/kernel.asm	/^            nsa = e->env_sa + (sigev + 1)->sigev_signo;$/;"	d
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/date.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/date.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/date.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/date.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/memlayout.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/memlayout.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/memlayout.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/memlayout.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sigcount.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sigcount.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sigcount.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sigcount.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sigfact.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sigfact.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sigfact.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sigfact.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sigpingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sigpingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sigpingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sigpingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testsignal.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testsignal.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testsignal.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testsignal.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/vdate.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/vdate.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/vdate.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/vdate.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/date.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/memlayout.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/sigcount.asm	/^		number:$/;"	l
number	obj/user/sigfact.asm	/^		number:$/;"	l
number	obj/user/sigpingpong.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/testsignal.asm	/^		number:$/;"	l
number	obj/user/vdate.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nunits	obj/kern/kernel.asm	/^	nunits = (nbytes + sizeof(Header) - 1) \/ sizeof(Header) + 1;$/;"	d
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/date.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/memlayout.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sigcount.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sigfact.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sigpingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testsignal.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/vdate.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	71;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/date.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/memlayout.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sigcount.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sigfact.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sigpingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testsignal.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/vdate.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/date.asm	/^				p = "(null)";$/;"	d
p	obj/user/date.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/date.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/memlayout.asm	/^				p = "(null)";$/;"	d
p	obj/user/memlayout.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/memlayout.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sigcount.asm	/^				p = "(null)";$/;"	d
p	obj/user/sigcount.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sigcount.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sigfact.asm	/^				p = "(null)";$/;"	d
p	obj/user/sigfact.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sigfact.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sigpingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/sigpingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sigpingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testsignal.asm	/^				p = "(null)";$/;"	d
p	obj/user/testsignal.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testsignal.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/vdate.asm	/^				p = "(null)";$/;"	d
p	obj/user/vdate.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/vdate.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/date.asm	/^			padc = '-';$/;"	d
padc	obj/user/date.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/memlayout.asm	/^			padc = '-';$/;"	d
padc	obj/user/memlayout.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/sigcount.asm	/^			padc = '-';$/;"	d
padc	obj/user/sigcount.asm	/^			padc = '0';$/;"	d
padc	obj/user/sigfact.asm	/^			padc = '-';$/;"	d
padc	obj/user/sigfact.asm	/^			padc = '0';$/;"	d
padc	obj/user/sigpingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/sigpingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/testsignal.asm	/^			padc = '-';$/;"	d
padc	obj/user/testsignal.asm	/^			padc = '0';$/;"	d
padc	obj/user/vdate.asm	/^			padc = '-';$/;"	d
padc	obj/user/vdate.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^    page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^    page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^    pages = boot_alloc(npages * sizeof(*pages));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/fs/fs.asm	/^        perm = 0;$/;"	d
perm	obj/fs/fs.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/badsegment.asm	/^        perm = 0;$/;"	d
perm	obj/user/badsegment.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/breakpoint.asm	/^        perm = 0;$/;"	d
perm	obj/user/breakpoint.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/buggyhello.asm	/^        perm = 0;$/;"	d
perm	obj/user/buggyhello.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/buggyhello2.asm	/^        perm = 0;$/;"	d
perm	obj/user/buggyhello2.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/cat.asm	/^        perm = 0;$/;"	d
perm	obj/user/cat.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/date.asm	/^        perm = 0;$/;"	d
perm	obj/user/date.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/divzero.asm	/^        perm = 0;$/;"	d
perm	obj/user/divzero.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/dumbfork.asm	/^        perm = 0;$/;"	d
perm	obj/user/dumbfork.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/echo.asm	/^        perm = 0;$/;"	d
perm	obj/user/echo.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/evilhello.asm	/^        perm = 0;$/;"	d
perm	obj/user/evilhello.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/fairness.asm	/^        perm = 0;$/;"	d
perm	obj/user/fairness.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/faultalloc.asm	/^        perm = 0;$/;"	d
perm	obj/user/faultalloc.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/faultallocbad.asm	/^        perm = 0;$/;"	d
perm	obj/user/faultallocbad.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/faultbadhandler.asm	/^        perm = 0;$/;"	d
perm	obj/user/faultbadhandler.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/faultdie.asm	/^        perm = 0;$/;"	d
perm	obj/user/faultdie.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/faultevilhandler.asm	/^        perm = 0;$/;"	d
perm	obj/user/faultevilhandler.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/faultnostack.asm	/^        perm = 0;$/;"	d
perm	obj/user/faultnostack.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/faultread.asm	/^        perm = 0;$/;"	d
perm	obj/user/faultread.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/faultreadkernel.asm	/^        perm = 0;$/;"	d
perm	obj/user/faultreadkernel.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/faultregs.asm	/^        perm = 0;$/;"	d
perm	obj/user/faultregs.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/faultwrite.asm	/^        perm = 0;$/;"	d
perm	obj/user/faultwrite.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/faultwritekernel.asm	/^        perm = 0;$/;"	d
perm	obj/user/faultwritekernel.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/forktree.asm	/^        perm = 0;$/;"	d
perm	obj/user/forktree.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/hello.asm	/^        perm = 0;$/;"	d
perm	obj/user/hello.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/icode.asm	/^        perm = 0;$/;"	d
perm	obj/user/icode.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/idle.asm	/^        perm = 0;$/;"	d
perm	obj/user/idle.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^        perm = 0;$/;"	d
perm	obj/user/init.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/ls.asm	/^        perm = 0;$/;"	d
perm	obj/user/ls.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/lsfd.asm	/^        perm = 0;$/;"	d
perm	obj/user/lsfd.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/memlayout.asm	/^        perm = 0;$/;"	d
perm	obj/user/memlayout.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/num.asm	/^        perm = 0;$/;"	d
perm	obj/user/num.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/pingpong.asm	/^        perm = 0;$/;"	d
perm	obj/user/pingpong.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/pingpongs.asm	/^        perm = 0;$/;"	d
perm	obj/user/pingpongs.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/primes.asm	/^        perm = 0;$/;"	d
perm	obj/user/primes.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/primespipe.asm	/^        perm = 0;$/;"	d
perm	obj/user/primespipe.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^        perm = 0;$/;"	d
perm	obj/user/sh.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/sigcount.asm	/^        perm = 0;$/;"	d
perm	obj/user/sigcount.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/sigfact.asm	/^        perm = 0;$/;"	d
perm	obj/user/sigfact.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/sigpingpong.asm	/^        perm = 0;$/;"	d
perm	obj/user/sigpingpong.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/softint.asm	/^        perm = 0;$/;"	d
perm	obj/user/softint.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^        perm = 0;$/;"	d
perm	obj/user/spawnhello.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/spin.asm	/^        perm = 0;$/;"	d
perm	obj/user/spin.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/stresssched.asm	/^        perm = 0;$/;"	d
perm	obj/user/stresssched.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/testbss.asm	/^        perm = 0;$/;"	d
perm	obj/user/testbss.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/testfdsharing.asm	/^        perm = 0;$/;"	d
perm	obj/user/testfdsharing.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/testfile.asm	/^        perm = 0;$/;"	d
perm	obj/user/testfile.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/testkbd.asm	/^        perm = 0;$/;"	d
perm	obj/user/testkbd.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/testpipe.asm	/^        perm = 0;$/;"	d
perm	obj/user/testpipe.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/testpiperace.asm	/^        perm = 0;$/;"	d
perm	obj/user/testpiperace.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/testpiperace2.asm	/^        perm = 0;$/;"	d
perm	obj/user/testpiperace2.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^        perm = 0;$/;"	d
perm	obj/user/testpteshare.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^        perm = 0;$/;"	d
perm	obj/user/testshell.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/testsignal.asm	/^        perm = 0;$/;"	d
perm	obj/user/testsignal.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/vdate.asm	/^        perm = 0;$/;"	d
perm	obj/user/vdate.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
perm	obj/user/yield.asm	/^        perm = 0;$/;"	d
perm	obj/user/yield.asm	/^        perm = thisenv->env_ipc_perm;$/;"	d
pfx1	grade-lab3	/^pfx1   = generate_postfix()$/;"	v
pfx2	grade-lab3	/^pfx2   = generate_postfix()$/;"	v
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/fs/fs.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/badsegment.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/breakpoint.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/buggyhello.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/buggyhello2.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/cat.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/date.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/divzero.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/dumbfork.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/echo.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/evilhello.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/fairness.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/faultalloc.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/faultallocbad.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/faultbadhandler.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/faultdie.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/faultevilhandler.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/faultnostack.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/faultread.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/faultreadkernel.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/faultregs.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/faultwrite.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/faultwritekernel.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/forktree.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/hello.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/icode.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/idle.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/init.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/ls.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/lsfd.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/memlayout.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/num.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/pingpong.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/pingpongs.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/primes.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/primespipe.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/sh.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/sigcount.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/sigfact.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/sigpingpong.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/softint.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/spawnhello.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/spin.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/stresssched.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/testbss.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/testfdsharing.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/testfile.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/testkbd.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/testpipe.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/testpiperace.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/testpiperace2.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/testpteshare.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/testshell.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/testsignal.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/vdate.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pg	obj/user/yield.asm	/^        pg = (void *) ( UTOP + 1 );$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgtab	obj/user/memlayout.asm	/^		pgtab = (pte_t *)uvpt + i * NPTENTRIES;$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pic_send_eoi	kern/picirq.c	/^pic_send_eoi(uint8_t irq)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pit_expect_msb	kern/tsc.c	/^static inline int pit_expect_msb(unsigned char val, uint64_t *tscp, unsigned long *deltap)$/;"	f	file:
pit_verify_msb	kern/tsc.c	/^static inline int pit_verify_msb(unsigned char val)$/;"	f	file:
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/date.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/date.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/date.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/memlayout.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/memlayout.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/memlayout.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/sigcount.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sigcount.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sigcount.asm	/^		precision = -1;$/;"	d
precision	obj/user/sigfact.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sigfact.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sigfact.asm	/^		precision = -1;$/;"	d
precision	obj/user/sigpingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sigpingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sigpingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/testsignal.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testsignal.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testsignal.asm	/^		precision = -1;$/;"	d
precision	obj/user/vdate.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/vdate.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/vdate.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
prev	kern/alloc.h	/^		union header *prev; \/* next block if on free list *\/$/;"	m	struct:header::__anon3	typeref:union:header::__anon3::header
prevp	obj/kern/kernel.asm	/^		prevp = p;$/;"	d
prevp	obj/kern/kernel.asm	/^	prevp = freep;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print_datetime	inc/time.h	/^void print_datetime(struct tm *tm)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_time	kern/tsc.c	/^void print_time(unsigned seconds)$/;"	f
print_timer_error	kern/tsc.c	/^void print_timer_error(void)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/date.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/memlayout.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sigcount.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sigfact.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sigpingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testsignal.asm	/^		process_precision:$/;"	l
process_precision	obj/user/vdate.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/date.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/memlayout.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sigcount.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sigfact.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sigpingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testsignal.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/vdate.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
quick_pit_calibrate	kern/tsc.c	/^static unsigned long quick_pit_calibrate(void)$/;"	f	file:
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab10	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab11	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab12	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab6	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab8	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab9	/^r = Runner(save("jos.out"),$/;"	v
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/date.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/date.asm	/^			r = 0;$/;"	d
r	obj/user/date.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/date.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/memlayout.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/memlayout.asm	/^			r = 0;$/;"	d
r	obj/user/memlayout.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/memlayout.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sigcount.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sigcount.asm	/^			r = 0;$/;"	d
r	obj/user/sigcount.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sigcount.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sigfact.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sigfact.asm	/^			r = 0;$/;"	d
r	obj/user/sigfact.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sigfact.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sigpingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sigpingpong.asm	/^			r = 0;$/;"	d
r	obj/user/sigpingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sigpingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testsignal.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testsignal.asm	/^			r = 0;$/;"	d
r	obj/user/testsignal.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testsignal.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/vdate.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/vdate.asm	/^			r = 0;$/;"	d
r	obj/user/vdate.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/vdate.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
rand	lib/random.c	/^rand(void)$/;"	f
rand_init	lib/random.c	/^rand_init(unsigned int num)$/;"	f
rand_r	lib/random.c	/^rand_r(unsigned int *seed)$/;"	f	file:
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/date.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/memlayout.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sigcount.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sigfact.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sigpingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testsignal.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/vdate.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
remove_breakpoint	gradelib.py	/^    def remove_breakpoint(self, addr):$/;"	m	class:GDBClient
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
res	grade-lab4	/^res = []$/;"	v
res	obj/user/memlayout.asm	/^	res = pipe(pipefd);$/;"	d
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/kern/kernel.asm	/^    result = nextfree;$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/date.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/memlayout.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sigcount.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sigfact.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sigpingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testsignal.asm	/^	reswitch:$/;"	l
reswitch	obj/user/vdate.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/fs/fs.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/date.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/date.asm	/^	ret = dst;$/;"	d
ret	obj/user/date.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/memlayout.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/memlayout.asm	/^	ret = dst;$/;"	d
ret	obj/user/memlayout.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/sigcount.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sigcount.asm	/^	ret = dst;$/;"	d
ret	obj/user/sigcount.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/sigfact.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sigfact.asm	/^	ret = dst;$/;"	d
ret	obj/user/sigfact.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/sigpingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sigpingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/sigpingpong.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/testsignal.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testsignal.asm	/^	ret = dst;$/;"	d
ret	obj/user/testsignal.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/vdate.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/vdate.asm	/^	ret = dst;$/;"	d
ret	obj/user/vdate.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^        ret = thisenv->env_ipc_value;$/;"	d
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon1	file:
rtc_check_status	kern/kclock.c	/^rtc_check_status(void)$/;"	f
rtc_init	kern/kclock.c	/^rtc_init(void)$/;"	f
run	grade-lab4	/^run = 10$/;"	v
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
s	kern/alloc.h	/^	} s;$/;"	m	union:header	typeref:struct:header::__anon3
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/date.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/memlayout.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/sigcount.asm	/^	s = src;$/;"	d
s	obj/user/sigfact.asm	/^	s = src;$/;"	d
s	obj/user/sigpingpong.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/testsignal.asm	/^	s = src;$/;"	d
s	obj/user/vdate.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sa	obj/kern/kernel.asm	/^            sa = e->env_sa + sigev->sigev_signo;$/;"	d
sa	obj/kern/kernel.asm	/^        sa = e->env_sa + sigev->sigev_signo;$/;"	d
sa_handler	inc/signal.h	/^    void (*sa_handler)(int);$/;"	m	struct:sigaction
sa_restorer	inc/signal.h	/^    void (*sa_restorer)();$/;"	m	struct:sigaction
save	gradelib.py	/^def save(path):$/;"	f
save_esp_register	grade-lab3	/^def save_esp_register(out):$/;"	f
save_load_icode_bytes	grade-lab3	/^def save_load_icode_bytes(out):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
save_res	grade-lab4	/^def save_res(out):$/;"	f
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
second	obj/kern/kernel.asm	/^    second = (second & 0x0F) + ((second \/ 16) * 10);$/;"	d
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
sender	obj/fs/fs.asm	/^        sender = 0;$/;"	d
sender	obj/fs/fs.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/badsegment.asm	/^        sender = 0;$/;"	d
sender	obj/user/badsegment.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/breakpoint.asm	/^        sender = 0;$/;"	d
sender	obj/user/breakpoint.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/buggyhello.asm	/^        sender = 0;$/;"	d
sender	obj/user/buggyhello.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/buggyhello2.asm	/^        sender = 0;$/;"	d
sender	obj/user/buggyhello2.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/cat.asm	/^        sender = 0;$/;"	d
sender	obj/user/cat.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/date.asm	/^        sender = 0;$/;"	d
sender	obj/user/date.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/divzero.asm	/^        sender = 0;$/;"	d
sender	obj/user/divzero.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/dumbfork.asm	/^        sender = 0;$/;"	d
sender	obj/user/dumbfork.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/echo.asm	/^        sender = 0;$/;"	d
sender	obj/user/echo.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/evilhello.asm	/^        sender = 0;$/;"	d
sender	obj/user/evilhello.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/fairness.asm	/^        sender = 0;$/;"	d
sender	obj/user/fairness.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/faultalloc.asm	/^        sender = 0;$/;"	d
sender	obj/user/faultalloc.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/faultallocbad.asm	/^        sender = 0;$/;"	d
sender	obj/user/faultallocbad.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/faultbadhandler.asm	/^        sender = 0;$/;"	d
sender	obj/user/faultbadhandler.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/faultdie.asm	/^        sender = 0;$/;"	d
sender	obj/user/faultdie.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/faultevilhandler.asm	/^        sender = 0;$/;"	d
sender	obj/user/faultevilhandler.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/faultnostack.asm	/^        sender = 0;$/;"	d
sender	obj/user/faultnostack.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/faultread.asm	/^        sender = 0;$/;"	d
sender	obj/user/faultread.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/faultreadkernel.asm	/^        sender = 0;$/;"	d
sender	obj/user/faultreadkernel.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/faultregs.asm	/^        sender = 0;$/;"	d
sender	obj/user/faultregs.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/faultwrite.asm	/^        sender = 0;$/;"	d
sender	obj/user/faultwrite.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/faultwritekernel.asm	/^        sender = 0;$/;"	d
sender	obj/user/faultwritekernel.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/forktree.asm	/^        sender = 0;$/;"	d
sender	obj/user/forktree.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/hello.asm	/^        sender = 0;$/;"	d
sender	obj/user/hello.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/icode.asm	/^        sender = 0;$/;"	d
sender	obj/user/icode.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/idle.asm	/^        sender = 0;$/;"	d
sender	obj/user/idle.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/init.asm	/^        sender = 0;$/;"	d
sender	obj/user/init.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/ls.asm	/^        sender = 0;$/;"	d
sender	obj/user/ls.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/lsfd.asm	/^        sender = 0;$/;"	d
sender	obj/user/lsfd.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/memlayout.asm	/^        sender = 0;$/;"	d
sender	obj/user/memlayout.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/num.asm	/^        sender = 0;$/;"	d
sender	obj/user/num.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/pingpong.asm	/^        sender = 0;$/;"	d
sender	obj/user/pingpong.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/pingpongs.asm	/^        sender = 0;$/;"	d
sender	obj/user/pingpongs.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/primes.asm	/^        sender = 0;$/;"	d
sender	obj/user/primes.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/primespipe.asm	/^        sender = 0;$/;"	d
sender	obj/user/primespipe.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/sh.asm	/^        sender = 0;$/;"	d
sender	obj/user/sh.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/sigcount.asm	/^        sender = 0;$/;"	d
sender	obj/user/sigcount.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/sigfact.asm	/^        sender = 0;$/;"	d
sender	obj/user/sigfact.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/sigpingpong.asm	/^        sender = 0;$/;"	d
sender	obj/user/sigpingpong.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/softint.asm	/^        sender = 0;$/;"	d
sender	obj/user/softint.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/spawnhello.asm	/^        sender = 0;$/;"	d
sender	obj/user/spawnhello.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/spin.asm	/^        sender = 0;$/;"	d
sender	obj/user/spin.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/stresssched.asm	/^        sender = 0;$/;"	d
sender	obj/user/stresssched.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/testbss.asm	/^        sender = 0;$/;"	d
sender	obj/user/testbss.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/testfdsharing.asm	/^        sender = 0;$/;"	d
sender	obj/user/testfdsharing.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/testfile.asm	/^        sender = 0;$/;"	d
sender	obj/user/testfile.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/testkbd.asm	/^        sender = 0;$/;"	d
sender	obj/user/testkbd.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/testpipe.asm	/^        sender = 0;$/;"	d
sender	obj/user/testpipe.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/testpiperace.asm	/^        sender = 0;$/;"	d
sender	obj/user/testpiperace.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/testpiperace2.asm	/^        sender = 0;$/;"	d
sender	obj/user/testpiperace2.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/testpteshare.asm	/^        sender = 0;$/;"	d
sender	obj/user/testpteshare.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/testshell.asm	/^        sender = 0;$/;"	d
sender	obj/user/testshell.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/testsignal.asm	/^        sender = 0;$/;"	d
sender	obj/user/testsignal.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/vdate.asm	/^        sender = 0;$/;"	d
sender	obj/user/vdate.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sender	obj/user/yield.asm	/^        sender = 0;$/;"	d
sender	obj/user/yield.asm	/^        sender = thisenv->env_ipc_from;$/;"	d
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
set_breakpoint_on_clock	grade-lab4	/^def set_breakpoint_on_clock(line):$/;"	f
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
setup_breakpoint	gradelib.py	/^def setup_breakpoint(runner, addr):$/;"	f
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
sigaction	inc/signal.h	/^struct sigaction$/;"	s
sigev	obj/kern/kernel.asm	/^            sigev = e->env_sigev + e->env_sigev_cnt;$/;"	d
sigev	obj/kern/kernel.asm	/^        sigev = e->env_sigev + e->env_sigev_cnt;$/;"	d
sigev_signo	inc/signal.h	/^    int sigev_signo;$/;"	m	struct:sigevent
sigev_value	inc/signal.h	/^    int sigev_value;$/;"	m	struct:sigevent
sigevent	inc/signal.h	/^struct sigevent$/;"	s
size	kern/alloc.h	/^		unsigned size; \/* size of this block *\/$/;"	m	struct:header::__anon3
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/date.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/memlayout.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/sigcount.asm	/^size_t$/;"	l
size_t	obj/user/sigfact.asm	/^size_t$/;"	l
size_t	obj/user/sigpingpong.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/testsignal.asm	/^size_t$/;"	l
size_t	obj/user/vdate.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
snprint_datetime	inc/time.h	/^void snprint_datetime(char *buf, int size, struct tm *tm)$/;"	f
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
space	kern/alloc.c	/^static uint8_t space[SPACE_SIZE];$/;"	v	file:
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin_initlock	kern/spinlock.h	25;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
srand	lib/random.c	/^srand(unsigned int seed)$/;"	f
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/date.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/memlayout.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sigcount.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sigfact.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sigpingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testsignal.asm	/^ssize_t$/;"	l
ssize_t	obj/user/vdate.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_info	inc/elf.h	/^    unsigned char	st_info;$/;"	m	struct:Elf32_Sym
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/elf.h	/^    uint32_t		st_name;$/;"	m	struct:Elf32_Sym
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_other	inc/elf.h	/^    unsigned char	st_other;$/;"	m	struct:Elf32_Sym
st_shndx	inc/elf.h	/^    uint16_t		st_shndx;$/;"	m	struct:Elf32_Sym
st_size	inc/elf.h	/^    uint32_t		st_size;$/;"	m	struct:Elf32_Sym
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
st_value	inc/elf.h	/^    uint32_t		st_value;$/;"	m	struct:Elf32_Sym
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/kern/kernel.asm	/^            start = i + 1;$/;"	d
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static inline int32_t$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static Header *freep = NULL; \/* start of free list *\/$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint64_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline int pit_expect_msb(unsigned char val, uint64_t *tscp, unsigned long *deltap)$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct spinlock lk = {0};$/;"	t
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void check_list(void)$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static inline int32_t$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static inline int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static inline int32_t$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/date.asm	/^static inline int32_t$/;"	l
static	obj/user/date.asm	/^static int$/;"	l
static	obj/user/date.asm	/^static long long$/;"	l
static	obj/user/date.asm	/^static ssize_t$/;"	l
static	obj/user/date.asm	/^static unsigned long long$/;"	l
static	obj/user/date.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline int32_t$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static inline int32_t$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static inline int32_t$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static inline int32_t$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static inline int32_t$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static inline int32_t$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static inline int32_t$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static inline int32_t$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline int32_t$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static inline int32_t$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static inline int32_t$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline int32_t$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static inline int32_t$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static inline int32_t$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static inline int32_t$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static inline int32_t$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static inline int32_t$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/memlayout.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/memlayout.asm	/^static inline int32_t$/;"	l
static	obj/user/memlayout.asm	/^static int$/;"	l
static	obj/user/memlayout.asm	/^static long long$/;"	l
static	obj/user/memlayout.asm	/^static ssize_t$/;"	l
static	obj/user/memlayout.asm	/^static unsigned long long$/;"	l
static	obj/user/memlayout.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static inline int32_t$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static inline int32_t$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static inline int32_t$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static inline int32_t$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/sigcount.asm	/^static inline int32_t$/;"	l
static	obj/user/sigcount.asm	/^static int$/;"	l
static	obj/user/sigcount.asm	/^static long long$/;"	l
static	obj/user/sigcount.asm	/^static ssize_t$/;"	l
static	obj/user/sigcount.asm	/^static unsigned long long$/;"	l
static	obj/user/sigcount.asm	/^static void$/;"	l
static	obj/user/sigfact.asm	/^static inline int32_t$/;"	l
static	obj/user/sigfact.asm	/^static int$/;"	l
static	obj/user/sigfact.asm	/^static long long$/;"	l
static	obj/user/sigfact.asm	/^static ssize_t$/;"	l
static	obj/user/sigfact.asm	/^static unsigned long long$/;"	l
static	obj/user/sigfact.asm	/^static void$/;"	l
static	obj/user/sigpingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sigpingpong.asm	/^static inline int32_t$/;"	l
static	obj/user/sigpingpong.asm	/^static int$/;"	l
static	obj/user/sigpingpong.asm	/^static long long$/;"	l
static	obj/user/sigpingpong.asm	/^static ssize_t$/;"	l
static	obj/user/sigpingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/sigpingpong.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline int32_t$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static inline int32_t$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static inline int32_t$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static inline int32_t$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline int32_t$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static inline int32_t$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static inline int32_t$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static inline int32_t$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static inline int32_t$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static inline int32_t$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static inline int32_t$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline void$/;"	l
static	obj/user/testpteshare.asm	/^static inline int32_t$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline void$/;"	l
static	obj/user/testshell.asm	/^static inline int32_t$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/testsignal.asm	/^static inline int32_t$/;"	l
static	obj/user/testsignal.asm	/^static int$/;"	l
static	obj/user/testsignal.asm	/^static long long$/;"	l
static	obj/user/testsignal.asm	/^static ssize_t$/;"	l
static	obj/user/testsignal.asm	/^static unsigned long long$/;"	l
static	obj/user/testsignal.asm	/^static void$/;"	l
static	obj/user/vdate.asm	/^static inline int32_t$/;"	l
static	obj/user/vdate.asm	/^static int$/;"	l
static	obj/user/vdate.asm	/^static long long$/;"	l
static	obj/user/vdate.asm	/^static ssize_t$/;"	l
static	obj/user/vdate.asm	/^static unsigned long long$/;"	l
static	obj/user/vdate.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline int32_t$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
status	obj/kern/kernel.asm	/^    status = inb(IO_RTC_DATA);$/;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str	prog/test2.c	8;"	d	file:
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_exit	kern/entry.S	/^sys_exit:$/;"	l
sys_exit	lib/libmain.c	/^void (* volatile sys_exit)(void);$/;"	v
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_gettime	kern/syscall.c	/^sys_gettime(void)$/;"	f	file:
sys_gettime	lib/syscall.c	/^int sys_gettime(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_sigaction	kern/syscall.c	/^sys_sigaction(int signo, struct sigaction *act)$/;"	f	file:
sys_sigaction	lib/syscall.c	/^sys_sigaction(int signo, struct sigaction *act)$/;"	f
sys_sigqueue	kern/syscall.c	/^sys_sigqueue(envid_t envid, int signo, int value)$/;"	f	file:
sys_sigqueue	lib/syscall.c	/^sys_sigqueue(envid_t envid, int signo, int value)$/;"	f
sys_sigwait	kern/syscall.c	/^sys_sigwait(int *signo)$/;"	f	file:
sys_sigwait	lib/syscall.c	/^sys_sigwait(int *signo)$/;"	f
sys_yield	kern/entry.S	/^sys_yield:$/;"	l
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
sys_yield	prog/test1.c	/^void (* volatile sys_yield)(void);$/;"	v
sys_yield	prog/test2.c	/^void (* volatile sys_yield)(void);$/;"	v
sys_yield	prog/test3.c	/^void (* volatile sys_yield)(void);$/;"	v
sys_yield	prog/test5.c	/^void (* volatile sys_yield)(void);$/;"	v
sys_yield	prog/test6.c	/^void (* volatile sys_yield)(void);$/;"	v
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
terminate	gradelib.py	/^        def terminate(out):$/;"	f	function:stop_breakpoint.terminate_at_breakpoint
terminate_at_breakpoint	gradelib.py	/^    def terminate_at_breakpoint(runner):$/;"	f	function:stop_breakpoint
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_alloc	kern/alloc.c	/^test_alloc(uint8_t nbytes)$/;"	f
test_alloc	prog/test5.c	/^void * (* volatile test_alloc) (uint8_t nbytes);$/;"	v
test_alloc	prog/test6.c	/^void * (* volatile test_alloc) (uint8_t nbytes);$/;"	v
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab8	/^def test_badsegment():$/;"	f
test_bind_functions	grade-lab3	/^def test_bind_functions():$/;"	f
test_breakpoint	grade-lab8	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab8	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab8	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab6	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab6	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab6	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab6	/^def test_check_page_installed_pgdir():$/;"	f
test_cli	grade-lab4	/^def test_cli():$/;"	f
test_date	grade-lab12	/^def test_date():$/;"	f
test_divzero	grade-lab8	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab9	/^def test_dumbfork():$/;"	f
test_enabled_interrupts	grade-lab4	/^def test_enabled_interrupts():$/;"	f
test_env	grade-lab3	/^def test_env():$/;"	f
test_envrun	grade-lab3	/^def test_envrun():$/;"	f
test_evilhello	grade-lab8	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab9	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab9	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab9	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab9	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab9	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab9	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab8	/^def test_faultread():$/;"	f
test_faultread	grade-lab9	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab8	/^def test_faultreadkernel():$/;"	f
test_faultwrite	grade-lab8	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab9	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab8	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab11	/^def test_fd_share():$/;"	f
test_forktree	grade-lab9	/^def test_forktree():$/;"	f
test_free	kern/alloc.c	/^test_free(void *ap)$/;"	f
test_free	prog/test5.c	/^void (* volatile test_free) (void *ap);$/;"	v
test_free	prog/test6.c	/^void (* volatile test_free) (void *ap);$/;"	v
test_frequency	grade-lab4	/^def test_frequency():$/;"	f
test_fs	grade-lab10	/^def test_fs():$/;"	f
test_hello	grade-lab8	/^def test_hello():$/;"	f
test_icode	grade-lab11	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab3	/^def test_jos():$/;"	f
test_jos	grade-lab4	/^def test_jos():$/;"	f
test_jos	grade-lab6	/^def test_jos():$/;"	f
test_load_icode	grade-lab3	/^def test_load_icode():$/;"	f
test_pingpong	grade-lab9	/^def test_pingpong():$/;"	f
test_primes	grade-lab9	/^def test_primes():$/;"	f
test_primespipe	grade-lab11	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab11	/^def test_pte_share():$/;"	f
test_rec	prog/test5.c	/^test_rec(void)$/;"	f
test_rec	prog/test6.c	/^test_rec(void)$/;"	f
test_rtc	grade-lab4	/^def test_rtc():$/;"	f
test_softint	grade-lab8	/^def test_softint():$/;"	f
test_spawn	grade-lab11	/^def test_spawn():$/;"	f
test_spin	grade-lab9	/^def test_spin():$/;"	f
test_sys_exit	grade-lab3	/^def test_sys_exit():$/;"	f
test_testbss	grade-lab8	/^def test_testbss():$/;"	f
test_testfile	grade-lab10	/^def test_testfile():$/;"	f
test_testshell	grade-lab11	/^def test_testshell():$/;"	f
test_vdate	grade-lab12	/^def test_vdate():$/;"	f
tf	obj/kern/kernel.asm	/^	tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/date.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/forktree.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/memlayout.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/memlayout.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpong.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpongs.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primes.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primespipe.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sh.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sigcount.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sigfact.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sigpingpong.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sigpingpong.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spin.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/stresssched.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testfdsharing.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpipe.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpiperace.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpiperace2.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpteshare.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testshell.asm	/^        thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testsignal.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/vdate.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
time_diff	grade-lab4	/^time_diff = []$/;"	v
timer_start	kern/tsc.c	/^void timer_start(void)$/;"	f
timer_stop	kern/tsc.c	/^void timer_stop(void)$/;"	f
timestamp	inc/time.h	/^int timestamp(struct tm *time)$/;"	f
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
tm	inc/time.h	/^struct tm$/;"	s
tm_hour	inc/time.h	/^    int tm_hour;                  \/* Hours.       [0-23] *\/$/;"	m	struct:tm
tm_mday	inc/time.h	/^    int tm_mday;                  \/* Day.         [1-31] *\/$/;"	m	struct:tm
tm_min	inc/time.h	/^    int tm_min;                   \/* Minutes.     [0-59] *\/$/;"	m	struct:tm
tm_mon	inc/time.h	/^    int tm_mon;                   \/* Month.       [0-11] *\/$/;"	m	struct:tm
tm_sec	inc/time.h	/^    int tm_sec;                   \/* Seconds.     [0-60] *\/$/;"	m	struct:tm
tm_year	inc/time.h	/^    int tm_year;                  \/* Year - 1900.  *\/$/;"	m	struct:tm
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon9
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
tsc	kern/tsc.c	/^static uint64_t tsc = 0;$/;"	v	file:
tsc	obj/kern/kernel.asm	/^		tsc = read_tsc();$/;"	d
tsc	obj/kern/kernel.asm	/^    tsc = 0;$/;"	d
tsc	obj/kern/kernel.asm	/^    tsc = read_tsc();$/;"	d
tsc_calibrate	kern/tsc.c	/^void tsc_calibrate(void)$/;"	f
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	obj/kern/kernel.asm	/^uint8_t$/;"	l
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
uintptr_t	obj/kern/kernel.asm	/^uintptr_t$/;"	l
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	prog/test1.c	/^umain( int argc, char **argv )$/;"	f
umain	prog/test2.c	/^umain( int argc, char **argv )$/;"	f
umain	prog/test3.c	/^umain( int argc, char **argv )$/;"	f
umain	prog/test4.c	/^umain( int argc, char **argv )$/;"	f
umain	prog/test5.c	/^umain(int argc, char **argv)$/;"	f
umain	prog/test6.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/date.c	/^void umain (int argc, char **argv) {$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/memlayout.c	/^umain(int argc, char *argv[])$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sigcount.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sigfact.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sigpingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testsignal.c	/^umain(int argc, char **argv)$/;"	f
umain	user/vdate.c	/^void umain (int argc, char **argv) {$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^            user_mem_check_addr = addr;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^        user_mem_check_addr = ULIM > start ? ULIM : start;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/date.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/memlayout.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sigcount.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sigfact.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sigpingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testsignal.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/vdate.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
view_memory	gradelib.py	/^    def view_memory(self, addr, length):$/;"	m	class:GDBClient
view_regs	gradelib.py	/^    def view_regs(self):$/;"	m	class:GDBClient
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void mktime(int time, struct tm *tm)$/;"	l
void	obj/kern/kernel.asm	/^void print_datetime(struct tm *tm)$/;"	l
void	obj/kern/kernel.asm	/^void print_time(unsigned seconds)$/;"	l
void	obj/kern/kernel.asm	/^void print_timer_error(void)$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void snprint_datetime(char *buf, int size, struct tm *tm)$/;"	l
void	obj/kern/kernel.asm	/^void timer_start(void)$/;"	l
void	obj/kern/kernel.asm	/^void timer_stop(void)$/;"	l
void	obj/kern/kernel.asm	/^void tsc_calibrate(void)$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/date.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/date.asm	/^void *$/;"	l
void	obj/user/date.asm	/^void mktime(int time, struct tm *tm)$/;"	l
void	obj/user/date.asm	/^void print_datetime(struct tm *tm)$/;"	l
void	obj/user/date.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/date.asm	/^void snprint_datetime(char *buf, int size, struct tm *tm)$/;"	l
void	obj/user/date.asm	/^void umain (int argc, char **argv) {$/;"	l
void	obj/user/date.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/memlayout.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/memlayout.asm	/^void *$/;"	l
void	obj/user/memlayout.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/memlayout.asm	/^void$/;"	l
void	obj/user/num.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/sigcount.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/sigcount.asm	/^void *$/;"	l
void	obj/user/sigcount.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sigcount.asm	/^void$/;"	l
void	obj/user/sigfact.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/sigfact.asm	/^void *$/;"	l
void	obj/user/sigfact.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sigfact.asm	/^void$/;"	l
void	obj/user/sigpingpong.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/sigpingpong.asm	/^void *$/;"	l
void	obj/user/sigpingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sigpingpong.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/testsignal.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/testsignal.asm	/^void *$/;"	l
void	obj/user/testsignal.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testsignal.asm	/^void$/;"	l
void	obj/user/vdate.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/vdate.asm	/^void *$/;"	l
void	obj/user/vdate.asm	/^void mktime(int time, struct tm *tm)$/;"	l
void	obj/user/vdate.asm	/^void print_datetime(struct tm *tm)$/;"	l
void	obj/user/vdate.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/vdate.asm	/^void snprint_datetime(char *buf, int size, struct tm *tm)$/;"	l
void	obj/user/vdate.asm	/^void umain (int argc, char **argv) {$/;"	l
void	obj/user/vdate.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void (* volatile sys_exit)(void);$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
vsys	kern/pmap.c	/^int *vsys;  \/\/ Virtual syscall space$/;"	v
vsys	obj/kern/kernel.asm	/^    vsys = boot_alloc(NVSYSCALLS * sizeof(*vsys));$/;"	d
vsys_gettime	lib/vsyscall.c	/^int vsys_gettime(void)$/;"	f
vsys_sigreturn	lib/vsyscall.c	/^vsys_sigreturn()$/;"	f
vsyscall	lib/vsyscall.c	/^vsyscall(int num)$/;"	f	file:
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;                            \/\/ CGA_BUF has fixed address.$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
who	obj/user/sigpingpong.asm	/^        who = parent;$/;"	d
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/date.asm	/^				width = 0;$/;"	d
width	obj/user/date.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/date.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/memlayout.asm	/^				width = 0;$/;"	d
width	obj/user/memlayout.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/memlayout.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/sigcount.asm	/^				width = 0;$/;"	d
width	obj/user/sigcount.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sigcount.asm	/^		width = -1;$/;"	d
width	obj/user/sigfact.asm	/^				width = 0;$/;"	d
width	obj/user/sigfact.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sigfact.asm	/^		width = -1;$/;"	d
width	obj/user/sigpingpong.asm	/^				width = 0;$/;"	d
width	obj/user/sigpingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sigpingpong.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/testsignal.asm	/^				width = 0;$/;"	d
width	obj/user/testsignal.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testsignal.asm	/^		width = -1;$/;"	d
width	obj/user/vdate.asm	/^				width = 0;$/;"	d
width	obj/user/vdate.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/vdate.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon1	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
x	kern/alloc.h	/^	Align x; \/* force alignment of blocks *\/$/;"	m	union:header
xc	prog/test2.c	9;"	d	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
xstr	prog/test2.c	7;"	d	file:
year	obj/kern/kernel.asm	/^          year = mc146818_read(0x09);$/;"	d
year	obj/kern/kernel.asm	/^    year = (year & 0x0F) + ((year \/ 16) * 10);$/;"	d
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
